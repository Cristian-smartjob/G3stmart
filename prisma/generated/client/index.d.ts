
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model AFPInstitution
 * 
 */
export type AFPInstitution = $Result.DefaultSelection<Prisma.$AFPInstitutionPayload>
/**
 * Model CurrencyType
 * 
 */
export type CurrencyType = $Result.DefaultSelection<Prisma.$CurrencyTypePayload>
/**
 * Model Client
 * 
 */
export type Client = $Result.DefaultSelection<Prisma.$ClientPayload>
/**
 * Model Contact
 * 
 */
export type Contact = $Result.DefaultSelection<Prisma.$ContactPayload>
/**
 * Model HealthInstitution
 * 
 */
export type HealthInstitution = $Result.DefaultSelection<Prisma.$HealthInstitutionPayload>
/**
 * Model Holidays
 * 
 */
export type Holidays = $Result.DefaultSelection<Prisma.$HolidaysPayload>
/**
 * Model JobTitle
 * 
 */
export type JobTitle = $Result.DefaultSelection<Prisma.$JobTitlePayload>
/**
 * Model Role
 * 
 */
export type Role = $Result.DefaultSelection<Prisma.$RolePayload>
/**
 * Model Seniority
 * 
 */
export type Seniority = $Result.DefaultSelection<Prisma.$SeniorityPayload>
/**
 * Model SkillLevel
 * 
 */
export type SkillLevel = $Result.DefaultSelection<Prisma.$SkillLevelPayload>
/**
 * Model TechnicalsStacks
 * 
 */
export type TechnicalsStacks = $Result.DefaultSelection<Prisma.$TechnicalsStacksPayload>
/**
 * Model Price
 * 
 */
export type Price = $Result.DefaultSelection<Prisma.$PricePayload>
/**
 * Model People
 * 
 */
export type People = $Result.DefaultSelection<Prisma.$PeoplePayload>
/**
 * Model LeaveDays
 * 
 */
export type LeaveDays = $Result.DefaultSelection<Prisma.$LeaveDaysPayload>
/**
 * Model PreInvoice
 * 
 */
export type PreInvoice = $Result.DefaultSelection<Prisma.$PreInvoicePayload>
/**
 * Model PreInvoiceDetail
 * 
 */
export type PreInvoiceDetail = $Result.DefaultSelection<Prisma.$PreInvoiceDetailPayload>
/**
 * Model Project
 * 
 */
export type Project = $Result.DefaultSelection<Prisma.$ProjectPayload>
/**
 * Model CurrencyHistory
 * 
 */
export type CurrencyHistory = $Result.DefaultSelection<Prisma.$CurrencyHistoryPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more AFPInstitutions
 * const aFPInstitutions = await prisma.aFPInstitution.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more AFPInstitutions
   * const aFPInstitutions = await prisma.aFPInstitution.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.aFPInstitution`: Exposes CRUD operations for the **AFPInstitution** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AFPInstitutions
    * const aFPInstitutions = await prisma.aFPInstitution.findMany()
    * ```
    */
  get aFPInstitution(): Prisma.AFPInstitutionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.currencyType`: Exposes CRUD operations for the **CurrencyType** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CurrencyTypes
    * const currencyTypes = await prisma.currencyType.findMany()
    * ```
    */
  get currencyType(): Prisma.CurrencyTypeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.client`: Exposes CRUD operations for the **Client** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clients
    * const clients = await prisma.client.findMany()
    * ```
    */
  get client(): Prisma.ClientDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.contact`: Exposes CRUD operations for the **Contact** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Contacts
    * const contacts = await prisma.contact.findMany()
    * ```
    */
  get contact(): Prisma.ContactDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.healthInstitution`: Exposes CRUD operations for the **HealthInstitution** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more HealthInstitutions
    * const healthInstitutions = await prisma.healthInstitution.findMany()
    * ```
    */
  get healthInstitution(): Prisma.HealthInstitutionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.holidays`: Exposes CRUD operations for the **Holidays** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Holidays
    * const holidays = await prisma.holidays.findMany()
    * ```
    */
  get holidays(): Prisma.HolidaysDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.jobTitle`: Exposes CRUD operations for the **JobTitle** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more JobTitles
    * const jobTitles = await prisma.jobTitle.findMany()
    * ```
    */
  get jobTitle(): Prisma.JobTitleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.role`: Exposes CRUD operations for the **Role** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.role.findMany()
    * ```
    */
  get role(): Prisma.RoleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.seniority`: Exposes CRUD operations for the **Seniority** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Seniorities
    * const seniorities = await prisma.seniority.findMany()
    * ```
    */
  get seniority(): Prisma.SeniorityDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.skillLevel`: Exposes CRUD operations for the **SkillLevel** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SkillLevels
    * const skillLevels = await prisma.skillLevel.findMany()
    * ```
    */
  get skillLevel(): Prisma.SkillLevelDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.technicalsStacks`: Exposes CRUD operations for the **TechnicalsStacks** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TechnicalsStacks
    * const technicalsStacks = await prisma.technicalsStacks.findMany()
    * ```
    */
  get technicalsStacks(): Prisma.TechnicalsStacksDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.price`: Exposes CRUD operations for the **Price** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Prices
    * const prices = await prisma.price.findMany()
    * ```
    */
  get price(): Prisma.PriceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.people`: Exposes CRUD operations for the **People** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more People
    * const people = await prisma.people.findMany()
    * ```
    */
  get people(): Prisma.PeopleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.leaveDays`: Exposes CRUD operations for the **LeaveDays** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LeaveDays
    * const leaveDays = await prisma.leaveDays.findMany()
    * ```
    */
  get leaveDays(): Prisma.LeaveDaysDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.preInvoice`: Exposes CRUD operations for the **PreInvoice** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PreInvoices
    * const preInvoices = await prisma.preInvoice.findMany()
    * ```
    */
  get preInvoice(): Prisma.PreInvoiceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.preInvoiceDetail`: Exposes CRUD operations for the **PreInvoiceDetail** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PreInvoiceDetails
    * const preInvoiceDetails = await prisma.preInvoiceDetail.findMany()
    * ```
    */
  get preInvoiceDetail(): Prisma.PreInvoiceDetailDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.project`: Exposes CRUD operations for the **Project** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Projects
    * const projects = await prisma.project.findMany()
    * ```
    */
  get project(): Prisma.ProjectDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.currencyHistory`: Exposes CRUD operations for the **CurrencyHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CurrencyHistories
    * const currencyHistories = await prisma.currencyHistory.findMany()
    * ```
    */
  get currencyHistory(): Prisma.CurrencyHistoryDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.7.0
   * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    AFPInstitution: 'AFPInstitution',
    CurrencyType: 'CurrencyType',
    Client: 'Client',
    Contact: 'Contact',
    HealthInstitution: 'HealthInstitution',
    Holidays: 'Holidays',
    JobTitle: 'JobTitle',
    Role: 'Role',
    Seniority: 'Seniority',
    SkillLevel: 'SkillLevel',
    TechnicalsStacks: 'TechnicalsStacks',
    Price: 'Price',
    People: 'People',
    LeaveDays: 'LeaveDays',
    PreInvoice: 'PreInvoice',
    PreInvoiceDetail: 'PreInvoiceDetail',
    Project: 'Project',
    CurrencyHistory: 'CurrencyHistory'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "aFPInstitution" | "currencyType" | "client" | "contact" | "healthInstitution" | "holidays" | "jobTitle" | "role" | "seniority" | "skillLevel" | "technicalsStacks" | "price" | "people" | "leaveDays" | "preInvoice" | "preInvoiceDetail" | "project" | "currencyHistory"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      AFPInstitution: {
        payload: Prisma.$AFPInstitutionPayload<ExtArgs>
        fields: Prisma.AFPInstitutionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AFPInstitutionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AFPInstitutionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AFPInstitutionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AFPInstitutionPayload>
          }
          findFirst: {
            args: Prisma.AFPInstitutionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AFPInstitutionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AFPInstitutionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AFPInstitutionPayload>
          }
          findMany: {
            args: Prisma.AFPInstitutionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AFPInstitutionPayload>[]
          }
          create: {
            args: Prisma.AFPInstitutionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AFPInstitutionPayload>
          }
          createMany: {
            args: Prisma.AFPInstitutionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AFPInstitutionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AFPInstitutionPayload>[]
          }
          delete: {
            args: Prisma.AFPInstitutionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AFPInstitutionPayload>
          }
          update: {
            args: Prisma.AFPInstitutionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AFPInstitutionPayload>
          }
          deleteMany: {
            args: Prisma.AFPInstitutionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AFPInstitutionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AFPInstitutionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AFPInstitutionPayload>[]
          }
          upsert: {
            args: Prisma.AFPInstitutionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AFPInstitutionPayload>
          }
          aggregate: {
            args: Prisma.AFPInstitutionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAFPInstitution>
          }
          groupBy: {
            args: Prisma.AFPInstitutionGroupByArgs<ExtArgs>
            result: $Utils.Optional<AFPInstitutionGroupByOutputType>[]
          }
          count: {
            args: Prisma.AFPInstitutionCountArgs<ExtArgs>
            result: $Utils.Optional<AFPInstitutionCountAggregateOutputType> | number
          }
        }
      }
      CurrencyType: {
        payload: Prisma.$CurrencyTypePayload<ExtArgs>
        fields: Prisma.CurrencyTypeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CurrencyTypeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyTypePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CurrencyTypeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyTypePayload>
          }
          findFirst: {
            args: Prisma.CurrencyTypeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyTypePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CurrencyTypeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyTypePayload>
          }
          findMany: {
            args: Prisma.CurrencyTypeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyTypePayload>[]
          }
          create: {
            args: Prisma.CurrencyTypeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyTypePayload>
          }
          createMany: {
            args: Prisma.CurrencyTypeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CurrencyTypeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyTypePayload>[]
          }
          delete: {
            args: Prisma.CurrencyTypeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyTypePayload>
          }
          update: {
            args: Prisma.CurrencyTypeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyTypePayload>
          }
          deleteMany: {
            args: Prisma.CurrencyTypeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CurrencyTypeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CurrencyTypeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyTypePayload>[]
          }
          upsert: {
            args: Prisma.CurrencyTypeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyTypePayload>
          }
          aggregate: {
            args: Prisma.CurrencyTypeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCurrencyType>
          }
          groupBy: {
            args: Prisma.CurrencyTypeGroupByArgs<ExtArgs>
            result: $Utils.Optional<CurrencyTypeGroupByOutputType>[]
          }
          count: {
            args: Prisma.CurrencyTypeCountArgs<ExtArgs>
            result: $Utils.Optional<CurrencyTypeCountAggregateOutputType> | number
          }
        }
      }
      Client: {
        payload: Prisma.$ClientPayload<ExtArgs>
        fields: Prisma.ClientFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClientFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClientFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          findFirst: {
            args: Prisma.ClientFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClientFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          findMany: {
            args: Prisma.ClientFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>[]
          }
          create: {
            args: Prisma.ClientCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          createMany: {
            args: Prisma.ClientCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClientCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>[]
          }
          delete: {
            args: Prisma.ClientDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          update: {
            args: Prisma.ClientUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          deleteMany: {
            args: Prisma.ClientDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClientUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ClientUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>[]
          }
          upsert: {
            args: Prisma.ClientUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          aggregate: {
            args: Prisma.ClientAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClient>
          }
          groupBy: {
            args: Prisma.ClientGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClientGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClientCountArgs<ExtArgs>
            result: $Utils.Optional<ClientCountAggregateOutputType> | number
          }
        }
      }
      Contact: {
        payload: Prisma.$ContactPayload<ExtArgs>
        fields: Prisma.ContactFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ContactFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ContactFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          findFirst: {
            args: Prisma.ContactFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ContactFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          findMany: {
            args: Prisma.ContactFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>[]
          }
          create: {
            args: Prisma.ContactCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          createMany: {
            args: Prisma.ContactCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ContactCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>[]
          }
          delete: {
            args: Prisma.ContactDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          update: {
            args: Prisma.ContactUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          deleteMany: {
            args: Prisma.ContactDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ContactUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ContactUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>[]
          }
          upsert: {
            args: Prisma.ContactUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          aggregate: {
            args: Prisma.ContactAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateContact>
          }
          groupBy: {
            args: Prisma.ContactGroupByArgs<ExtArgs>
            result: $Utils.Optional<ContactGroupByOutputType>[]
          }
          count: {
            args: Prisma.ContactCountArgs<ExtArgs>
            result: $Utils.Optional<ContactCountAggregateOutputType> | number
          }
        }
      }
      HealthInstitution: {
        payload: Prisma.$HealthInstitutionPayload<ExtArgs>
        fields: Prisma.HealthInstitutionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HealthInstitutionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthInstitutionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HealthInstitutionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthInstitutionPayload>
          }
          findFirst: {
            args: Prisma.HealthInstitutionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthInstitutionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HealthInstitutionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthInstitutionPayload>
          }
          findMany: {
            args: Prisma.HealthInstitutionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthInstitutionPayload>[]
          }
          create: {
            args: Prisma.HealthInstitutionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthInstitutionPayload>
          }
          createMany: {
            args: Prisma.HealthInstitutionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.HealthInstitutionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthInstitutionPayload>[]
          }
          delete: {
            args: Prisma.HealthInstitutionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthInstitutionPayload>
          }
          update: {
            args: Prisma.HealthInstitutionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthInstitutionPayload>
          }
          deleteMany: {
            args: Prisma.HealthInstitutionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HealthInstitutionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.HealthInstitutionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthInstitutionPayload>[]
          }
          upsert: {
            args: Prisma.HealthInstitutionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthInstitutionPayload>
          }
          aggregate: {
            args: Prisma.HealthInstitutionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHealthInstitution>
          }
          groupBy: {
            args: Prisma.HealthInstitutionGroupByArgs<ExtArgs>
            result: $Utils.Optional<HealthInstitutionGroupByOutputType>[]
          }
          count: {
            args: Prisma.HealthInstitutionCountArgs<ExtArgs>
            result: $Utils.Optional<HealthInstitutionCountAggregateOutputType> | number
          }
        }
      }
      Holidays: {
        payload: Prisma.$HolidaysPayload<ExtArgs>
        fields: Prisma.HolidaysFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HolidaysFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HolidaysPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HolidaysFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HolidaysPayload>
          }
          findFirst: {
            args: Prisma.HolidaysFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HolidaysPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HolidaysFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HolidaysPayload>
          }
          findMany: {
            args: Prisma.HolidaysFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HolidaysPayload>[]
          }
          create: {
            args: Prisma.HolidaysCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HolidaysPayload>
          }
          createMany: {
            args: Prisma.HolidaysCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.HolidaysCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HolidaysPayload>[]
          }
          delete: {
            args: Prisma.HolidaysDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HolidaysPayload>
          }
          update: {
            args: Prisma.HolidaysUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HolidaysPayload>
          }
          deleteMany: {
            args: Prisma.HolidaysDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HolidaysUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.HolidaysUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HolidaysPayload>[]
          }
          upsert: {
            args: Prisma.HolidaysUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HolidaysPayload>
          }
          aggregate: {
            args: Prisma.HolidaysAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHolidays>
          }
          groupBy: {
            args: Prisma.HolidaysGroupByArgs<ExtArgs>
            result: $Utils.Optional<HolidaysGroupByOutputType>[]
          }
          count: {
            args: Prisma.HolidaysCountArgs<ExtArgs>
            result: $Utils.Optional<HolidaysCountAggregateOutputType> | number
          }
        }
      }
      JobTitle: {
        payload: Prisma.$JobTitlePayload<ExtArgs>
        fields: Prisma.JobTitleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.JobTitleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobTitlePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.JobTitleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobTitlePayload>
          }
          findFirst: {
            args: Prisma.JobTitleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobTitlePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.JobTitleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobTitlePayload>
          }
          findMany: {
            args: Prisma.JobTitleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobTitlePayload>[]
          }
          create: {
            args: Prisma.JobTitleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobTitlePayload>
          }
          createMany: {
            args: Prisma.JobTitleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.JobTitleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobTitlePayload>[]
          }
          delete: {
            args: Prisma.JobTitleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobTitlePayload>
          }
          update: {
            args: Prisma.JobTitleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobTitlePayload>
          }
          deleteMany: {
            args: Prisma.JobTitleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.JobTitleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.JobTitleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobTitlePayload>[]
          }
          upsert: {
            args: Prisma.JobTitleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobTitlePayload>
          }
          aggregate: {
            args: Prisma.JobTitleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateJobTitle>
          }
          groupBy: {
            args: Prisma.JobTitleGroupByArgs<ExtArgs>
            result: $Utils.Optional<JobTitleGroupByOutputType>[]
          }
          count: {
            args: Prisma.JobTitleCountArgs<ExtArgs>
            result: $Utils.Optional<JobTitleCountAggregateOutputType> | number
          }
        }
      }
      Role: {
        payload: Prisma.$RolePayload<ExtArgs>
        fields: Prisma.RoleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RoleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RoleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findFirst: {
            args: Prisma.RoleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RoleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findMany: {
            args: Prisma.RoleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          create: {
            args: Prisma.RoleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          createMany: {
            args: Prisma.RoleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RoleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          delete: {
            args: Prisma.RoleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          update: {
            args: Prisma.RoleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          deleteMany: {
            args: Prisma.RoleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RoleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RoleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          upsert: {
            args: Prisma.RoleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          aggregate: {
            args: Prisma.RoleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRole>
          }
          groupBy: {
            args: Prisma.RoleGroupByArgs<ExtArgs>
            result: $Utils.Optional<RoleGroupByOutputType>[]
          }
          count: {
            args: Prisma.RoleCountArgs<ExtArgs>
            result: $Utils.Optional<RoleCountAggregateOutputType> | number
          }
        }
      }
      Seniority: {
        payload: Prisma.$SeniorityPayload<ExtArgs>
        fields: Prisma.SeniorityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SeniorityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeniorityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SeniorityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeniorityPayload>
          }
          findFirst: {
            args: Prisma.SeniorityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeniorityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SeniorityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeniorityPayload>
          }
          findMany: {
            args: Prisma.SeniorityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeniorityPayload>[]
          }
          create: {
            args: Prisma.SeniorityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeniorityPayload>
          }
          createMany: {
            args: Prisma.SeniorityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SeniorityCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeniorityPayload>[]
          }
          delete: {
            args: Prisma.SeniorityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeniorityPayload>
          }
          update: {
            args: Prisma.SeniorityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeniorityPayload>
          }
          deleteMany: {
            args: Prisma.SeniorityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SeniorityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SeniorityUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeniorityPayload>[]
          }
          upsert: {
            args: Prisma.SeniorityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeniorityPayload>
          }
          aggregate: {
            args: Prisma.SeniorityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSeniority>
          }
          groupBy: {
            args: Prisma.SeniorityGroupByArgs<ExtArgs>
            result: $Utils.Optional<SeniorityGroupByOutputType>[]
          }
          count: {
            args: Prisma.SeniorityCountArgs<ExtArgs>
            result: $Utils.Optional<SeniorityCountAggregateOutputType> | number
          }
        }
      }
      SkillLevel: {
        payload: Prisma.$SkillLevelPayload<ExtArgs>
        fields: Prisma.SkillLevelFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SkillLevelFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkillLevelPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SkillLevelFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkillLevelPayload>
          }
          findFirst: {
            args: Prisma.SkillLevelFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkillLevelPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SkillLevelFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkillLevelPayload>
          }
          findMany: {
            args: Prisma.SkillLevelFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkillLevelPayload>[]
          }
          create: {
            args: Prisma.SkillLevelCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkillLevelPayload>
          }
          createMany: {
            args: Prisma.SkillLevelCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SkillLevelCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkillLevelPayload>[]
          }
          delete: {
            args: Prisma.SkillLevelDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkillLevelPayload>
          }
          update: {
            args: Prisma.SkillLevelUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkillLevelPayload>
          }
          deleteMany: {
            args: Prisma.SkillLevelDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SkillLevelUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SkillLevelUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkillLevelPayload>[]
          }
          upsert: {
            args: Prisma.SkillLevelUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkillLevelPayload>
          }
          aggregate: {
            args: Prisma.SkillLevelAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSkillLevel>
          }
          groupBy: {
            args: Prisma.SkillLevelGroupByArgs<ExtArgs>
            result: $Utils.Optional<SkillLevelGroupByOutputType>[]
          }
          count: {
            args: Prisma.SkillLevelCountArgs<ExtArgs>
            result: $Utils.Optional<SkillLevelCountAggregateOutputType> | number
          }
        }
      }
      TechnicalsStacks: {
        payload: Prisma.$TechnicalsStacksPayload<ExtArgs>
        fields: Prisma.TechnicalsStacksFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TechnicalsStacksFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TechnicalsStacksPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TechnicalsStacksFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TechnicalsStacksPayload>
          }
          findFirst: {
            args: Prisma.TechnicalsStacksFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TechnicalsStacksPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TechnicalsStacksFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TechnicalsStacksPayload>
          }
          findMany: {
            args: Prisma.TechnicalsStacksFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TechnicalsStacksPayload>[]
          }
          create: {
            args: Prisma.TechnicalsStacksCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TechnicalsStacksPayload>
          }
          createMany: {
            args: Prisma.TechnicalsStacksCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TechnicalsStacksCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TechnicalsStacksPayload>[]
          }
          delete: {
            args: Prisma.TechnicalsStacksDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TechnicalsStacksPayload>
          }
          update: {
            args: Prisma.TechnicalsStacksUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TechnicalsStacksPayload>
          }
          deleteMany: {
            args: Prisma.TechnicalsStacksDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TechnicalsStacksUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TechnicalsStacksUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TechnicalsStacksPayload>[]
          }
          upsert: {
            args: Prisma.TechnicalsStacksUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TechnicalsStacksPayload>
          }
          aggregate: {
            args: Prisma.TechnicalsStacksAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTechnicalsStacks>
          }
          groupBy: {
            args: Prisma.TechnicalsStacksGroupByArgs<ExtArgs>
            result: $Utils.Optional<TechnicalsStacksGroupByOutputType>[]
          }
          count: {
            args: Prisma.TechnicalsStacksCountArgs<ExtArgs>
            result: $Utils.Optional<TechnicalsStacksCountAggregateOutputType> | number
          }
        }
      }
      Price: {
        payload: Prisma.$PricePayload<ExtArgs>
        fields: Prisma.PriceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PriceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PriceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload>
          }
          findFirst: {
            args: Prisma.PriceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PriceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload>
          }
          findMany: {
            args: Prisma.PriceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload>[]
          }
          create: {
            args: Prisma.PriceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload>
          }
          createMany: {
            args: Prisma.PriceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PriceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload>[]
          }
          delete: {
            args: Prisma.PriceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload>
          }
          update: {
            args: Prisma.PriceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload>
          }
          deleteMany: {
            args: Prisma.PriceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PriceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PriceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload>[]
          }
          upsert: {
            args: Prisma.PriceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload>
          }
          aggregate: {
            args: Prisma.PriceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePrice>
          }
          groupBy: {
            args: Prisma.PriceGroupByArgs<ExtArgs>
            result: $Utils.Optional<PriceGroupByOutputType>[]
          }
          count: {
            args: Prisma.PriceCountArgs<ExtArgs>
            result: $Utils.Optional<PriceCountAggregateOutputType> | number
          }
        }
      }
      People: {
        payload: Prisma.$PeoplePayload<ExtArgs>
        fields: Prisma.PeopleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PeopleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PeoplePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PeopleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PeoplePayload>
          }
          findFirst: {
            args: Prisma.PeopleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PeoplePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PeopleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PeoplePayload>
          }
          findMany: {
            args: Prisma.PeopleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PeoplePayload>[]
          }
          create: {
            args: Prisma.PeopleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PeoplePayload>
          }
          createMany: {
            args: Prisma.PeopleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PeopleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PeoplePayload>[]
          }
          delete: {
            args: Prisma.PeopleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PeoplePayload>
          }
          update: {
            args: Prisma.PeopleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PeoplePayload>
          }
          deleteMany: {
            args: Prisma.PeopleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PeopleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PeopleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PeoplePayload>[]
          }
          upsert: {
            args: Prisma.PeopleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PeoplePayload>
          }
          aggregate: {
            args: Prisma.PeopleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePeople>
          }
          groupBy: {
            args: Prisma.PeopleGroupByArgs<ExtArgs>
            result: $Utils.Optional<PeopleGroupByOutputType>[]
          }
          count: {
            args: Prisma.PeopleCountArgs<ExtArgs>
            result: $Utils.Optional<PeopleCountAggregateOutputType> | number
          }
        }
      }
      LeaveDays: {
        payload: Prisma.$LeaveDaysPayload<ExtArgs>
        fields: Prisma.LeaveDaysFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LeaveDaysFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeaveDaysPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LeaveDaysFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeaveDaysPayload>
          }
          findFirst: {
            args: Prisma.LeaveDaysFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeaveDaysPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LeaveDaysFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeaveDaysPayload>
          }
          findMany: {
            args: Prisma.LeaveDaysFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeaveDaysPayload>[]
          }
          create: {
            args: Prisma.LeaveDaysCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeaveDaysPayload>
          }
          createMany: {
            args: Prisma.LeaveDaysCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LeaveDaysCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeaveDaysPayload>[]
          }
          delete: {
            args: Prisma.LeaveDaysDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeaveDaysPayload>
          }
          update: {
            args: Prisma.LeaveDaysUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeaveDaysPayload>
          }
          deleteMany: {
            args: Prisma.LeaveDaysDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LeaveDaysUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LeaveDaysUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeaveDaysPayload>[]
          }
          upsert: {
            args: Prisma.LeaveDaysUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeaveDaysPayload>
          }
          aggregate: {
            args: Prisma.LeaveDaysAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLeaveDays>
          }
          groupBy: {
            args: Prisma.LeaveDaysGroupByArgs<ExtArgs>
            result: $Utils.Optional<LeaveDaysGroupByOutputType>[]
          }
          count: {
            args: Prisma.LeaveDaysCountArgs<ExtArgs>
            result: $Utils.Optional<LeaveDaysCountAggregateOutputType> | number
          }
        }
      }
      PreInvoice: {
        payload: Prisma.$PreInvoicePayload<ExtArgs>
        fields: Prisma.PreInvoiceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PreInvoiceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreInvoicePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PreInvoiceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreInvoicePayload>
          }
          findFirst: {
            args: Prisma.PreInvoiceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreInvoicePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PreInvoiceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreInvoicePayload>
          }
          findMany: {
            args: Prisma.PreInvoiceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreInvoicePayload>[]
          }
          create: {
            args: Prisma.PreInvoiceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreInvoicePayload>
          }
          createMany: {
            args: Prisma.PreInvoiceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PreInvoiceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreInvoicePayload>[]
          }
          delete: {
            args: Prisma.PreInvoiceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreInvoicePayload>
          }
          update: {
            args: Prisma.PreInvoiceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreInvoicePayload>
          }
          deleteMany: {
            args: Prisma.PreInvoiceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PreInvoiceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PreInvoiceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreInvoicePayload>[]
          }
          upsert: {
            args: Prisma.PreInvoiceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreInvoicePayload>
          }
          aggregate: {
            args: Prisma.PreInvoiceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePreInvoice>
          }
          groupBy: {
            args: Prisma.PreInvoiceGroupByArgs<ExtArgs>
            result: $Utils.Optional<PreInvoiceGroupByOutputType>[]
          }
          count: {
            args: Prisma.PreInvoiceCountArgs<ExtArgs>
            result: $Utils.Optional<PreInvoiceCountAggregateOutputType> | number
          }
        }
      }
      PreInvoiceDetail: {
        payload: Prisma.$PreInvoiceDetailPayload<ExtArgs>
        fields: Prisma.PreInvoiceDetailFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PreInvoiceDetailFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreInvoiceDetailPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PreInvoiceDetailFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreInvoiceDetailPayload>
          }
          findFirst: {
            args: Prisma.PreInvoiceDetailFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreInvoiceDetailPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PreInvoiceDetailFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreInvoiceDetailPayload>
          }
          findMany: {
            args: Prisma.PreInvoiceDetailFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreInvoiceDetailPayload>[]
          }
          create: {
            args: Prisma.PreInvoiceDetailCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreInvoiceDetailPayload>
          }
          createMany: {
            args: Prisma.PreInvoiceDetailCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PreInvoiceDetailCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreInvoiceDetailPayload>[]
          }
          delete: {
            args: Prisma.PreInvoiceDetailDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreInvoiceDetailPayload>
          }
          update: {
            args: Prisma.PreInvoiceDetailUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreInvoiceDetailPayload>
          }
          deleteMany: {
            args: Prisma.PreInvoiceDetailDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PreInvoiceDetailUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PreInvoiceDetailUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreInvoiceDetailPayload>[]
          }
          upsert: {
            args: Prisma.PreInvoiceDetailUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreInvoiceDetailPayload>
          }
          aggregate: {
            args: Prisma.PreInvoiceDetailAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePreInvoiceDetail>
          }
          groupBy: {
            args: Prisma.PreInvoiceDetailGroupByArgs<ExtArgs>
            result: $Utils.Optional<PreInvoiceDetailGroupByOutputType>[]
          }
          count: {
            args: Prisma.PreInvoiceDetailCountArgs<ExtArgs>
            result: $Utils.Optional<PreInvoiceDetailCountAggregateOutputType> | number
          }
        }
      }
      Project: {
        payload: Prisma.$ProjectPayload<ExtArgs>
        fields: Prisma.ProjectFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProjectFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProjectFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          findFirst: {
            args: Prisma.ProjectFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProjectFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          findMany: {
            args: Prisma.ProjectFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>[]
          }
          create: {
            args: Prisma.ProjectCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          createMany: {
            args: Prisma.ProjectCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProjectCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>[]
          }
          delete: {
            args: Prisma.ProjectDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          update: {
            args: Prisma.ProjectUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          deleteMany: {
            args: Prisma.ProjectDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProjectUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProjectUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>[]
          }
          upsert: {
            args: Prisma.ProjectUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          aggregate: {
            args: Prisma.ProjectAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProject>
          }
          groupBy: {
            args: Prisma.ProjectGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProjectGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProjectCountArgs<ExtArgs>
            result: $Utils.Optional<ProjectCountAggregateOutputType> | number
          }
        }
      }
      CurrencyHistory: {
        payload: Prisma.$CurrencyHistoryPayload<ExtArgs>
        fields: Prisma.CurrencyHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CurrencyHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CurrencyHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyHistoryPayload>
          }
          findFirst: {
            args: Prisma.CurrencyHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CurrencyHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyHistoryPayload>
          }
          findMany: {
            args: Prisma.CurrencyHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyHistoryPayload>[]
          }
          create: {
            args: Prisma.CurrencyHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyHistoryPayload>
          }
          createMany: {
            args: Prisma.CurrencyHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CurrencyHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyHistoryPayload>[]
          }
          delete: {
            args: Prisma.CurrencyHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyHistoryPayload>
          }
          update: {
            args: Prisma.CurrencyHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyHistoryPayload>
          }
          deleteMany: {
            args: Prisma.CurrencyHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CurrencyHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CurrencyHistoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyHistoryPayload>[]
          }
          upsert: {
            args: Prisma.CurrencyHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyHistoryPayload>
          }
          aggregate: {
            args: Prisma.CurrencyHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCurrencyHistory>
          }
          groupBy: {
            args: Prisma.CurrencyHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<CurrencyHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.CurrencyHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<CurrencyHistoryCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    aFPInstitution?: AFPInstitutionOmit
    currencyType?: CurrencyTypeOmit
    client?: ClientOmit
    contact?: ContactOmit
    healthInstitution?: HealthInstitutionOmit
    holidays?: HolidaysOmit
    jobTitle?: JobTitleOmit
    role?: RoleOmit
    seniority?: SeniorityOmit
    skillLevel?: SkillLevelOmit
    technicalsStacks?: TechnicalsStacksOmit
    price?: PriceOmit
    people?: PeopleOmit
    leaveDays?: LeaveDaysOmit
    preInvoice?: PreInvoiceOmit
    preInvoiceDetail?: PreInvoiceDetailOmit
    project?: ProjectOmit
    currencyHistory?: CurrencyHistoryOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type AFPInstitutionCountOutputType
   */

  export type AFPInstitutionCountOutputType = {
    people: number
  }

  export type AFPInstitutionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    people?: boolean | AFPInstitutionCountOutputTypeCountPeopleArgs
  }

  // Custom InputTypes
  /**
   * AFPInstitutionCountOutputType without action
   */
  export type AFPInstitutionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AFPInstitutionCountOutputType
     */
    select?: AFPInstitutionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AFPInstitutionCountOutputType without action
   */
  export type AFPInstitutionCountOutputTypeCountPeopleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PeopleWhereInput
  }


  /**
   * Count Type CurrencyTypeCountOutputType
   */

  export type CurrencyTypeCountOutputType = {
    clients: number
    peopleSalary: number
    peopleFee: number
    peopleLaptop: number
    PreInvoiceDetail: number
    Price: number
  }

  export type CurrencyTypeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | CurrencyTypeCountOutputTypeCountClientsArgs
    peopleSalary?: boolean | CurrencyTypeCountOutputTypeCountPeopleSalaryArgs
    peopleFee?: boolean | CurrencyTypeCountOutputTypeCountPeopleFeeArgs
    peopleLaptop?: boolean | CurrencyTypeCountOutputTypeCountPeopleLaptopArgs
    PreInvoiceDetail?: boolean | CurrencyTypeCountOutputTypeCountPreInvoiceDetailArgs
    Price?: boolean | CurrencyTypeCountOutputTypeCountPriceArgs
  }

  // Custom InputTypes
  /**
   * CurrencyTypeCountOutputType without action
   */
  export type CurrencyTypeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyTypeCountOutputType
     */
    select?: CurrencyTypeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CurrencyTypeCountOutputType without action
   */
  export type CurrencyTypeCountOutputTypeCountClientsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientWhereInput
  }

  /**
   * CurrencyTypeCountOutputType without action
   */
  export type CurrencyTypeCountOutputTypeCountPeopleSalaryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PeopleWhereInput
  }

  /**
   * CurrencyTypeCountOutputType without action
   */
  export type CurrencyTypeCountOutputTypeCountPeopleFeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PeopleWhereInput
  }

  /**
   * CurrencyTypeCountOutputType without action
   */
  export type CurrencyTypeCountOutputTypeCountPeopleLaptopArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PeopleWhereInput
  }

  /**
   * CurrencyTypeCountOutputType without action
   */
  export type CurrencyTypeCountOutputTypeCountPreInvoiceDetailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PreInvoiceDetailWhereInput
  }

  /**
   * CurrencyTypeCountOutputType without action
   */
  export type CurrencyTypeCountOutputTypeCountPriceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PriceWhereInput
  }


  /**
   * Count Type ClientCountOutputType
   */

  export type ClientCountOutputType = {
    contacts: number
    people: number
    preInvoices: number
    projects: number
  }

  export type ClientCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    contacts?: boolean | ClientCountOutputTypeCountContactsArgs
    people?: boolean | ClientCountOutputTypeCountPeopleArgs
    preInvoices?: boolean | ClientCountOutputTypeCountPreInvoicesArgs
    projects?: boolean | ClientCountOutputTypeCountProjectsArgs
  }

  // Custom InputTypes
  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCountOutputType
     */
    select?: ClientCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountContactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContactWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountPeopleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PeopleWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountPreInvoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PreInvoiceWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountProjectsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProjectWhereInput
  }


  /**
   * Count Type ContactCountOutputType
   */

  export type ContactCountOutputType = {
    preInvoices: number
  }

  export type ContactCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    preInvoices?: boolean | ContactCountOutputTypeCountPreInvoicesArgs
  }

  // Custom InputTypes
  /**
   * ContactCountOutputType without action
   */
  export type ContactCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContactCountOutputType
     */
    select?: ContactCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ContactCountOutputType without action
   */
  export type ContactCountOutputTypeCountPreInvoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PreInvoiceWhereInput
  }


  /**
   * Count Type HealthInstitutionCountOutputType
   */

  export type HealthInstitutionCountOutputType = {
    people: number
  }

  export type HealthInstitutionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    people?: boolean | HealthInstitutionCountOutputTypeCountPeopleArgs
  }

  // Custom InputTypes
  /**
   * HealthInstitutionCountOutputType without action
   */
  export type HealthInstitutionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthInstitutionCountOutputType
     */
    select?: HealthInstitutionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * HealthInstitutionCountOutputType without action
   */
  export type HealthInstitutionCountOutputTypeCountPeopleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PeopleWhereInput
  }


  /**
   * Count Type JobTitleCountOutputType
   */

  export type JobTitleCountOutputType = {
    people: number
  }

  export type JobTitleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    people?: boolean | JobTitleCountOutputTypeCountPeopleArgs
  }

  // Custom InputTypes
  /**
   * JobTitleCountOutputType without action
   */
  export type JobTitleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobTitleCountOutputType
     */
    select?: JobTitleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * JobTitleCountOutputType without action
   */
  export type JobTitleCountOutputTypeCountPeopleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PeopleWhereInput
  }


  /**
   * Count Type RoleCountOutputType
   */

  export type RoleCountOutputType = {
    people: number
  }

  export type RoleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    people?: boolean | RoleCountOutputTypeCountPeopleArgs
  }

  // Custom InputTypes
  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleCountOutputType
     */
    select?: RoleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountPeopleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PeopleWhereInput
  }


  /**
   * Count Type SeniorityCountOutputType
   */

  export type SeniorityCountOutputType = {
    people: number
  }

  export type SeniorityCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    people?: boolean | SeniorityCountOutputTypeCountPeopleArgs
  }

  // Custom InputTypes
  /**
   * SeniorityCountOutputType without action
   */
  export type SeniorityCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeniorityCountOutputType
     */
    select?: SeniorityCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SeniorityCountOutputType without action
   */
  export type SeniorityCountOutputTypeCountPeopleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PeopleWhereInput
  }


  /**
   * Count Type TechnicalsStacksCountOutputType
   */

  export type TechnicalsStacksCountOutputType = {
    people: number
    contacts: number
  }

  export type TechnicalsStacksCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    people?: boolean | TechnicalsStacksCountOutputTypeCountPeopleArgs
    contacts?: boolean | TechnicalsStacksCountOutputTypeCountContactsArgs
  }

  // Custom InputTypes
  /**
   * TechnicalsStacksCountOutputType without action
   */
  export type TechnicalsStacksCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TechnicalsStacksCountOutputType
     */
    select?: TechnicalsStacksCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TechnicalsStacksCountOutputType without action
   */
  export type TechnicalsStacksCountOutputTypeCountPeopleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PeopleWhereInput
  }

  /**
   * TechnicalsStacksCountOutputType without action
   */
  export type TechnicalsStacksCountOutputTypeCountContactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContactWhereInput
  }


  /**
   * Count Type PeopleCountOutputType
   */

  export type PeopleCountOutputType = {
    leaveDays: number
    preInvoiceDetails: number
  }

  export type PeopleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    leaveDays?: boolean | PeopleCountOutputTypeCountLeaveDaysArgs
    preInvoiceDetails?: boolean | PeopleCountOutputTypeCountPreInvoiceDetailsArgs
  }

  // Custom InputTypes
  /**
   * PeopleCountOutputType without action
   */
  export type PeopleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PeopleCountOutputType
     */
    select?: PeopleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PeopleCountOutputType without action
   */
  export type PeopleCountOutputTypeCountLeaveDaysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LeaveDaysWhereInput
  }

  /**
   * PeopleCountOutputType without action
   */
  export type PeopleCountOutputTypeCountPreInvoiceDetailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PreInvoiceDetailWhereInput
  }


  /**
   * Count Type PreInvoiceCountOutputType
   */

  export type PreInvoiceCountOutputType = {
    details: number
  }

  export type PreInvoiceCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    details?: boolean | PreInvoiceCountOutputTypeCountDetailsArgs
  }

  // Custom InputTypes
  /**
   * PreInvoiceCountOutputType without action
   */
  export type PreInvoiceCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoiceCountOutputType
     */
    select?: PreInvoiceCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PreInvoiceCountOutputType without action
   */
  export type PreInvoiceCountOutputTypeCountDetailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PreInvoiceDetailWhereInput
  }


  /**
   * Models
   */

  /**
   * Model AFPInstitution
   */

  export type AggregateAFPInstitution = {
    _count: AFPInstitutionCountAggregateOutputType | null
    _avg: AFPInstitutionAvgAggregateOutputType | null
    _sum: AFPInstitutionSumAggregateOutputType | null
    _min: AFPInstitutionMinAggregateOutputType | null
    _max: AFPInstitutionMaxAggregateOutputType | null
  }

  export type AFPInstitutionAvgAggregateOutputType = {
    id: number | null
  }

  export type AFPInstitutionSumAggregateOutputType = {
    id: number | null
  }

  export type AFPInstitutionMinAggregateOutputType = {
    id: number | null
    name: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AFPInstitutionMaxAggregateOutputType = {
    id: number | null
    name: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AFPInstitutionCountAggregateOutputType = {
    id: number
    name: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AFPInstitutionAvgAggregateInputType = {
    id?: true
  }

  export type AFPInstitutionSumAggregateInputType = {
    id?: true
  }

  export type AFPInstitutionMinAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AFPInstitutionMaxAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AFPInstitutionCountAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AFPInstitutionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AFPInstitution to aggregate.
     */
    where?: AFPInstitutionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AFPInstitutions to fetch.
     */
    orderBy?: AFPInstitutionOrderByWithRelationInput | AFPInstitutionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AFPInstitutionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AFPInstitutions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AFPInstitutions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AFPInstitutions
    **/
    _count?: true | AFPInstitutionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AFPInstitutionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AFPInstitutionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AFPInstitutionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AFPInstitutionMaxAggregateInputType
  }

  export type GetAFPInstitutionAggregateType<T extends AFPInstitutionAggregateArgs> = {
        [P in keyof T & keyof AggregateAFPInstitution]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAFPInstitution[P]>
      : GetScalarType<T[P], AggregateAFPInstitution[P]>
  }




  export type AFPInstitutionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AFPInstitutionWhereInput
    orderBy?: AFPInstitutionOrderByWithAggregationInput | AFPInstitutionOrderByWithAggregationInput[]
    by: AFPInstitutionScalarFieldEnum[] | AFPInstitutionScalarFieldEnum
    having?: AFPInstitutionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AFPInstitutionCountAggregateInputType | true
    _avg?: AFPInstitutionAvgAggregateInputType
    _sum?: AFPInstitutionSumAggregateInputType
    _min?: AFPInstitutionMinAggregateInputType
    _max?: AFPInstitutionMaxAggregateInputType
  }

  export type AFPInstitutionGroupByOutputType = {
    id: number
    name: string
    createdAt: Date | null
    updatedAt: Date | null
    _count: AFPInstitutionCountAggregateOutputType | null
    _avg: AFPInstitutionAvgAggregateOutputType | null
    _sum: AFPInstitutionSumAggregateOutputType | null
    _min: AFPInstitutionMinAggregateOutputType | null
    _max: AFPInstitutionMaxAggregateOutputType | null
  }

  type GetAFPInstitutionGroupByPayload<T extends AFPInstitutionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AFPInstitutionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AFPInstitutionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AFPInstitutionGroupByOutputType[P]>
            : GetScalarType<T[P], AFPInstitutionGroupByOutputType[P]>
        }
      >
    >


  export type AFPInstitutionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    people?: boolean | AFPInstitution$peopleArgs<ExtArgs>
    _count?: boolean | AFPInstitutionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["aFPInstitution"]>

  export type AFPInstitutionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["aFPInstitution"]>

  export type AFPInstitutionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["aFPInstitution"]>

  export type AFPInstitutionSelectScalar = {
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AFPInstitutionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "createdAt" | "updatedAt", ExtArgs["result"]["aFPInstitution"]>
  export type AFPInstitutionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    people?: boolean | AFPInstitution$peopleArgs<ExtArgs>
    _count?: boolean | AFPInstitutionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AFPInstitutionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type AFPInstitutionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $AFPInstitutionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AFPInstitution"
    objects: {
      people: Prisma.$PeoplePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      createdAt: Date | null
      updatedAt: Date | null
    }, ExtArgs["result"]["aFPInstitution"]>
    composites: {}
  }

  type AFPInstitutionGetPayload<S extends boolean | null | undefined | AFPInstitutionDefaultArgs> = $Result.GetResult<Prisma.$AFPInstitutionPayload, S>

  type AFPInstitutionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AFPInstitutionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AFPInstitutionCountAggregateInputType | true
    }

  export interface AFPInstitutionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AFPInstitution'], meta: { name: 'AFPInstitution' } }
    /**
     * Find zero or one AFPInstitution that matches the filter.
     * @param {AFPInstitutionFindUniqueArgs} args - Arguments to find a AFPInstitution
     * @example
     * // Get one AFPInstitution
     * const aFPInstitution = await prisma.aFPInstitution.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AFPInstitutionFindUniqueArgs>(args: SelectSubset<T, AFPInstitutionFindUniqueArgs<ExtArgs>>): Prisma__AFPInstitutionClient<$Result.GetResult<Prisma.$AFPInstitutionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AFPInstitution that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AFPInstitutionFindUniqueOrThrowArgs} args - Arguments to find a AFPInstitution
     * @example
     * // Get one AFPInstitution
     * const aFPInstitution = await prisma.aFPInstitution.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AFPInstitutionFindUniqueOrThrowArgs>(args: SelectSubset<T, AFPInstitutionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AFPInstitutionClient<$Result.GetResult<Prisma.$AFPInstitutionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AFPInstitution that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AFPInstitutionFindFirstArgs} args - Arguments to find a AFPInstitution
     * @example
     * // Get one AFPInstitution
     * const aFPInstitution = await prisma.aFPInstitution.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AFPInstitutionFindFirstArgs>(args?: SelectSubset<T, AFPInstitutionFindFirstArgs<ExtArgs>>): Prisma__AFPInstitutionClient<$Result.GetResult<Prisma.$AFPInstitutionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AFPInstitution that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AFPInstitutionFindFirstOrThrowArgs} args - Arguments to find a AFPInstitution
     * @example
     * // Get one AFPInstitution
     * const aFPInstitution = await prisma.aFPInstitution.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AFPInstitutionFindFirstOrThrowArgs>(args?: SelectSubset<T, AFPInstitutionFindFirstOrThrowArgs<ExtArgs>>): Prisma__AFPInstitutionClient<$Result.GetResult<Prisma.$AFPInstitutionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AFPInstitutions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AFPInstitutionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AFPInstitutions
     * const aFPInstitutions = await prisma.aFPInstitution.findMany()
     * 
     * // Get first 10 AFPInstitutions
     * const aFPInstitutions = await prisma.aFPInstitution.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const aFPInstitutionWithIdOnly = await prisma.aFPInstitution.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AFPInstitutionFindManyArgs>(args?: SelectSubset<T, AFPInstitutionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AFPInstitutionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AFPInstitution.
     * @param {AFPInstitutionCreateArgs} args - Arguments to create a AFPInstitution.
     * @example
     * // Create one AFPInstitution
     * const AFPInstitution = await prisma.aFPInstitution.create({
     *   data: {
     *     // ... data to create a AFPInstitution
     *   }
     * })
     * 
     */
    create<T extends AFPInstitutionCreateArgs>(args: SelectSubset<T, AFPInstitutionCreateArgs<ExtArgs>>): Prisma__AFPInstitutionClient<$Result.GetResult<Prisma.$AFPInstitutionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AFPInstitutions.
     * @param {AFPInstitutionCreateManyArgs} args - Arguments to create many AFPInstitutions.
     * @example
     * // Create many AFPInstitutions
     * const aFPInstitution = await prisma.aFPInstitution.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AFPInstitutionCreateManyArgs>(args?: SelectSubset<T, AFPInstitutionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AFPInstitutions and returns the data saved in the database.
     * @param {AFPInstitutionCreateManyAndReturnArgs} args - Arguments to create many AFPInstitutions.
     * @example
     * // Create many AFPInstitutions
     * const aFPInstitution = await prisma.aFPInstitution.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AFPInstitutions and only return the `id`
     * const aFPInstitutionWithIdOnly = await prisma.aFPInstitution.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AFPInstitutionCreateManyAndReturnArgs>(args?: SelectSubset<T, AFPInstitutionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AFPInstitutionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AFPInstitution.
     * @param {AFPInstitutionDeleteArgs} args - Arguments to delete one AFPInstitution.
     * @example
     * // Delete one AFPInstitution
     * const AFPInstitution = await prisma.aFPInstitution.delete({
     *   where: {
     *     // ... filter to delete one AFPInstitution
     *   }
     * })
     * 
     */
    delete<T extends AFPInstitutionDeleteArgs>(args: SelectSubset<T, AFPInstitutionDeleteArgs<ExtArgs>>): Prisma__AFPInstitutionClient<$Result.GetResult<Prisma.$AFPInstitutionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AFPInstitution.
     * @param {AFPInstitutionUpdateArgs} args - Arguments to update one AFPInstitution.
     * @example
     * // Update one AFPInstitution
     * const aFPInstitution = await prisma.aFPInstitution.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AFPInstitutionUpdateArgs>(args: SelectSubset<T, AFPInstitutionUpdateArgs<ExtArgs>>): Prisma__AFPInstitutionClient<$Result.GetResult<Prisma.$AFPInstitutionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AFPInstitutions.
     * @param {AFPInstitutionDeleteManyArgs} args - Arguments to filter AFPInstitutions to delete.
     * @example
     * // Delete a few AFPInstitutions
     * const { count } = await prisma.aFPInstitution.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AFPInstitutionDeleteManyArgs>(args?: SelectSubset<T, AFPInstitutionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AFPInstitutions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AFPInstitutionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AFPInstitutions
     * const aFPInstitution = await prisma.aFPInstitution.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AFPInstitutionUpdateManyArgs>(args: SelectSubset<T, AFPInstitutionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AFPInstitutions and returns the data updated in the database.
     * @param {AFPInstitutionUpdateManyAndReturnArgs} args - Arguments to update many AFPInstitutions.
     * @example
     * // Update many AFPInstitutions
     * const aFPInstitution = await prisma.aFPInstitution.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AFPInstitutions and only return the `id`
     * const aFPInstitutionWithIdOnly = await prisma.aFPInstitution.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AFPInstitutionUpdateManyAndReturnArgs>(args: SelectSubset<T, AFPInstitutionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AFPInstitutionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AFPInstitution.
     * @param {AFPInstitutionUpsertArgs} args - Arguments to update or create a AFPInstitution.
     * @example
     * // Update or create a AFPInstitution
     * const aFPInstitution = await prisma.aFPInstitution.upsert({
     *   create: {
     *     // ... data to create a AFPInstitution
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AFPInstitution we want to update
     *   }
     * })
     */
    upsert<T extends AFPInstitutionUpsertArgs>(args: SelectSubset<T, AFPInstitutionUpsertArgs<ExtArgs>>): Prisma__AFPInstitutionClient<$Result.GetResult<Prisma.$AFPInstitutionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AFPInstitutions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AFPInstitutionCountArgs} args - Arguments to filter AFPInstitutions to count.
     * @example
     * // Count the number of AFPInstitutions
     * const count = await prisma.aFPInstitution.count({
     *   where: {
     *     // ... the filter for the AFPInstitutions we want to count
     *   }
     * })
    **/
    count<T extends AFPInstitutionCountArgs>(
      args?: Subset<T, AFPInstitutionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AFPInstitutionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AFPInstitution.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AFPInstitutionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AFPInstitutionAggregateArgs>(args: Subset<T, AFPInstitutionAggregateArgs>): Prisma.PrismaPromise<GetAFPInstitutionAggregateType<T>>

    /**
     * Group by AFPInstitution.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AFPInstitutionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AFPInstitutionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AFPInstitutionGroupByArgs['orderBy'] }
        : { orderBy?: AFPInstitutionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AFPInstitutionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAFPInstitutionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AFPInstitution model
   */
  readonly fields: AFPInstitutionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AFPInstitution.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AFPInstitutionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    people<T extends AFPInstitution$peopleArgs<ExtArgs> = {}>(args?: Subset<T, AFPInstitution$peopleArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PeoplePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AFPInstitution model
   */
  interface AFPInstitutionFieldRefs {
    readonly id: FieldRef<"AFPInstitution", 'Int'>
    readonly name: FieldRef<"AFPInstitution", 'String'>
    readonly createdAt: FieldRef<"AFPInstitution", 'DateTime'>
    readonly updatedAt: FieldRef<"AFPInstitution", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AFPInstitution findUnique
   */
  export type AFPInstitutionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AFPInstitution
     */
    select?: AFPInstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AFPInstitution
     */
    omit?: AFPInstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AFPInstitutionInclude<ExtArgs> | null
    /**
     * Filter, which AFPInstitution to fetch.
     */
    where: AFPInstitutionWhereUniqueInput
  }

  /**
   * AFPInstitution findUniqueOrThrow
   */
  export type AFPInstitutionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AFPInstitution
     */
    select?: AFPInstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AFPInstitution
     */
    omit?: AFPInstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AFPInstitutionInclude<ExtArgs> | null
    /**
     * Filter, which AFPInstitution to fetch.
     */
    where: AFPInstitutionWhereUniqueInput
  }

  /**
   * AFPInstitution findFirst
   */
  export type AFPInstitutionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AFPInstitution
     */
    select?: AFPInstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AFPInstitution
     */
    omit?: AFPInstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AFPInstitutionInclude<ExtArgs> | null
    /**
     * Filter, which AFPInstitution to fetch.
     */
    where?: AFPInstitutionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AFPInstitutions to fetch.
     */
    orderBy?: AFPInstitutionOrderByWithRelationInput | AFPInstitutionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AFPInstitutions.
     */
    cursor?: AFPInstitutionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AFPInstitutions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AFPInstitutions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AFPInstitutions.
     */
    distinct?: AFPInstitutionScalarFieldEnum | AFPInstitutionScalarFieldEnum[]
  }

  /**
   * AFPInstitution findFirstOrThrow
   */
  export type AFPInstitutionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AFPInstitution
     */
    select?: AFPInstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AFPInstitution
     */
    omit?: AFPInstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AFPInstitutionInclude<ExtArgs> | null
    /**
     * Filter, which AFPInstitution to fetch.
     */
    where?: AFPInstitutionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AFPInstitutions to fetch.
     */
    orderBy?: AFPInstitutionOrderByWithRelationInput | AFPInstitutionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AFPInstitutions.
     */
    cursor?: AFPInstitutionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AFPInstitutions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AFPInstitutions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AFPInstitutions.
     */
    distinct?: AFPInstitutionScalarFieldEnum | AFPInstitutionScalarFieldEnum[]
  }

  /**
   * AFPInstitution findMany
   */
  export type AFPInstitutionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AFPInstitution
     */
    select?: AFPInstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AFPInstitution
     */
    omit?: AFPInstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AFPInstitutionInclude<ExtArgs> | null
    /**
     * Filter, which AFPInstitutions to fetch.
     */
    where?: AFPInstitutionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AFPInstitutions to fetch.
     */
    orderBy?: AFPInstitutionOrderByWithRelationInput | AFPInstitutionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AFPInstitutions.
     */
    cursor?: AFPInstitutionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AFPInstitutions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AFPInstitutions.
     */
    skip?: number
    distinct?: AFPInstitutionScalarFieldEnum | AFPInstitutionScalarFieldEnum[]
  }

  /**
   * AFPInstitution create
   */
  export type AFPInstitutionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AFPInstitution
     */
    select?: AFPInstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AFPInstitution
     */
    omit?: AFPInstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AFPInstitutionInclude<ExtArgs> | null
    /**
     * The data needed to create a AFPInstitution.
     */
    data: XOR<AFPInstitutionCreateInput, AFPInstitutionUncheckedCreateInput>
  }

  /**
   * AFPInstitution createMany
   */
  export type AFPInstitutionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AFPInstitutions.
     */
    data: AFPInstitutionCreateManyInput | AFPInstitutionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AFPInstitution createManyAndReturn
   */
  export type AFPInstitutionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AFPInstitution
     */
    select?: AFPInstitutionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AFPInstitution
     */
    omit?: AFPInstitutionOmit<ExtArgs> | null
    /**
     * The data used to create many AFPInstitutions.
     */
    data: AFPInstitutionCreateManyInput | AFPInstitutionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AFPInstitution update
   */
  export type AFPInstitutionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AFPInstitution
     */
    select?: AFPInstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AFPInstitution
     */
    omit?: AFPInstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AFPInstitutionInclude<ExtArgs> | null
    /**
     * The data needed to update a AFPInstitution.
     */
    data: XOR<AFPInstitutionUpdateInput, AFPInstitutionUncheckedUpdateInput>
    /**
     * Choose, which AFPInstitution to update.
     */
    where: AFPInstitutionWhereUniqueInput
  }

  /**
   * AFPInstitution updateMany
   */
  export type AFPInstitutionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AFPInstitutions.
     */
    data: XOR<AFPInstitutionUpdateManyMutationInput, AFPInstitutionUncheckedUpdateManyInput>
    /**
     * Filter which AFPInstitutions to update
     */
    where?: AFPInstitutionWhereInput
    /**
     * Limit how many AFPInstitutions to update.
     */
    limit?: number
  }

  /**
   * AFPInstitution updateManyAndReturn
   */
  export type AFPInstitutionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AFPInstitution
     */
    select?: AFPInstitutionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AFPInstitution
     */
    omit?: AFPInstitutionOmit<ExtArgs> | null
    /**
     * The data used to update AFPInstitutions.
     */
    data: XOR<AFPInstitutionUpdateManyMutationInput, AFPInstitutionUncheckedUpdateManyInput>
    /**
     * Filter which AFPInstitutions to update
     */
    where?: AFPInstitutionWhereInput
    /**
     * Limit how many AFPInstitutions to update.
     */
    limit?: number
  }

  /**
   * AFPInstitution upsert
   */
  export type AFPInstitutionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AFPInstitution
     */
    select?: AFPInstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AFPInstitution
     */
    omit?: AFPInstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AFPInstitutionInclude<ExtArgs> | null
    /**
     * The filter to search for the AFPInstitution to update in case it exists.
     */
    where: AFPInstitutionWhereUniqueInput
    /**
     * In case the AFPInstitution found by the `where` argument doesn't exist, create a new AFPInstitution with this data.
     */
    create: XOR<AFPInstitutionCreateInput, AFPInstitutionUncheckedCreateInput>
    /**
     * In case the AFPInstitution was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AFPInstitutionUpdateInput, AFPInstitutionUncheckedUpdateInput>
  }

  /**
   * AFPInstitution delete
   */
  export type AFPInstitutionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AFPInstitution
     */
    select?: AFPInstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AFPInstitution
     */
    omit?: AFPInstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AFPInstitutionInclude<ExtArgs> | null
    /**
     * Filter which AFPInstitution to delete.
     */
    where: AFPInstitutionWhereUniqueInput
  }

  /**
   * AFPInstitution deleteMany
   */
  export type AFPInstitutionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AFPInstitutions to delete
     */
    where?: AFPInstitutionWhereInput
    /**
     * Limit how many AFPInstitutions to delete.
     */
    limit?: number
  }

  /**
   * AFPInstitution.people
   */
  export type AFPInstitution$peopleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the People
     */
    select?: PeopleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the People
     */
    omit?: PeopleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeopleInclude<ExtArgs> | null
    where?: PeopleWhereInput
    orderBy?: PeopleOrderByWithRelationInput | PeopleOrderByWithRelationInput[]
    cursor?: PeopleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PeopleScalarFieldEnum | PeopleScalarFieldEnum[]
  }

  /**
   * AFPInstitution without action
   */
  export type AFPInstitutionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AFPInstitution
     */
    select?: AFPInstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AFPInstitution
     */
    omit?: AFPInstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AFPInstitutionInclude<ExtArgs> | null
  }


  /**
   * Model CurrencyType
   */

  export type AggregateCurrencyType = {
    _count: CurrencyTypeCountAggregateOutputType | null
    _avg: CurrencyTypeAvgAggregateOutputType | null
    _sum: CurrencyTypeSumAggregateOutputType | null
    _min: CurrencyTypeMinAggregateOutputType | null
    _max: CurrencyTypeMaxAggregateOutputType | null
  }

  export type CurrencyTypeAvgAggregateOutputType = {
    id: number | null
  }

  export type CurrencyTypeSumAggregateOutputType = {
    id: number | null
  }

  export type CurrencyTypeMinAggregateOutputType = {
    id: number | null
    name: string | null
    symbol: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CurrencyTypeMaxAggregateOutputType = {
    id: number | null
    name: string | null
    symbol: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CurrencyTypeCountAggregateOutputType = {
    id: number
    name: number
    symbol: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CurrencyTypeAvgAggregateInputType = {
    id?: true
  }

  export type CurrencyTypeSumAggregateInputType = {
    id?: true
  }

  export type CurrencyTypeMinAggregateInputType = {
    id?: true
    name?: true
    symbol?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CurrencyTypeMaxAggregateInputType = {
    id?: true
    name?: true
    symbol?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CurrencyTypeCountAggregateInputType = {
    id?: true
    name?: true
    symbol?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CurrencyTypeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CurrencyType to aggregate.
     */
    where?: CurrencyTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CurrencyTypes to fetch.
     */
    orderBy?: CurrencyTypeOrderByWithRelationInput | CurrencyTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CurrencyTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CurrencyTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CurrencyTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CurrencyTypes
    **/
    _count?: true | CurrencyTypeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CurrencyTypeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CurrencyTypeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CurrencyTypeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CurrencyTypeMaxAggregateInputType
  }

  export type GetCurrencyTypeAggregateType<T extends CurrencyTypeAggregateArgs> = {
        [P in keyof T & keyof AggregateCurrencyType]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCurrencyType[P]>
      : GetScalarType<T[P], AggregateCurrencyType[P]>
  }




  export type CurrencyTypeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CurrencyTypeWhereInput
    orderBy?: CurrencyTypeOrderByWithAggregationInput | CurrencyTypeOrderByWithAggregationInput[]
    by: CurrencyTypeScalarFieldEnum[] | CurrencyTypeScalarFieldEnum
    having?: CurrencyTypeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CurrencyTypeCountAggregateInputType | true
    _avg?: CurrencyTypeAvgAggregateInputType
    _sum?: CurrencyTypeSumAggregateInputType
    _min?: CurrencyTypeMinAggregateInputType
    _max?: CurrencyTypeMaxAggregateInputType
  }

  export type CurrencyTypeGroupByOutputType = {
    id: number
    name: string
    symbol: string
    createdAt: Date | null
    updatedAt: Date | null
    _count: CurrencyTypeCountAggregateOutputType | null
    _avg: CurrencyTypeAvgAggregateOutputType | null
    _sum: CurrencyTypeSumAggregateOutputType | null
    _min: CurrencyTypeMinAggregateOutputType | null
    _max: CurrencyTypeMaxAggregateOutputType | null
  }

  type GetCurrencyTypeGroupByPayload<T extends CurrencyTypeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CurrencyTypeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CurrencyTypeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CurrencyTypeGroupByOutputType[P]>
            : GetScalarType<T[P], CurrencyTypeGroupByOutputType[P]>
        }
      >
    >


  export type CurrencyTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    symbol?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    clients?: boolean | CurrencyType$clientsArgs<ExtArgs>
    peopleSalary?: boolean | CurrencyType$peopleSalaryArgs<ExtArgs>
    peopleFee?: boolean | CurrencyType$peopleFeeArgs<ExtArgs>
    peopleLaptop?: boolean | CurrencyType$peopleLaptopArgs<ExtArgs>
    PreInvoiceDetail?: boolean | CurrencyType$PreInvoiceDetailArgs<ExtArgs>
    Price?: boolean | CurrencyType$PriceArgs<ExtArgs>
    _count?: boolean | CurrencyTypeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["currencyType"]>

  export type CurrencyTypeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    symbol?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["currencyType"]>

  export type CurrencyTypeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    symbol?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["currencyType"]>

  export type CurrencyTypeSelectScalar = {
    id?: boolean
    name?: boolean
    symbol?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CurrencyTypeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "symbol" | "createdAt" | "updatedAt", ExtArgs["result"]["currencyType"]>
  export type CurrencyTypeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | CurrencyType$clientsArgs<ExtArgs>
    peopleSalary?: boolean | CurrencyType$peopleSalaryArgs<ExtArgs>
    peopleFee?: boolean | CurrencyType$peopleFeeArgs<ExtArgs>
    peopleLaptop?: boolean | CurrencyType$peopleLaptopArgs<ExtArgs>
    PreInvoiceDetail?: boolean | CurrencyType$PreInvoiceDetailArgs<ExtArgs>
    Price?: boolean | CurrencyType$PriceArgs<ExtArgs>
    _count?: boolean | CurrencyTypeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CurrencyTypeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type CurrencyTypeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CurrencyTypePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CurrencyType"
    objects: {
      clients: Prisma.$ClientPayload<ExtArgs>[]
      peopleSalary: Prisma.$PeoplePayload<ExtArgs>[]
      peopleFee: Prisma.$PeoplePayload<ExtArgs>[]
      peopleLaptop: Prisma.$PeoplePayload<ExtArgs>[]
      PreInvoiceDetail: Prisma.$PreInvoiceDetailPayload<ExtArgs>[]
      Price: Prisma.$PricePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      symbol: string
      createdAt: Date | null
      updatedAt: Date | null
    }, ExtArgs["result"]["currencyType"]>
    composites: {}
  }

  type CurrencyTypeGetPayload<S extends boolean | null | undefined | CurrencyTypeDefaultArgs> = $Result.GetResult<Prisma.$CurrencyTypePayload, S>

  type CurrencyTypeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CurrencyTypeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CurrencyTypeCountAggregateInputType | true
    }

  export interface CurrencyTypeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CurrencyType'], meta: { name: 'CurrencyType' } }
    /**
     * Find zero or one CurrencyType that matches the filter.
     * @param {CurrencyTypeFindUniqueArgs} args - Arguments to find a CurrencyType
     * @example
     * // Get one CurrencyType
     * const currencyType = await prisma.currencyType.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CurrencyTypeFindUniqueArgs>(args: SelectSubset<T, CurrencyTypeFindUniqueArgs<ExtArgs>>): Prisma__CurrencyTypeClient<$Result.GetResult<Prisma.$CurrencyTypePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CurrencyType that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CurrencyTypeFindUniqueOrThrowArgs} args - Arguments to find a CurrencyType
     * @example
     * // Get one CurrencyType
     * const currencyType = await prisma.currencyType.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CurrencyTypeFindUniqueOrThrowArgs>(args: SelectSubset<T, CurrencyTypeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CurrencyTypeClient<$Result.GetResult<Prisma.$CurrencyTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CurrencyType that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CurrencyTypeFindFirstArgs} args - Arguments to find a CurrencyType
     * @example
     * // Get one CurrencyType
     * const currencyType = await prisma.currencyType.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CurrencyTypeFindFirstArgs>(args?: SelectSubset<T, CurrencyTypeFindFirstArgs<ExtArgs>>): Prisma__CurrencyTypeClient<$Result.GetResult<Prisma.$CurrencyTypePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CurrencyType that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CurrencyTypeFindFirstOrThrowArgs} args - Arguments to find a CurrencyType
     * @example
     * // Get one CurrencyType
     * const currencyType = await prisma.currencyType.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CurrencyTypeFindFirstOrThrowArgs>(args?: SelectSubset<T, CurrencyTypeFindFirstOrThrowArgs<ExtArgs>>): Prisma__CurrencyTypeClient<$Result.GetResult<Prisma.$CurrencyTypePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CurrencyTypes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CurrencyTypeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CurrencyTypes
     * const currencyTypes = await prisma.currencyType.findMany()
     * 
     * // Get first 10 CurrencyTypes
     * const currencyTypes = await prisma.currencyType.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const currencyTypeWithIdOnly = await prisma.currencyType.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CurrencyTypeFindManyArgs>(args?: SelectSubset<T, CurrencyTypeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CurrencyTypePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CurrencyType.
     * @param {CurrencyTypeCreateArgs} args - Arguments to create a CurrencyType.
     * @example
     * // Create one CurrencyType
     * const CurrencyType = await prisma.currencyType.create({
     *   data: {
     *     // ... data to create a CurrencyType
     *   }
     * })
     * 
     */
    create<T extends CurrencyTypeCreateArgs>(args: SelectSubset<T, CurrencyTypeCreateArgs<ExtArgs>>): Prisma__CurrencyTypeClient<$Result.GetResult<Prisma.$CurrencyTypePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CurrencyTypes.
     * @param {CurrencyTypeCreateManyArgs} args - Arguments to create many CurrencyTypes.
     * @example
     * // Create many CurrencyTypes
     * const currencyType = await prisma.currencyType.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CurrencyTypeCreateManyArgs>(args?: SelectSubset<T, CurrencyTypeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CurrencyTypes and returns the data saved in the database.
     * @param {CurrencyTypeCreateManyAndReturnArgs} args - Arguments to create many CurrencyTypes.
     * @example
     * // Create many CurrencyTypes
     * const currencyType = await prisma.currencyType.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CurrencyTypes and only return the `id`
     * const currencyTypeWithIdOnly = await prisma.currencyType.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CurrencyTypeCreateManyAndReturnArgs>(args?: SelectSubset<T, CurrencyTypeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CurrencyTypePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CurrencyType.
     * @param {CurrencyTypeDeleteArgs} args - Arguments to delete one CurrencyType.
     * @example
     * // Delete one CurrencyType
     * const CurrencyType = await prisma.currencyType.delete({
     *   where: {
     *     // ... filter to delete one CurrencyType
     *   }
     * })
     * 
     */
    delete<T extends CurrencyTypeDeleteArgs>(args: SelectSubset<T, CurrencyTypeDeleteArgs<ExtArgs>>): Prisma__CurrencyTypeClient<$Result.GetResult<Prisma.$CurrencyTypePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CurrencyType.
     * @param {CurrencyTypeUpdateArgs} args - Arguments to update one CurrencyType.
     * @example
     * // Update one CurrencyType
     * const currencyType = await prisma.currencyType.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CurrencyTypeUpdateArgs>(args: SelectSubset<T, CurrencyTypeUpdateArgs<ExtArgs>>): Prisma__CurrencyTypeClient<$Result.GetResult<Prisma.$CurrencyTypePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CurrencyTypes.
     * @param {CurrencyTypeDeleteManyArgs} args - Arguments to filter CurrencyTypes to delete.
     * @example
     * // Delete a few CurrencyTypes
     * const { count } = await prisma.currencyType.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CurrencyTypeDeleteManyArgs>(args?: SelectSubset<T, CurrencyTypeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CurrencyTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CurrencyTypeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CurrencyTypes
     * const currencyType = await prisma.currencyType.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CurrencyTypeUpdateManyArgs>(args: SelectSubset<T, CurrencyTypeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CurrencyTypes and returns the data updated in the database.
     * @param {CurrencyTypeUpdateManyAndReturnArgs} args - Arguments to update many CurrencyTypes.
     * @example
     * // Update many CurrencyTypes
     * const currencyType = await prisma.currencyType.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CurrencyTypes and only return the `id`
     * const currencyTypeWithIdOnly = await prisma.currencyType.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CurrencyTypeUpdateManyAndReturnArgs>(args: SelectSubset<T, CurrencyTypeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CurrencyTypePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CurrencyType.
     * @param {CurrencyTypeUpsertArgs} args - Arguments to update or create a CurrencyType.
     * @example
     * // Update or create a CurrencyType
     * const currencyType = await prisma.currencyType.upsert({
     *   create: {
     *     // ... data to create a CurrencyType
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CurrencyType we want to update
     *   }
     * })
     */
    upsert<T extends CurrencyTypeUpsertArgs>(args: SelectSubset<T, CurrencyTypeUpsertArgs<ExtArgs>>): Prisma__CurrencyTypeClient<$Result.GetResult<Prisma.$CurrencyTypePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CurrencyTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CurrencyTypeCountArgs} args - Arguments to filter CurrencyTypes to count.
     * @example
     * // Count the number of CurrencyTypes
     * const count = await prisma.currencyType.count({
     *   where: {
     *     // ... the filter for the CurrencyTypes we want to count
     *   }
     * })
    **/
    count<T extends CurrencyTypeCountArgs>(
      args?: Subset<T, CurrencyTypeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CurrencyTypeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CurrencyType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CurrencyTypeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CurrencyTypeAggregateArgs>(args: Subset<T, CurrencyTypeAggregateArgs>): Prisma.PrismaPromise<GetCurrencyTypeAggregateType<T>>

    /**
     * Group by CurrencyType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CurrencyTypeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CurrencyTypeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CurrencyTypeGroupByArgs['orderBy'] }
        : { orderBy?: CurrencyTypeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CurrencyTypeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCurrencyTypeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CurrencyType model
   */
  readonly fields: CurrencyTypeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CurrencyType.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CurrencyTypeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    clients<T extends CurrencyType$clientsArgs<ExtArgs> = {}>(args?: Subset<T, CurrencyType$clientsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    peopleSalary<T extends CurrencyType$peopleSalaryArgs<ExtArgs> = {}>(args?: Subset<T, CurrencyType$peopleSalaryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PeoplePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    peopleFee<T extends CurrencyType$peopleFeeArgs<ExtArgs> = {}>(args?: Subset<T, CurrencyType$peopleFeeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PeoplePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    peopleLaptop<T extends CurrencyType$peopleLaptopArgs<ExtArgs> = {}>(args?: Subset<T, CurrencyType$peopleLaptopArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PeoplePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    PreInvoiceDetail<T extends CurrencyType$PreInvoiceDetailArgs<ExtArgs> = {}>(args?: Subset<T, CurrencyType$PreInvoiceDetailArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PreInvoiceDetailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Price<T extends CurrencyType$PriceArgs<ExtArgs> = {}>(args?: Subset<T, CurrencyType$PriceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CurrencyType model
   */
  interface CurrencyTypeFieldRefs {
    readonly id: FieldRef<"CurrencyType", 'Int'>
    readonly name: FieldRef<"CurrencyType", 'String'>
    readonly symbol: FieldRef<"CurrencyType", 'String'>
    readonly createdAt: FieldRef<"CurrencyType", 'DateTime'>
    readonly updatedAt: FieldRef<"CurrencyType", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CurrencyType findUnique
   */
  export type CurrencyTypeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyType
     */
    select?: CurrencyTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyType
     */
    omit?: CurrencyTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyTypeInclude<ExtArgs> | null
    /**
     * Filter, which CurrencyType to fetch.
     */
    where: CurrencyTypeWhereUniqueInput
  }

  /**
   * CurrencyType findUniqueOrThrow
   */
  export type CurrencyTypeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyType
     */
    select?: CurrencyTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyType
     */
    omit?: CurrencyTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyTypeInclude<ExtArgs> | null
    /**
     * Filter, which CurrencyType to fetch.
     */
    where: CurrencyTypeWhereUniqueInput
  }

  /**
   * CurrencyType findFirst
   */
  export type CurrencyTypeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyType
     */
    select?: CurrencyTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyType
     */
    omit?: CurrencyTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyTypeInclude<ExtArgs> | null
    /**
     * Filter, which CurrencyType to fetch.
     */
    where?: CurrencyTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CurrencyTypes to fetch.
     */
    orderBy?: CurrencyTypeOrderByWithRelationInput | CurrencyTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CurrencyTypes.
     */
    cursor?: CurrencyTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CurrencyTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CurrencyTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CurrencyTypes.
     */
    distinct?: CurrencyTypeScalarFieldEnum | CurrencyTypeScalarFieldEnum[]
  }

  /**
   * CurrencyType findFirstOrThrow
   */
  export type CurrencyTypeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyType
     */
    select?: CurrencyTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyType
     */
    omit?: CurrencyTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyTypeInclude<ExtArgs> | null
    /**
     * Filter, which CurrencyType to fetch.
     */
    where?: CurrencyTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CurrencyTypes to fetch.
     */
    orderBy?: CurrencyTypeOrderByWithRelationInput | CurrencyTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CurrencyTypes.
     */
    cursor?: CurrencyTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CurrencyTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CurrencyTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CurrencyTypes.
     */
    distinct?: CurrencyTypeScalarFieldEnum | CurrencyTypeScalarFieldEnum[]
  }

  /**
   * CurrencyType findMany
   */
  export type CurrencyTypeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyType
     */
    select?: CurrencyTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyType
     */
    omit?: CurrencyTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyTypeInclude<ExtArgs> | null
    /**
     * Filter, which CurrencyTypes to fetch.
     */
    where?: CurrencyTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CurrencyTypes to fetch.
     */
    orderBy?: CurrencyTypeOrderByWithRelationInput | CurrencyTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CurrencyTypes.
     */
    cursor?: CurrencyTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CurrencyTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CurrencyTypes.
     */
    skip?: number
    distinct?: CurrencyTypeScalarFieldEnum | CurrencyTypeScalarFieldEnum[]
  }

  /**
   * CurrencyType create
   */
  export type CurrencyTypeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyType
     */
    select?: CurrencyTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyType
     */
    omit?: CurrencyTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyTypeInclude<ExtArgs> | null
    /**
     * The data needed to create a CurrencyType.
     */
    data: XOR<CurrencyTypeCreateInput, CurrencyTypeUncheckedCreateInput>
  }

  /**
   * CurrencyType createMany
   */
  export type CurrencyTypeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CurrencyTypes.
     */
    data: CurrencyTypeCreateManyInput | CurrencyTypeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CurrencyType createManyAndReturn
   */
  export type CurrencyTypeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyType
     */
    select?: CurrencyTypeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyType
     */
    omit?: CurrencyTypeOmit<ExtArgs> | null
    /**
     * The data used to create many CurrencyTypes.
     */
    data: CurrencyTypeCreateManyInput | CurrencyTypeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CurrencyType update
   */
  export type CurrencyTypeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyType
     */
    select?: CurrencyTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyType
     */
    omit?: CurrencyTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyTypeInclude<ExtArgs> | null
    /**
     * The data needed to update a CurrencyType.
     */
    data: XOR<CurrencyTypeUpdateInput, CurrencyTypeUncheckedUpdateInput>
    /**
     * Choose, which CurrencyType to update.
     */
    where: CurrencyTypeWhereUniqueInput
  }

  /**
   * CurrencyType updateMany
   */
  export type CurrencyTypeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CurrencyTypes.
     */
    data: XOR<CurrencyTypeUpdateManyMutationInput, CurrencyTypeUncheckedUpdateManyInput>
    /**
     * Filter which CurrencyTypes to update
     */
    where?: CurrencyTypeWhereInput
    /**
     * Limit how many CurrencyTypes to update.
     */
    limit?: number
  }

  /**
   * CurrencyType updateManyAndReturn
   */
  export type CurrencyTypeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyType
     */
    select?: CurrencyTypeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyType
     */
    omit?: CurrencyTypeOmit<ExtArgs> | null
    /**
     * The data used to update CurrencyTypes.
     */
    data: XOR<CurrencyTypeUpdateManyMutationInput, CurrencyTypeUncheckedUpdateManyInput>
    /**
     * Filter which CurrencyTypes to update
     */
    where?: CurrencyTypeWhereInput
    /**
     * Limit how many CurrencyTypes to update.
     */
    limit?: number
  }

  /**
   * CurrencyType upsert
   */
  export type CurrencyTypeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyType
     */
    select?: CurrencyTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyType
     */
    omit?: CurrencyTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyTypeInclude<ExtArgs> | null
    /**
     * The filter to search for the CurrencyType to update in case it exists.
     */
    where: CurrencyTypeWhereUniqueInput
    /**
     * In case the CurrencyType found by the `where` argument doesn't exist, create a new CurrencyType with this data.
     */
    create: XOR<CurrencyTypeCreateInput, CurrencyTypeUncheckedCreateInput>
    /**
     * In case the CurrencyType was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CurrencyTypeUpdateInput, CurrencyTypeUncheckedUpdateInput>
  }

  /**
   * CurrencyType delete
   */
  export type CurrencyTypeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyType
     */
    select?: CurrencyTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyType
     */
    omit?: CurrencyTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyTypeInclude<ExtArgs> | null
    /**
     * Filter which CurrencyType to delete.
     */
    where: CurrencyTypeWhereUniqueInput
  }

  /**
   * CurrencyType deleteMany
   */
  export type CurrencyTypeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CurrencyTypes to delete
     */
    where?: CurrencyTypeWhereInput
    /**
     * Limit how many CurrencyTypes to delete.
     */
    limit?: number
  }

  /**
   * CurrencyType.clients
   */
  export type CurrencyType$clientsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    where?: ClientWhereInput
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    cursor?: ClientWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * CurrencyType.peopleSalary
   */
  export type CurrencyType$peopleSalaryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the People
     */
    select?: PeopleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the People
     */
    omit?: PeopleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeopleInclude<ExtArgs> | null
    where?: PeopleWhereInput
    orderBy?: PeopleOrderByWithRelationInput | PeopleOrderByWithRelationInput[]
    cursor?: PeopleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PeopleScalarFieldEnum | PeopleScalarFieldEnum[]
  }

  /**
   * CurrencyType.peopleFee
   */
  export type CurrencyType$peopleFeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the People
     */
    select?: PeopleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the People
     */
    omit?: PeopleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeopleInclude<ExtArgs> | null
    where?: PeopleWhereInput
    orderBy?: PeopleOrderByWithRelationInput | PeopleOrderByWithRelationInput[]
    cursor?: PeopleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PeopleScalarFieldEnum | PeopleScalarFieldEnum[]
  }

  /**
   * CurrencyType.peopleLaptop
   */
  export type CurrencyType$peopleLaptopArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the People
     */
    select?: PeopleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the People
     */
    omit?: PeopleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeopleInclude<ExtArgs> | null
    where?: PeopleWhereInput
    orderBy?: PeopleOrderByWithRelationInput | PeopleOrderByWithRelationInput[]
    cursor?: PeopleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PeopleScalarFieldEnum | PeopleScalarFieldEnum[]
  }

  /**
   * CurrencyType.PreInvoiceDetail
   */
  export type CurrencyType$PreInvoiceDetailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoiceDetail
     */
    select?: PreInvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoiceDetail
     */
    omit?: PreInvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceDetailInclude<ExtArgs> | null
    where?: PreInvoiceDetailWhereInput
    orderBy?: PreInvoiceDetailOrderByWithRelationInput | PreInvoiceDetailOrderByWithRelationInput[]
    cursor?: PreInvoiceDetailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PreInvoiceDetailScalarFieldEnum | PreInvoiceDetailScalarFieldEnum[]
  }

  /**
   * CurrencyType.Price
   */
  export type CurrencyType$PriceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Price
     */
    omit?: PriceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    where?: PriceWhereInput
    orderBy?: PriceOrderByWithRelationInput | PriceOrderByWithRelationInput[]
    cursor?: PriceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PriceScalarFieldEnum | PriceScalarFieldEnum[]
  }

  /**
   * CurrencyType without action
   */
  export type CurrencyTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyType
     */
    select?: CurrencyTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyType
     */
    omit?: CurrencyTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyTypeInclude<ExtArgs> | null
  }


  /**
   * Model Client
   */

  export type AggregateClient = {
    _count: ClientCountAggregateOutputType | null
    _avg: ClientAvgAggregateOutputType | null
    _sum: ClientSumAggregateOutputType | null
    _min: ClientMinAggregateOutputType | null
    _max: ClientMaxAggregateOutputType | null
  }

  export type ClientAvgAggregateOutputType = {
    id: number | null
    currencyTypeId: number | null
    billableDay: Decimal | null
    marginPercentage: Decimal | null
  }

  export type ClientSumAggregateOutputType = {
    id: number | null
    currencyTypeId: number | null
    billableDay: Decimal | null
    marginPercentage: Decimal | null
  }

  export type ClientMinAggregateOutputType = {
    id: number | null
    name: string | null
    currencyTypeId: number | null
    billableDay: Decimal | null
    rut: string | null
    address: string | null
    companyName: string | null
    marginPercentage: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ClientMaxAggregateOutputType = {
    id: number | null
    name: string | null
    currencyTypeId: number | null
    billableDay: Decimal | null
    rut: string | null
    address: string | null
    companyName: string | null
    marginPercentage: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ClientCountAggregateOutputType = {
    id: number
    name: number
    currencyTypeId: number
    billableDay: number
    rut: number
    address: number
    companyName: number
    marginPercentage: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ClientAvgAggregateInputType = {
    id?: true
    currencyTypeId?: true
    billableDay?: true
    marginPercentage?: true
  }

  export type ClientSumAggregateInputType = {
    id?: true
    currencyTypeId?: true
    billableDay?: true
    marginPercentage?: true
  }

  export type ClientMinAggregateInputType = {
    id?: true
    name?: true
    currencyTypeId?: true
    billableDay?: true
    rut?: true
    address?: true
    companyName?: true
    marginPercentage?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ClientMaxAggregateInputType = {
    id?: true
    name?: true
    currencyTypeId?: true
    billableDay?: true
    rut?: true
    address?: true
    companyName?: true
    marginPercentage?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ClientCountAggregateInputType = {
    id?: true
    name?: true
    currencyTypeId?: true
    billableDay?: true
    rut?: true
    address?: true
    companyName?: true
    marginPercentage?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ClientAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Client to aggregate.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Clients
    **/
    _count?: true | ClientCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClientAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClientSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClientMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClientMaxAggregateInputType
  }

  export type GetClientAggregateType<T extends ClientAggregateArgs> = {
        [P in keyof T & keyof AggregateClient]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClient[P]>
      : GetScalarType<T[P], AggregateClient[P]>
  }




  export type ClientGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientWhereInput
    orderBy?: ClientOrderByWithAggregationInput | ClientOrderByWithAggregationInput[]
    by: ClientScalarFieldEnum[] | ClientScalarFieldEnum
    having?: ClientScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClientCountAggregateInputType | true
    _avg?: ClientAvgAggregateInputType
    _sum?: ClientSumAggregateInputType
    _min?: ClientMinAggregateInputType
    _max?: ClientMaxAggregateInputType
  }

  export type ClientGroupByOutputType = {
    id: number
    name: string
    currencyTypeId: number | null
    billableDay: Decimal | null
    rut: string | null
    address: string | null
    companyName: string | null
    marginPercentage: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
    _count: ClientCountAggregateOutputType | null
    _avg: ClientAvgAggregateOutputType | null
    _sum: ClientSumAggregateOutputType | null
    _min: ClientMinAggregateOutputType | null
    _max: ClientMaxAggregateOutputType | null
  }

  type GetClientGroupByPayload<T extends ClientGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClientGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClientGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClientGroupByOutputType[P]>
            : GetScalarType<T[P], ClientGroupByOutputType[P]>
        }
      >
    >


  export type ClientSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    currencyTypeId?: boolean
    billableDay?: boolean
    rut?: boolean
    address?: boolean
    companyName?: boolean
    marginPercentage?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    currencyType?: boolean | Client$currencyTypeArgs<ExtArgs>
    contacts?: boolean | Client$contactsArgs<ExtArgs>
    people?: boolean | Client$peopleArgs<ExtArgs>
    preInvoices?: boolean | Client$preInvoicesArgs<ExtArgs>
    projects?: boolean | Client$projectsArgs<ExtArgs>
    _count?: boolean | ClientCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["client"]>

  export type ClientSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    currencyTypeId?: boolean
    billableDay?: boolean
    rut?: boolean
    address?: boolean
    companyName?: boolean
    marginPercentage?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    currencyType?: boolean | Client$currencyTypeArgs<ExtArgs>
  }, ExtArgs["result"]["client"]>

  export type ClientSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    currencyTypeId?: boolean
    billableDay?: boolean
    rut?: boolean
    address?: boolean
    companyName?: boolean
    marginPercentage?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    currencyType?: boolean | Client$currencyTypeArgs<ExtArgs>
  }, ExtArgs["result"]["client"]>

  export type ClientSelectScalar = {
    id?: boolean
    name?: boolean
    currencyTypeId?: boolean
    billableDay?: boolean
    rut?: boolean
    address?: boolean
    companyName?: boolean
    marginPercentage?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ClientOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "currencyTypeId" | "billableDay" | "rut" | "address" | "companyName" | "marginPercentage" | "createdAt" | "updatedAt", ExtArgs["result"]["client"]>
  export type ClientInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    currencyType?: boolean | Client$currencyTypeArgs<ExtArgs>
    contacts?: boolean | Client$contactsArgs<ExtArgs>
    people?: boolean | Client$peopleArgs<ExtArgs>
    preInvoices?: boolean | Client$preInvoicesArgs<ExtArgs>
    projects?: boolean | Client$projectsArgs<ExtArgs>
    _count?: boolean | ClientCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ClientIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    currencyType?: boolean | Client$currencyTypeArgs<ExtArgs>
  }
  export type ClientIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    currencyType?: boolean | Client$currencyTypeArgs<ExtArgs>
  }

  export type $ClientPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Client"
    objects: {
      currencyType: Prisma.$CurrencyTypePayload<ExtArgs> | null
      contacts: Prisma.$ContactPayload<ExtArgs>[]
      people: Prisma.$PeoplePayload<ExtArgs>[]
      preInvoices: Prisma.$PreInvoicePayload<ExtArgs>[]
      projects: Prisma.$ProjectPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      currencyTypeId: number | null
      billableDay: Prisma.Decimal | null
      rut: string | null
      address: string | null
      companyName: string | null
      marginPercentage: Prisma.Decimal | null
      createdAt: Date | null
      updatedAt: Date | null
    }, ExtArgs["result"]["client"]>
    composites: {}
  }

  type ClientGetPayload<S extends boolean | null | undefined | ClientDefaultArgs> = $Result.GetResult<Prisma.$ClientPayload, S>

  type ClientCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ClientFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ClientCountAggregateInputType | true
    }

  export interface ClientDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Client'], meta: { name: 'Client' } }
    /**
     * Find zero or one Client that matches the filter.
     * @param {ClientFindUniqueArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClientFindUniqueArgs>(args: SelectSubset<T, ClientFindUniqueArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Client that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ClientFindUniqueOrThrowArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClientFindUniqueOrThrowArgs>(args: SelectSubset<T, ClientFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Client that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientFindFirstArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClientFindFirstArgs>(args?: SelectSubset<T, ClientFindFirstArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Client that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientFindFirstOrThrowArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClientFindFirstOrThrowArgs>(args?: SelectSubset<T, ClientFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Clients that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clients
     * const clients = await prisma.client.findMany()
     * 
     * // Get first 10 Clients
     * const clients = await prisma.client.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const clientWithIdOnly = await prisma.client.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ClientFindManyArgs>(args?: SelectSubset<T, ClientFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Client.
     * @param {ClientCreateArgs} args - Arguments to create a Client.
     * @example
     * // Create one Client
     * const Client = await prisma.client.create({
     *   data: {
     *     // ... data to create a Client
     *   }
     * })
     * 
     */
    create<T extends ClientCreateArgs>(args: SelectSubset<T, ClientCreateArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Clients.
     * @param {ClientCreateManyArgs} args - Arguments to create many Clients.
     * @example
     * // Create many Clients
     * const client = await prisma.client.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClientCreateManyArgs>(args?: SelectSubset<T, ClientCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Clients and returns the data saved in the database.
     * @param {ClientCreateManyAndReturnArgs} args - Arguments to create many Clients.
     * @example
     * // Create many Clients
     * const client = await prisma.client.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Clients and only return the `id`
     * const clientWithIdOnly = await prisma.client.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClientCreateManyAndReturnArgs>(args?: SelectSubset<T, ClientCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Client.
     * @param {ClientDeleteArgs} args - Arguments to delete one Client.
     * @example
     * // Delete one Client
     * const Client = await prisma.client.delete({
     *   where: {
     *     // ... filter to delete one Client
     *   }
     * })
     * 
     */
    delete<T extends ClientDeleteArgs>(args: SelectSubset<T, ClientDeleteArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Client.
     * @param {ClientUpdateArgs} args - Arguments to update one Client.
     * @example
     * // Update one Client
     * const client = await prisma.client.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClientUpdateArgs>(args: SelectSubset<T, ClientUpdateArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Clients.
     * @param {ClientDeleteManyArgs} args - Arguments to filter Clients to delete.
     * @example
     * // Delete a few Clients
     * const { count } = await prisma.client.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClientDeleteManyArgs>(args?: SelectSubset<T, ClientDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clients
     * const client = await prisma.client.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClientUpdateManyArgs>(args: SelectSubset<T, ClientUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clients and returns the data updated in the database.
     * @param {ClientUpdateManyAndReturnArgs} args - Arguments to update many Clients.
     * @example
     * // Update many Clients
     * const client = await prisma.client.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Clients and only return the `id`
     * const clientWithIdOnly = await prisma.client.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ClientUpdateManyAndReturnArgs>(args: SelectSubset<T, ClientUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Client.
     * @param {ClientUpsertArgs} args - Arguments to update or create a Client.
     * @example
     * // Update or create a Client
     * const client = await prisma.client.upsert({
     *   create: {
     *     // ... data to create a Client
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Client we want to update
     *   }
     * })
     */
    upsert<T extends ClientUpsertArgs>(args: SelectSubset<T, ClientUpsertArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientCountArgs} args - Arguments to filter Clients to count.
     * @example
     * // Count the number of Clients
     * const count = await prisma.client.count({
     *   where: {
     *     // ... the filter for the Clients we want to count
     *   }
     * })
    **/
    count<T extends ClientCountArgs>(
      args?: Subset<T, ClientCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClientCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Client.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClientAggregateArgs>(args: Subset<T, ClientAggregateArgs>): Prisma.PrismaPromise<GetClientAggregateType<T>>

    /**
     * Group by Client.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClientGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClientGroupByArgs['orderBy'] }
        : { orderBy?: ClientGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClientGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClientGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Client model
   */
  readonly fields: ClientFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Client.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClientClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    currencyType<T extends Client$currencyTypeArgs<ExtArgs> = {}>(args?: Subset<T, Client$currencyTypeArgs<ExtArgs>>): Prisma__CurrencyTypeClient<$Result.GetResult<Prisma.$CurrencyTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    contacts<T extends Client$contactsArgs<ExtArgs> = {}>(args?: Subset<T, Client$contactsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    people<T extends Client$peopleArgs<ExtArgs> = {}>(args?: Subset<T, Client$peopleArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PeoplePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    preInvoices<T extends Client$preInvoicesArgs<ExtArgs> = {}>(args?: Subset<T, Client$preInvoicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PreInvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    projects<T extends Client$projectsArgs<ExtArgs> = {}>(args?: Subset<T, Client$projectsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Client model
   */
  interface ClientFieldRefs {
    readonly id: FieldRef<"Client", 'Int'>
    readonly name: FieldRef<"Client", 'String'>
    readonly currencyTypeId: FieldRef<"Client", 'Int'>
    readonly billableDay: FieldRef<"Client", 'Decimal'>
    readonly rut: FieldRef<"Client", 'String'>
    readonly address: FieldRef<"Client", 'String'>
    readonly companyName: FieldRef<"Client", 'String'>
    readonly marginPercentage: FieldRef<"Client", 'Decimal'>
    readonly createdAt: FieldRef<"Client", 'DateTime'>
    readonly updatedAt: FieldRef<"Client", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Client findUnique
   */
  export type ClientFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client findUniqueOrThrow
   */
  export type ClientFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client findFirst
   */
  export type ClientFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clients.
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clients.
     */
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * Client findFirstOrThrow
   */
  export type ClientFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clients.
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clients.
     */
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * Client findMany
   */
  export type ClientFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Clients to fetch.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Clients.
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * Client create
   */
  export type ClientCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * The data needed to create a Client.
     */
    data: XOR<ClientCreateInput, ClientUncheckedCreateInput>
  }

  /**
   * Client createMany
   */
  export type ClientCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Clients.
     */
    data: ClientCreateManyInput | ClientCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Client createManyAndReturn
   */
  export type ClientCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * The data used to create many Clients.
     */
    data: ClientCreateManyInput | ClientCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Client update
   */
  export type ClientUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * The data needed to update a Client.
     */
    data: XOR<ClientUpdateInput, ClientUncheckedUpdateInput>
    /**
     * Choose, which Client to update.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client updateMany
   */
  export type ClientUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Clients.
     */
    data: XOR<ClientUpdateManyMutationInput, ClientUncheckedUpdateManyInput>
    /**
     * Filter which Clients to update
     */
    where?: ClientWhereInput
    /**
     * Limit how many Clients to update.
     */
    limit?: number
  }

  /**
   * Client updateManyAndReturn
   */
  export type ClientUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * The data used to update Clients.
     */
    data: XOR<ClientUpdateManyMutationInput, ClientUncheckedUpdateManyInput>
    /**
     * Filter which Clients to update
     */
    where?: ClientWhereInput
    /**
     * Limit how many Clients to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Client upsert
   */
  export type ClientUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * The filter to search for the Client to update in case it exists.
     */
    where: ClientWhereUniqueInput
    /**
     * In case the Client found by the `where` argument doesn't exist, create a new Client with this data.
     */
    create: XOR<ClientCreateInput, ClientUncheckedCreateInput>
    /**
     * In case the Client was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClientUpdateInput, ClientUncheckedUpdateInput>
  }

  /**
   * Client delete
   */
  export type ClientDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter which Client to delete.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client deleteMany
   */
  export type ClientDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Clients to delete
     */
    where?: ClientWhereInput
    /**
     * Limit how many Clients to delete.
     */
    limit?: number
  }

  /**
   * Client.currencyType
   */
  export type Client$currencyTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyType
     */
    select?: CurrencyTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyType
     */
    omit?: CurrencyTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyTypeInclude<ExtArgs> | null
    where?: CurrencyTypeWhereInput
  }

  /**
   * Client.contacts
   */
  export type Client$contactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    where?: ContactWhereInput
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    cursor?: ContactWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * Client.people
   */
  export type Client$peopleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the People
     */
    select?: PeopleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the People
     */
    omit?: PeopleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeopleInclude<ExtArgs> | null
    where?: PeopleWhereInput
    orderBy?: PeopleOrderByWithRelationInput | PeopleOrderByWithRelationInput[]
    cursor?: PeopleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PeopleScalarFieldEnum | PeopleScalarFieldEnum[]
  }

  /**
   * Client.preInvoices
   */
  export type Client$preInvoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoice
     */
    select?: PreInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoice
     */
    omit?: PreInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceInclude<ExtArgs> | null
    where?: PreInvoiceWhereInput
    orderBy?: PreInvoiceOrderByWithRelationInput | PreInvoiceOrderByWithRelationInput[]
    cursor?: PreInvoiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PreInvoiceScalarFieldEnum | PreInvoiceScalarFieldEnum[]
  }

  /**
   * Client.projects
   */
  export type Client$projectsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    where?: ProjectWhereInput
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    cursor?: ProjectWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * Client without action
   */
  export type ClientDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
  }


  /**
   * Model Contact
   */

  export type AggregateContact = {
    _count: ContactCountAggregateOutputType | null
    _avg: ContactAvgAggregateOutputType | null
    _sum: ContactSumAggregateOutputType | null
    _min: ContactMinAggregateOutputType | null
    _max: ContactMaxAggregateOutputType | null
  }

  export type ContactAvgAggregateOutputType = {
    id: number | null
    clientId: number | null
    technicalStacksId: number | null
  }

  export type ContactSumAggregateOutputType = {
    id: number | null
    clientId: number | null
    technicalStacksId: number | null
  }

  export type ContactMinAggregateOutputType = {
    id: number | null
    name: string | null
    lastName: string | null
    email: string | null
    phone: string | null
    clientId: number | null
    technicalStacksId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ContactMaxAggregateOutputType = {
    id: number | null
    name: string | null
    lastName: string | null
    email: string | null
    phone: string | null
    clientId: number | null
    technicalStacksId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ContactCountAggregateOutputType = {
    id: number
    name: number
    lastName: number
    email: number
    phone: number
    clientId: number
    technicalStacksId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ContactAvgAggregateInputType = {
    id?: true
    clientId?: true
    technicalStacksId?: true
  }

  export type ContactSumAggregateInputType = {
    id?: true
    clientId?: true
    technicalStacksId?: true
  }

  export type ContactMinAggregateInputType = {
    id?: true
    name?: true
    lastName?: true
    email?: true
    phone?: true
    clientId?: true
    technicalStacksId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ContactMaxAggregateInputType = {
    id?: true
    name?: true
    lastName?: true
    email?: true
    phone?: true
    clientId?: true
    technicalStacksId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ContactCountAggregateInputType = {
    id?: true
    name?: true
    lastName?: true
    email?: true
    phone?: true
    clientId?: true
    technicalStacksId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ContactAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Contact to aggregate.
     */
    where?: ContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contacts to fetch.
     */
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Contacts
    **/
    _count?: true | ContactCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ContactAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ContactSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ContactMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ContactMaxAggregateInputType
  }

  export type GetContactAggregateType<T extends ContactAggregateArgs> = {
        [P in keyof T & keyof AggregateContact]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateContact[P]>
      : GetScalarType<T[P], AggregateContact[P]>
  }




  export type ContactGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContactWhereInput
    orderBy?: ContactOrderByWithAggregationInput | ContactOrderByWithAggregationInput[]
    by: ContactScalarFieldEnum[] | ContactScalarFieldEnum
    having?: ContactScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ContactCountAggregateInputType | true
    _avg?: ContactAvgAggregateInputType
    _sum?: ContactSumAggregateInputType
    _min?: ContactMinAggregateInputType
    _max?: ContactMaxAggregateInputType
  }

  export type ContactGroupByOutputType = {
    id: number
    name: string
    lastName: string | null
    email: string | null
    phone: string | null
    clientId: number | null
    technicalStacksId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    _count: ContactCountAggregateOutputType | null
    _avg: ContactAvgAggregateOutputType | null
    _sum: ContactSumAggregateOutputType | null
    _min: ContactMinAggregateOutputType | null
    _max: ContactMaxAggregateOutputType | null
  }

  type GetContactGroupByPayload<T extends ContactGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ContactGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ContactGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ContactGroupByOutputType[P]>
            : GetScalarType<T[P], ContactGroupByOutputType[P]>
        }
      >
    >


  export type ContactSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    clientId?: boolean
    technicalStacksId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | Contact$clientArgs<ExtArgs>
    technicalStacks?: boolean | Contact$technicalStacksArgs<ExtArgs>
    preInvoices?: boolean | Contact$preInvoicesArgs<ExtArgs>
    _count?: boolean | ContactCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["contact"]>

  export type ContactSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    clientId?: boolean
    technicalStacksId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | Contact$clientArgs<ExtArgs>
    technicalStacks?: boolean | Contact$technicalStacksArgs<ExtArgs>
  }, ExtArgs["result"]["contact"]>

  export type ContactSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    clientId?: boolean
    technicalStacksId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | Contact$clientArgs<ExtArgs>
    technicalStacks?: boolean | Contact$technicalStacksArgs<ExtArgs>
  }, ExtArgs["result"]["contact"]>

  export type ContactSelectScalar = {
    id?: boolean
    name?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    clientId?: boolean
    technicalStacksId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ContactOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "lastName" | "email" | "phone" | "clientId" | "technicalStacksId" | "createdAt" | "updatedAt", ExtArgs["result"]["contact"]>
  export type ContactInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | Contact$clientArgs<ExtArgs>
    technicalStacks?: boolean | Contact$technicalStacksArgs<ExtArgs>
    preInvoices?: boolean | Contact$preInvoicesArgs<ExtArgs>
    _count?: boolean | ContactCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ContactIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | Contact$clientArgs<ExtArgs>
    technicalStacks?: boolean | Contact$technicalStacksArgs<ExtArgs>
  }
  export type ContactIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | Contact$clientArgs<ExtArgs>
    technicalStacks?: boolean | Contact$technicalStacksArgs<ExtArgs>
  }

  export type $ContactPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Contact"
    objects: {
      client: Prisma.$ClientPayload<ExtArgs> | null
      technicalStacks: Prisma.$TechnicalsStacksPayload<ExtArgs> | null
      preInvoices: Prisma.$PreInvoicePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      lastName: string | null
      email: string | null
      phone: string | null
      clientId: number | null
      technicalStacksId: number | null
      createdAt: Date | null
      updatedAt: Date | null
    }, ExtArgs["result"]["contact"]>
    composites: {}
  }

  type ContactGetPayload<S extends boolean | null | undefined | ContactDefaultArgs> = $Result.GetResult<Prisma.$ContactPayload, S>

  type ContactCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ContactFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ContactCountAggregateInputType | true
    }

  export interface ContactDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Contact'], meta: { name: 'Contact' } }
    /**
     * Find zero or one Contact that matches the filter.
     * @param {ContactFindUniqueArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ContactFindUniqueArgs>(args: SelectSubset<T, ContactFindUniqueArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Contact that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ContactFindUniqueOrThrowArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ContactFindUniqueOrThrowArgs>(args: SelectSubset<T, ContactFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Contact that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactFindFirstArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ContactFindFirstArgs>(args?: SelectSubset<T, ContactFindFirstArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Contact that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactFindFirstOrThrowArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ContactFindFirstOrThrowArgs>(args?: SelectSubset<T, ContactFindFirstOrThrowArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Contacts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Contacts
     * const contacts = await prisma.contact.findMany()
     * 
     * // Get first 10 Contacts
     * const contacts = await prisma.contact.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const contactWithIdOnly = await prisma.contact.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ContactFindManyArgs>(args?: SelectSubset<T, ContactFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Contact.
     * @param {ContactCreateArgs} args - Arguments to create a Contact.
     * @example
     * // Create one Contact
     * const Contact = await prisma.contact.create({
     *   data: {
     *     // ... data to create a Contact
     *   }
     * })
     * 
     */
    create<T extends ContactCreateArgs>(args: SelectSubset<T, ContactCreateArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Contacts.
     * @param {ContactCreateManyArgs} args - Arguments to create many Contacts.
     * @example
     * // Create many Contacts
     * const contact = await prisma.contact.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ContactCreateManyArgs>(args?: SelectSubset<T, ContactCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Contacts and returns the data saved in the database.
     * @param {ContactCreateManyAndReturnArgs} args - Arguments to create many Contacts.
     * @example
     * // Create many Contacts
     * const contact = await prisma.contact.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Contacts and only return the `id`
     * const contactWithIdOnly = await prisma.contact.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ContactCreateManyAndReturnArgs>(args?: SelectSubset<T, ContactCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Contact.
     * @param {ContactDeleteArgs} args - Arguments to delete one Contact.
     * @example
     * // Delete one Contact
     * const Contact = await prisma.contact.delete({
     *   where: {
     *     // ... filter to delete one Contact
     *   }
     * })
     * 
     */
    delete<T extends ContactDeleteArgs>(args: SelectSubset<T, ContactDeleteArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Contact.
     * @param {ContactUpdateArgs} args - Arguments to update one Contact.
     * @example
     * // Update one Contact
     * const contact = await prisma.contact.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ContactUpdateArgs>(args: SelectSubset<T, ContactUpdateArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Contacts.
     * @param {ContactDeleteManyArgs} args - Arguments to filter Contacts to delete.
     * @example
     * // Delete a few Contacts
     * const { count } = await prisma.contact.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ContactDeleteManyArgs>(args?: SelectSubset<T, ContactDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Contacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Contacts
     * const contact = await prisma.contact.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ContactUpdateManyArgs>(args: SelectSubset<T, ContactUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Contacts and returns the data updated in the database.
     * @param {ContactUpdateManyAndReturnArgs} args - Arguments to update many Contacts.
     * @example
     * // Update many Contacts
     * const contact = await prisma.contact.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Contacts and only return the `id`
     * const contactWithIdOnly = await prisma.contact.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ContactUpdateManyAndReturnArgs>(args: SelectSubset<T, ContactUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Contact.
     * @param {ContactUpsertArgs} args - Arguments to update or create a Contact.
     * @example
     * // Update or create a Contact
     * const contact = await prisma.contact.upsert({
     *   create: {
     *     // ... data to create a Contact
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Contact we want to update
     *   }
     * })
     */
    upsert<T extends ContactUpsertArgs>(args: SelectSubset<T, ContactUpsertArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Contacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactCountArgs} args - Arguments to filter Contacts to count.
     * @example
     * // Count the number of Contacts
     * const count = await prisma.contact.count({
     *   where: {
     *     // ... the filter for the Contacts we want to count
     *   }
     * })
    **/
    count<T extends ContactCountArgs>(
      args?: Subset<T, ContactCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ContactCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Contact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ContactAggregateArgs>(args: Subset<T, ContactAggregateArgs>): Prisma.PrismaPromise<GetContactAggregateType<T>>

    /**
     * Group by Contact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ContactGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ContactGroupByArgs['orderBy'] }
        : { orderBy?: ContactGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ContactGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetContactGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Contact model
   */
  readonly fields: ContactFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Contact.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ContactClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends Contact$clientArgs<ExtArgs> = {}>(args?: Subset<T, Contact$clientArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    technicalStacks<T extends Contact$technicalStacksArgs<ExtArgs> = {}>(args?: Subset<T, Contact$technicalStacksArgs<ExtArgs>>): Prisma__TechnicalsStacksClient<$Result.GetResult<Prisma.$TechnicalsStacksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    preInvoices<T extends Contact$preInvoicesArgs<ExtArgs> = {}>(args?: Subset<T, Contact$preInvoicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PreInvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Contact model
   */
  interface ContactFieldRefs {
    readonly id: FieldRef<"Contact", 'Int'>
    readonly name: FieldRef<"Contact", 'String'>
    readonly lastName: FieldRef<"Contact", 'String'>
    readonly email: FieldRef<"Contact", 'String'>
    readonly phone: FieldRef<"Contact", 'String'>
    readonly clientId: FieldRef<"Contact", 'Int'>
    readonly technicalStacksId: FieldRef<"Contact", 'Int'>
    readonly createdAt: FieldRef<"Contact", 'DateTime'>
    readonly updatedAt: FieldRef<"Contact", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Contact findUnique
   */
  export type ContactFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * Filter, which Contact to fetch.
     */
    where: ContactWhereUniqueInput
  }

  /**
   * Contact findUniqueOrThrow
   */
  export type ContactFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * Filter, which Contact to fetch.
     */
    where: ContactWhereUniqueInput
  }

  /**
   * Contact findFirst
   */
  export type ContactFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * Filter, which Contact to fetch.
     */
    where?: ContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contacts to fetch.
     */
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Contacts.
     */
    cursor?: ContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Contacts.
     */
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * Contact findFirstOrThrow
   */
  export type ContactFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * Filter, which Contact to fetch.
     */
    where?: ContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contacts to fetch.
     */
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Contacts.
     */
    cursor?: ContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Contacts.
     */
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * Contact findMany
   */
  export type ContactFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * Filter, which Contacts to fetch.
     */
    where?: ContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contacts to fetch.
     */
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Contacts.
     */
    cursor?: ContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contacts.
     */
    skip?: number
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * Contact create
   */
  export type ContactCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * The data needed to create a Contact.
     */
    data: XOR<ContactCreateInput, ContactUncheckedCreateInput>
  }

  /**
   * Contact createMany
   */
  export type ContactCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Contacts.
     */
    data: ContactCreateManyInput | ContactCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Contact createManyAndReturn
   */
  export type ContactCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * The data used to create many Contacts.
     */
    data: ContactCreateManyInput | ContactCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Contact update
   */
  export type ContactUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * The data needed to update a Contact.
     */
    data: XOR<ContactUpdateInput, ContactUncheckedUpdateInput>
    /**
     * Choose, which Contact to update.
     */
    where: ContactWhereUniqueInput
  }

  /**
   * Contact updateMany
   */
  export type ContactUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Contacts.
     */
    data: XOR<ContactUpdateManyMutationInput, ContactUncheckedUpdateManyInput>
    /**
     * Filter which Contacts to update
     */
    where?: ContactWhereInput
    /**
     * Limit how many Contacts to update.
     */
    limit?: number
  }

  /**
   * Contact updateManyAndReturn
   */
  export type ContactUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * The data used to update Contacts.
     */
    data: XOR<ContactUpdateManyMutationInput, ContactUncheckedUpdateManyInput>
    /**
     * Filter which Contacts to update
     */
    where?: ContactWhereInput
    /**
     * Limit how many Contacts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Contact upsert
   */
  export type ContactUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * The filter to search for the Contact to update in case it exists.
     */
    where: ContactWhereUniqueInput
    /**
     * In case the Contact found by the `where` argument doesn't exist, create a new Contact with this data.
     */
    create: XOR<ContactCreateInput, ContactUncheckedCreateInput>
    /**
     * In case the Contact was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ContactUpdateInput, ContactUncheckedUpdateInput>
  }

  /**
   * Contact delete
   */
  export type ContactDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * Filter which Contact to delete.
     */
    where: ContactWhereUniqueInput
  }

  /**
   * Contact deleteMany
   */
  export type ContactDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Contacts to delete
     */
    where?: ContactWhereInput
    /**
     * Limit how many Contacts to delete.
     */
    limit?: number
  }

  /**
   * Contact.client
   */
  export type Contact$clientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    where?: ClientWhereInput
  }

  /**
   * Contact.technicalStacks
   */
  export type Contact$technicalStacksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TechnicalsStacks
     */
    select?: TechnicalsStacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TechnicalsStacks
     */
    omit?: TechnicalsStacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TechnicalsStacksInclude<ExtArgs> | null
    where?: TechnicalsStacksWhereInput
  }

  /**
   * Contact.preInvoices
   */
  export type Contact$preInvoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoice
     */
    select?: PreInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoice
     */
    omit?: PreInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceInclude<ExtArgs> | null
    where?: PreInvoiceWhereInput
    orderBy?: PreInvoiceOrderByWithRelationInput | PreInvoiceOrderByWithRelationInput[]
    cursor?: PreInvoiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PreInvoiceScalarFieldEnum | PreInvoiceScalarFieldEnum[]
  }

  /**
   * Contact without action
   */
  export type ContactDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
  }


  /**
   * Model HealthInstitution
   */

  export type AggregateHealthInstitution = {
    _count: HealthInstitutionCountAggregateOutputType | null
    _avg: HealthInstitutionAvgAggregateOutputType | null
    _sum: HealthInstitutionSumAggregateOutputType | null
    _min: HealthInstitutionMinAggregateOutputType | null
    _max: HealthInstitutionMaxAggregateOutputType | null
  }

  export type HealthInstitutionAvgAggregateOutputType = {
    id: number | null
  }

  export type HealthInstitutionSumAggregateOutputType = {
    id: number | null
  }

  export type HealthInstitutionMinAggregateOutputType = {
    id: number | null
    name: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type HealthInstitutionMaxAggregateOutputType = {
    id: number | null
    name: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type HealthInstitutionCountAggregateOutputType = {
    id: number
    name: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type HealthInstitutionAvgAggregateInputType = {
    id?: true
  }

  export type HealthInstitutionSumAggregateInputType = {
    id?: true
  }

  export type HealthInstitutionMinAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
  }

  export type HealthInstitutionMaxAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
  }

  export type HealthInstitutionCountAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type HealthInstitutionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HealthInstitution to aggregate.
     */
    where?: HealthInstitutionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HealthInstitutions to fetch.
     */
    orderBy?: HealthInstitutionOrderByWithRelationInput | HealthInstitutionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HealthInstitutionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HealthInstitutions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HealthInstitutions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned HealthInstitutions
    **/
    _count?: true | HealthInstitutionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HealthInstitutionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HealthInstitutionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HealthInstitutionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HealthInstitutionMaxAggregateInputType
  }

  export type GetHealthInstitutionAggregateType<T extends HealthInstitutionAggregateArgs> = {
        [P in keyof T & keyof AggregateHealthInstitution]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHealthInstitution[P]>
      : GetScalarType<T[P], AggregateHealthInstitution[P]>
  }




  export type HealthInstitutionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HealthInstitutionWhereInput
    orderBy?: HealthInstitutionOrderByWithAggregationInput | HealthInstitutionOrderByWithAggregationInput[]
    by: HealthInstitutionScalarFieldEnum[] | HealthInstitutionScalarFieldEnum
    having?: HealthInstitutionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HealthInstitutionCountAggregateInputType | true
    _avg?: HealthInstitutionAvgAggregateInputType
    _sum?: HealthInstitutionSumAggregateInputType
    _min?: HealthInstitutionMinAggregateInputType
    _max?: HealthInstitutionMaxAggregateInputType
  }

  export type HealthInstitutionGroupByOutputType = {
    id: number
    name: string
    createdAt: Date | null
    updatedAt: Date | null
    _count: HealthInstitutionCountAggregateOutputType | null
    _avg: HealthInstitutionAvgAggregateOutputType | null
    _sum: HealthInstitutionSumAggregateOutputType | null
    _min: HealthInstitutionMinAggregateOutputType | null
    _max: HealthInstitutionMaxAggregateOutputType | null
  }

  type GetHealthInstitutionGroupByPayload<T extends HealthInstitutionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HealthInstitutionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HealthInstitutionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HealthInstitutionGroupByOutputType[P]>
            : GetScalarType<T[P], HealthInstitutionGroupByOutputType[P]>
        }
      >
    >


  export type HealthInstitutionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    people?: boolean | HealthInstitution$peopleArgs<ExtArgs>
    _count?: boolean | HealthInstitutionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["healthInstitution"]>

  export type HealthInstitutionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["healthInstitution"]>

  export type HealthInstitutionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["healthInstitution"]>

  export type HealthInstitutionSelectScalar = {
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type HealthInstitutionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "createdAt" | "updatedAt", ExtArgs["result"]["healthInstitution"]>
  export type HealthInstitutionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    people?: boolean | HealthInstitution$peopleArgs<ExtArgs>
    _count?: boolean | HealthInstitutionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type HealthInstitutionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type HealthInstitutionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $HealthInstitutionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "HealthInstitution"
    objects: {
      people: Prisma.$PeoplePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      createdAt: Date | null
      updatedAt: Date | null
    }, ExtArgs["result"]["healthInstitution"]>
    composites: {}
  }

  type HealthInstitutionGetPayload<S extends boolean | null | undefined | HealthInstitutionDefaultArgs> = $Result.GetResult<Prisma.$HealthInstitutionPayload, S>

  type HealthInstitutionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<HealthInstitutionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: HealthInstitutionCountAggregateInputType | true
    }

  export interface HealthInstitutionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['HealthInstitution'], meta: { name: 'HealthInstitution' } }
    /**
     * Find zero or one HealthInstitution that matches the filter.
     * @param {HealthInstitutionFindUniqueArgs} args - Arguments to find a HealthInstitution
     * @example
     * // Get one HealthInstitution
     * const healthInstitution = await prisma.healthInstitution.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HealthInstitutionFindUniqueArgs>(args: SelectSubset<T, HealthInstitutionFindUniqueArgs<ExtArgs>>): Prisma__HealthInstitutionClient<$Result.GetResult<Prisma.$HealthInstitutionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one HealthInstitution that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {HealthInstitutionFindUniqueOrThrowArgs} args - Arguments to find a HealthInstitution
     * @example
     * // Get one HealthInstitution
     * const healthInstitution = await prisma.healthInstitution.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HealthInstitutionFindUniqueOrThrowArgs>(args: SelectSubset<T, HealthInstitutionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HealthInstitutionClient<$Result.GetResult<Prisma.$HealthInstitutionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HealthInstitution that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HealthInstitutionFindFirstArgs} args - Arguments to find a HealthInstitution
     * @example
     * // Get one HealthInstitution
     * const healthInstitution = await prisma.healthInstitution.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HealthInstitutionFindFirstArgs>(args?: SelectSubset<T, HealthInstitutionFindFirstArgs<ExtArgs>>): Prisma__HealthInstitutionClient<$Result.GetResult<Prisma.$HealthInstitutionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HealthInstitution that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HealthInstitutionFindFirstOrThrowArgs} args - Arguments to find a HealthInstitution
     * @example
     * // Get one HealthInstitution
     * const healthInstitution = await prisma.healthInstitution.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HealthInstitutionFindFirstOrThrowArgs>(args?: SelectSubset<T, HealthInstitutionFindFirstOrThrowArgs<ExtArgs>>): Prisma__HealthInstitutionClient<$Result.GetResult<Prisma.$HealthInstitutionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more HealthInstitutions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HealthInstitutionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all HealthInstitutions
     * const healthInstitutions = await prisma.healthInstitution.findMany()
     * 
     * // Get first 10 HealthInstitutions
     * const healthInstitutions = await prisma.healthInstitution.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const healthInstitutionWithIdOnly = await prisma.healthInstitution.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends HealthInstitutionFindManyArgs>(args?: SelectSubset<T, HealthInstitutionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HealthInstitutionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a HealthInstitution.
     * @param {HealthInstitutionCreateArgs} args - Arguments to create a HealthInstitution.
     * @example
     * // Create one HealthInstitution
     * const HealthInstitution = await prisma.healthInstitution.create({
     *   data: {
     *     // ... data to create a HealthInstitution
     *   }
     * })
     * 
     */
    create<T extends HealthInstitutionCreateArgs>(args: SelectSubset<T, HealthInstitutionCreateArgs<ExtArgs>>): Prisma__HealthInstitutionClient<$Result.GetResult<Prisma.$HealthInstitutionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many HealthInstitutions.
     * @param {HealthInstitutionCreateManyArgs} args - Arguments to create many HealthInstitutions.
     * @example
     * // Create many HealthInstitutions
     * const healthInstitution = await prisma.healthInstitution.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HealthInstitutionCreateManyArgs>(args?: SelectSubset<T, HealthInstitutionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many HealthInstitutions and returns the data saved in the database.
     * @param {HealthInstitutionCreateManyAndReturnArgs} args - Arguments to create many HealthInstitutions.
     * @example
     * // Create many HealthInstitutions
     * const healthInstitution = await prisma.healthInstitution.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many HealthInstitutions and only return the `id`
     * const healthInstitutionWithIdOnly = await prisma.healthInstitution.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends HealthInstitutionCreateManyAndReturnArgs>(args?: SelectSubset<T, HealthInstitutionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HealthInstitutionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a HealthInstitution.
     * @param {HealthInstitutionDeleteArgs} args - Arguments to delete one HealthInstitution.
     * @example
     * // Delete one HealthInstitution
     * const HealthInstitution = await prisma.healthInstitution.delete({
     *   where: {
     *     // ... filter to delete one HealthInstitution
     *   }
     * })
     * 
     */
    delete<T extends HealthInstitutionDeleteArgs>(args: SelectSubset<T, HealthInstitutionDeleteArgs<ExtArgs>>): Prisma__HealthInstitutionClient<$Result.GetResult<Prisma.$HealthInstitutionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one HealthInstitution.
     * @param {HealthInstitutionUpdateArgs} args - Arguments to update one HealthInstitution.
     * @example
     * // Update one HealthInstitution
     * const healthInstitution = await prisma.healthInstitution.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HealthInstitutionUpdateArgs>(args: SelectSubset<T, HealthInstitutionUpdateArgs<ExtArgs>>): Prisma__HealthInstitutionClient<$Result.GetResult<Prisma.$HealthInstitutionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more HealthInstitutions.
     * @param {HealthInstitutionDeleteManyArgs} args - Arguments to filter HealthInstitutions to delete.
     * @example
     * // Delete a few HealthInstitutions
     * const { count } = await prisma.healthInstitution.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HealthInstitutionDeleteManyArgs>(args?: SelectSubset<T, HealthInstitutionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HealthInstitutions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HealthInstitutionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many HealthInstitutions
     * const healthInstitution = await prisma.healthInstitution.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HealthInstitutionUpdateManyArgs>(args: SelectSubset<T, HealthInstitutionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HealthInstitutions and returns the data updated in the database.
     * @param {HealthInstitutionUpdateManyAndReturnArgs} args - Arguments to update many HealthInstitutions.
     * @example
     * // Update many HealthInstitutions
     * const healthInstitution = await prisma.healthInstitution.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more HealthInstitutions and only return the `id`
     * const healthInstitutionWithIdOnly = await prisma.healthInstitution.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends HealthInstitutionUpdateManyAndReturnArgs>(args: SelectSubset<T, HealthInstitutionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HealthInstitutionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one HealthInstitution.
     * @param {HealthInstitutionUpsertArgs} args - Arguments to update or create a HealthInstitution.
     * @example
     * // Update or create a HealthInstitution
     * const healthInstitution = await prisma.healthInstitution.upsert({
     *   create: {
     *     // ... data to create a HealthInstitution
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the HealthInstitution we want to update
     *   }
     * })
     */
    upsert<T extends HealthInstitutionUpsertArgs>(args: SelectSubset<T, HealthInstitutionUpsertArgs<ExtArgs>>): Prisma__HealthInstitutionClient<$Result.GetResult<Prisma.$HealthInstitutionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of HealthInstitutions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HealthInstitutionCountArgs} args - Arguments to filter HealthInstitutions to count.
     * @example
     * // Count the number of HealthInstitutions
     * const count = await prisma.healthInstitution.count({
     *   where: {
     *     // ... the filter for the HealthInstitutions we want to count
     *   }
     * })
    **/
    count<T extends HealthInstitutionCountArgs>(
      args?: Subset<T, HealthInstitutionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HealthInstitutionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a HealthInstitution.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HealthInstitutionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HealthInstitutionAggregateArgs>(args: Subset<T, HealthInstitutionAggregateArgs>): Prisma.PrismaPromise<GetHealthInstitutionAggregateType<T>>

    /**
     * Group by HealthInstitution.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HealthInstitutionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HealthInstitutionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HealthInstitutionGroupByArgs['orderBy'] }
        : { orderBy?: HealthInstitutionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HealthInstitutionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHealthInstitutionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the HealthInstitution model
   */
  readonly fields: HealthInstitutionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for HealthInstitution.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HealthInstitutionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    people<T extends HealthInstitution$peopleArgs<ExtArgs> = {}>(args?: Subset<T, HealthInstitution$peopleArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PeoplePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the HealthInstitution model
   */
  interface HealthInstitutionFieldRefs {
    readonly id: FieldRef<"HealthInstitution", 'Int'>
    readonly name: FieldRef<"HealthInstitution", 'String'>
    readonly createdAt: FieldRef<"HealthInstitution", 'DateTime'>
    readonly updatedAt: FieldRef<"HealthInstitution", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * HealthInstitution findUnique
   */
  export type HealthInstitutionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthInstitution
     */
    select?: HealthInstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HealthInstitution
     */
    omit?: HealthInstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthInstitutionInclude<ExtArgs> | null
    /**
     * Filter, which HealthInstitution to fetch.
     */
    where: HealthInstitutionWhereUniqueInput
  }

  /**
   * HealthInstitution findUniqueOrThrow
   */
  export type HealthInstitutionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthInstitution
     */
    select?: HealthInstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HealthInstitution
     */
    omit?: HealthInstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthInstitutionInclude<ExtArgs> | null
    /**
     * Filter, which HealthInstitution to fetch.
     */
    where: HealthInstitutionWhereUniqueInput
  }

  /**
   * HealthInstitution findFirst
   */
  export type HealthInstitutionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthInstitution
     */
    select?: HealthInstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HealthInstitution
     */
    omit?: HealthInstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthInstitutionInclude<ExtArgs> | null
    /**
     * Filter, which HealthInstitution to fetch.
     */
    where?: HealthInstitutionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HealthInstitutions to fetch.
     */
    orderBy?: HealthInstitutionOrderByWithRelationInput | HealthInstitutionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HealthInstitutions.
     */
    cursor?: HealthInstitutionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HealthInstitutions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HealthInstitutions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HealthInstitutions.
     */
    distinct?: HealthInstitutionScalarFieldEnum | HealthInstitutionScalarFieldEnum[]
  }

  /**
   * HealthInstitution findFirstOrThrow
   */
  export type HealthInstitutionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthInstitution
     */
    select?: HealthInstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HealthInstitution
     */
    omit?: HealthInstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthInstitutionInclude<ExtArgs> | null
    /**
     * Filter, which HealthInstitution to fetch.
     */
    where?: HealthInstitutionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HealthInstitutions to fetch.
     */
    orderBy?: HealthInstitutionOrderByWithRelationInput | HealthInstitutionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HealthInstitutions.
     */
    cursor?: HealthInstitutionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HealthInstitutions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HealthInstitutions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HealthInstitutions.
     */
    distinct?: HealthInstitutionScalarFieldEnum | HealthInstitutionScalarFieldEnum[]
  }

  /**
   * HealthInstitution findMany
   */
  export type HealthInstitutionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthInstitution
     */
    select?: HealthInstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HealthInstitution
     */
    omit?: HealthInstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthInstitutionInclude<ExtArgs> | null
    /**
     * Filter, which HealthInstitutions to fetch.
     */
    where?: HealthInstitutionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HealthInstitutions to fetch.
     */
    orderBy?: HealthInstitutionOrderByWithRelationInput | HealthInstitutionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing HealthInstitutions.
     */
    cursor?: HealthInstitutionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HealthInstitutions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HealthInstitutions.
     */
    skip?: number
    distinct?: HealthInstitutionScalarFieldEnum | HealthInstitutionScalarFieldEnum[]
  }

  /**
   * HealthInstitution create
   */
  export type HealthInstitutionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthInstitution
     */
    select?: HealthInstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HealthInstitution
     */
    omit?: HealthInstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthInstitutionInclude<ExtArgs> | null
    /**
     * The data needed to create a HealthInstitution.
     */
    data: XOR<HealthInstitutionCreateInput, HealthInstitutionUncheckedCreateInput>
  }

  /**
   * HealthInstitution createMany
   */
  export type HealthInstitutionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many HealthInstitutions.
     */
    data: HealthInstitutionCreateManyInput | HealthInstitutionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * HealthInstitution createManyAndReturn
   */
  export type HealthInstitutionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthInstitution
     */
    select?: HealthInstitutionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the HealthInstitution
     */
    omit?: HealthInstitutionOmit<ExtArgs> | null
    /**
     * The data used to create many HealthInstitutions.
     */
    data: HealthInstitutionCreateManyInput | HealthInstitutionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * HealthInstitution update
   */
  export type HealthInstitutionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthInstitution
     */
    select?: HealthInstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HealthInstitution
     */
    omit?: HealthInstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthInstitutionInclude<ExtArgs> | null
    /**
     * The data needed to update a HealthInstitution.
     */
    data: XOR<HealthInstitutionUpdateInput, HealthInstitutionUncheckedUpdateInput>
    /**
     * Choose, which HealthInstitution to update.
     */
    where: HealthInstitutionWhereUniqueInput
  }

  /**
   * HealthInstitution updateMany
   */
  export type HealthInstitutionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update HealthInstitutions.
     */
    data: XOR<HealthInstitutionUpdateManyMutationInput, HealthInstitutionUncheckedUpdateManyInput>
    /**
     * Filter which HealthInstitutions to update
     */
    where?: HealthInstitutionWhereInput
    /**
     * Limit how many HealthInstitutions to update.
     */
    limit?: number
  }

  /**
   * HealthInstitution updateManyAndReturn
   */
  export type HealthInstitutionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthInstitution
     */
    select?: HealthInstitutionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the HealthInstitution
     */
    omit?: HealthInstitutionOmit<ExtArgs> | null
    /**
     * The data used to update HealthInstitutions.
     */
    data: XOR<HealthInstitutionUpdateManyMutationInput, HealthInstitutionUncheckedUpdateManyInput>
    /**
     * Filter which HealthInstitutions to update
     */
    where?: HealthInstitutionWhereInput
    /**
     * Limit how many HealthInstitutions to update.
     */
    limit?: number
  }

  /**
   * HealthInstitution upsert
   */
  export type HealthInstitutionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthInstitution
     */
    select?: HealthInstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HealthInstitution
     */
    omit?: HealthInstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthInstitutionInclude<ExtArgs> | null
    /**
     * The filter to search for the HealthInstitution to update in case it exists.
     */
    where: HealthInstitutionWhereUniqueInput
    /**
     * In case the HealthInstitution found by the `where` argument doesn't exist, create a new HealthInstitution with this data.
     */
    create: XOR<HealthInstitutionCreateInput, HealthInstitutionUncheckedCreateInput>
    /**
     * In case the HealthInstitution was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HealthInstitutionUpdateInput, HealthInstitutionUncheckedUpdateInput>
  }

  /**
   * HealthInstitution delete
   */
  export type HealthInstitutionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthInstitution
     */
    select?: HealthInstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HealthInstitution
     */
    omit?: HealthInstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthInstitutionInclude<ExtArgs> | null
    /**
     * Filter which HealthInstitution to delete.
     */
    where: HealthInstitutionWhereUniqueInput
  }

  /**
   * HealthInstitution deleteMany
   */
  export type HealthInstitutionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HealthInstitutions to delete
     */
    where?: HealthInstitutionWhereInput
    /**
     * Limit how many HealthInstitutions to delete.
     */
    limit?: number
  }

  /**
   * HealthInstitution.people
   */
  export type HealthInstitution$peopleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the People
     */
    select?: PeopleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the People
     */
    omit?: PeopleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeopleInclude<ExtArgs> | null
    where?: PeopleWhereInput
    orderBy?: PeopleOrderByWithRelationInput | PeopleOrderByWithRelationInput[]
    cursor?: PeopleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PeopleScalarFieldEnum | PeopleScalarFieldEnum[]
  }

  /**
   * HealthInstitution without action
   */
  export type HealthInstitutionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthInstitution
     */
    select?: HealthInstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HealthInstitution
     */
    omit?: HealthInstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthInstitutionInclude<ExtArgs> | null
  }


  /**
   * Model Holidays
   */

  export type AggregateHolidays = {
    _count: HolidaysCountAggregateOutputType | null
    _avg: HolidaysAvgAggregateOutputType | null
    _sum: HolidaysSumAggregateOutputType | null
    _min: HolidaysMinAggregateOutputType | null
    _max: HolidaysMaxAggregateOutputType | null
  }

  export type HolidaysAvgAggregateOutputType = {
    id: number | null
  }

  export type HolidaysSumAggregateOutputType = {
    id: number | null
  }

  export type HolidaysMinAggregateOutputType = {
    id: number | null
    date: Date | null
    name: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type HolidaysMaxAggregateOutputType = {
    id: number | null
    date: Date | null
    name: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type HolidaysCountAggregateOutputType = {
    id: number
    date: number
    name: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type HolidaysAvgAggregateInputType = {
    id?: true
  }

  export type HolidaysSumAggregateInputType = {
    id?: true
  }

  export type HolidaysMinAggregateInputType = {
    id?: true
    date?: true
    name?: true
    createdAt?: true
    updatedAt?: true
  }

  export type HolidaysMaxAggregateInputType = {
    id?: true
    date?: true
    name?: true
    createdAt?: true
    updatedAt?: true
  }

  export type HolidaysCountAggregateInputType = {
    id?: true
    date?: true
    name?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type HolidaysAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Holidays to aggregate.
     */
    where?: HolidaysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Holidays to fetch.
     */
    orderBy?: HolidaysOrderByWithRelationInput | HolidaysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HolidaysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Holidays from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Holidays.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Holidays
    **/
    _count?: true | HolidaysCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HolidaysAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HolidaysSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HolidaysMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HolidaysMaxAggregateInputType
  }

  export type GetHolidaysAggregateType<T extends HolidaysAggregateArgs> = {
        [P in keyof T & keyof AggregateHolidays]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHolidays[P]>
      : GetScalarType<T[P], AggregateHolidays[P]>
  }




  export type HolidaysGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HolidaysWhereInput
    orderBy?: HolidaysOrderByWithAggregationInput | HolidaysOrderByWithAggregationInput[]
    by: HolidaysScalarFieldEnum[] | HolidaysScalarFieldEnum
    having?: HolidaysScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HolidaysCountAggregateInputType | true
    _avg?: HolidaysAvgAggregateInputType
    _sum?: HolidaysSumAggregateInputType
    _min?: HolidaysMinAggregateInputType
    _max?: HolidaysMaxAggregateInputType
  }

  export type HolidaysGroupByOutputType = {
    id: number
    date: Date
    name: string
    createdAt: Date | null
    updatedAt: Date | null
    _count: HolidaysCountAggregateOutputType | null
    _avg: HolidaysAvgAggregateOutputType | null
    _sum: HolidaysSumAggregateOutputType | null
    _min: HolidaysMinAggregateOutputType | null
    _max: HolidaysMaxAggregateOutputType | null
  }

  type GetHolidaysGroupByPayload<T extends HolidaysGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HolidaysGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HolidaysGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HolidaysGroupByOutputType[P]>
            : GetScalarType<T[P], HolidaysGroupByOutputType[P]>
        }
      >
    >


  export type HolidaysSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    date?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["holidays"]>

  export type HolidaysSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    date?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["holidays"]>

  export type HolidaysSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    date?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["holidays"]>

  export type HolidaysSelectScalar = {
    id?: boolean
    date?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type HolidaysOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "date" | "name" | "createdAt" | "updatedAt", ExtArgs["result"]["holidays"]>

  export type $HolidaysPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Holidays"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      date: Date
      name: string
      createdAt: Date | null
      updatedAt: Date | null
    }, ExtArgs["result"]["holidays"]>
    composites: {}
  }

  type HolidaysGetPayload<S extends boolean | null | undefined | HolidaysDefaultArgs> = $Result.GetResult<Prisma.$HolidaysPayload, S>

  type HolidaysCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<HolidaysFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: HolidaysCountAggregateInputType | true
    }

  export interface HolidaysDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Holidays'], meta: { name: 'Holidays' } }
    /**
     * Find zero or one Holidays that matches the filter.
     * @param {HolidaysFindUniqueArgs} args - Arguments to find a Holidays
     * @example
     * // Get one Holidays
     * const holidays = await prisma.holidays.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HolidaysFindUniqueArgs>(args: SelectSubset<T, HolidaysFindUniqueArgs<ExtArgs>>): Prisma__HolidaysClient<$Result.GetResult<Prisma.$HolidaysPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Holidays that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {HolidaysFindUniqueOrThrowArgs} args - Arguments to find a Holidays
     * @example
     * // Get one Holidays
     * const holidays = await prisma.holidays.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HolidaysFindUniqueOrThrowArgs>(args: SelectSubset<T, HolidaysFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HolidaysClient<$Result.GetResult<Prisma.$HolidaysPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Holidays that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HolidaysFindFirstArgs} args - Arguments to find a Holidays
     * @example
     * // Get one Holidays
     * const holidays = await prisma.holidays.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HolidaysFindFirstArgs>(args?: SelectSubset<T, HolidaysFindFirstArgs<ExtArgs>>): Prisma__HolidaysClient<$Result.GetResult<Prisma.$HolidaysPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Holidays that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HolidaysFindFirstOrThrowArgs} args - Arguments to find a Holidays
     * @example
     * // Get one Holidays
     * const holidays = await prisma.holidays.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HolidaysFindFirstOrThrowArgs>(args?: SelectSubset<T, HolidaysFindFirstOrThrowArgs<ExtArgs>>): Prisma__HolidaysClient<$Result.GetResult<Prisma.$HolidaysPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Holidays that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HolidaysFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Holidays
     * const holidays = await prisma.holidays.findMany()
     * 
     * // Get first 10 Holidays
     * const holidays = await prisma.holidays.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const holidaysWithIdOnly = await prisma.holidays.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends HolidaysFindManyArgs>(args?: SelectSubset<T, HolidaysFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HolidaysPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Holidays.
     * @param {HolidaysCreateArgs} args - Arguments to create a Holidays.
     * @example
     * // Create one Holidays
     * const Holidays = await prisma.holidays.create({
     *   data: {
     *     // ... data to create a Holidays
     *   }
     * })
     * 
     */
    create<T extends HolidaysCreateArgs>(args: SelectSubset<T, HolidaysCreateArgs<ExtArgs>>): Prisma__HolidaysClient<$Result.GetResult<Prisma.$HolidaysPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Holidays.
     * @param {HolidaysCreateManyArgs} args - Arguments to create many Holidays.
     * @example
     * // Create many Holidays
     * const holidays = await prisma.holidays.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HolidaysCreateManyArgs>(args?: SelectSubset<T, HolidaysCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Holidays and returns the data saved in the database.
     * @param {HolidaysCreateManyAndReturnArgs} args - Arguments to create many Holidays.
     * @example
     * // Create many Holidays
     * const holidays = await prisma.holidays.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Holidays and only return the `id`
     * const holidaysWithIdOnly = await prisma.holidays.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends HolidaysCreateManyAndReturnArgs>(args?: SelectSubset<T, HolidaysCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HolidaysPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Holidays.
     * @param {HolidaysDeleteArgs} args - Arguments to delete one Holidays.
     * @example
     * // Delete one Holidays
     * const Holidays = await prisma.holidays.delete({
     *   where: {
     *     // ... filter to delete one Holidays
     *   }
     * })
     * 
     */
    delete<T extends HolidaysDeleteArgs>(args: SelectSubset<T, HolidaysDeleteArgs<ExtArgs>>): Prisma__HolidaysClient<$Result.GetResult<Prisma.$HolidaysPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Holidays.
     * @param {HolidaysUpdateArgs} args - Arguments to update one Holidays.
     * @example
     * // Update one Holidays
     * const holidays = await prisma.holidays.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HolidaysUpdateArgs>(args: SelectSubset<T, HolidaysUpdateArgs<ExtArgs>>): Prisma__HolidaysClient<$Result.GetResult<Prisma.$HolidaysPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Holidays.
     * @param {HolidaysDeleteManyArgs} args - Arguments to filter Holidays to delete.
     * @example
     * // Delete a few Holidays
     * const { count } = await prisma.holidays.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HolidaysDeleteManyArgs>(args?: SelectSubset<T, HolidaysDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Holidays.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HolidaysUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Holidays
     * const holidays = await prisma.holidays.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HolidaysUpdateManyArgs>(args: SelectSubset<T, HolidaysUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Holidays and returns the data updated in the database.
     * @param {HolidaysUpdateManyAndReturnArgs} args - Arguments to update many Holidays.
     * @example
     * // Update many Holidays
     * const holidays = await prisma.holidays.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Holidays and only return the `id`
     * const holidaysWithIdOnly = await prisma.holidays.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends HolidaysUpdateManyAndReturnArgs>(args: SelectSubset<T, HolidaysUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HolidaysPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Holidays.
     * @param {HolidaysUpsertArgs} args - Arguments to update or create a Holidays.
     * @example
     * // Update or create a Holidays
     * const holidays = await prisma.holidays.upsert({
     *   create: {
     *     // ... data to create a Holidays
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Holidays we want to update
     *   }
     * })
     */
    upsert<T extends HolidaysUpsertArgs>(args: SelectSubset<T, HolidaysUpsertArgs<ExtArgs>>): Prisma__HolidaysClient<$Result.GetResult<Prisma.$HolidaysPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Holidays.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HolidaysCountArgs} args - Arguments to filter Holidays to count.
     * @example
     * // Count the number of Holidays
     * const count = await prisma.holidays.count({
     *   where: {
     *     // ... the filter for the Holidays we want to count
     *   }
     * })
    **/
    count<T extends HolidaysCountArgs>(
      args?: Subset<T, HolidaysCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HolidaysCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Holidays.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HolidaysAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HolidaysAggregateArgs>(args: Subset<T, HolidaysAggregateArgs>): Prisma.PrismaPromise<GetHolidaysAggregateType<T>>

    /**
     * Group by Holidays.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HolidaysGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HolidaysGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HolidaysGroupByArgs['orderBy'] }
        : { orderBy?: HolidaysGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HolidaysGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHolidaysGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Holidays model
   */
  readonly fields: HolidaysFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Holidays.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HolidaysClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Holidays model
   */
  interface HolidaysFieldRefs {
    readonly id: FieldRef<"Holidays", 'Int'>
    readonly date: FieldRef<"Holidays", 'DateTime'>
    readonly name: FieldRef<"Holidays", 'String'>
    readonly createdAt: FieldRef<"Holidays", 'DateTime'>
    readonly updatedAt: FieldRef<"Holidays", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Holidays findUnique
   */
  export type HolidaysFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Holidays
     */
    select?: HolidaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Holidays
     */
    omit?: HolidaysOmit<ExtArgs> | null
    /**
     * Filter, which Holidays to fetch.
     */
    where: HolidaysWhereUniqueInput
  }

  /**
   * Holidays findUniqueOrThrow
   */
  export type HolidaysFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Holidays
     */
    select?: HolidaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Holidays
     */
    omit?: HolidaysOmit<ExtArgs> | null
    /**
     * Filter, which Holidays to fetch.
     */
    where: HolidaysWhereUniqueInput
  }

  /**
   * Holidays findFirst
   */
  export type HolidaysFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Holidays
     */
    select?: HolidaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Holidays
     */
    omit?: HolidaysOmit<ExtArgs> | null
    /**
     * Filter, which Holidays to fetch.
     */
    where?: HolidaysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Holidays to fetch.
     */
    orderBy?: HolidaysOrderByWithRelationInput | HolidaysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Holidays.
     */
    cursor?: HolidaysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Holidays from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Holidays.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Holidays.
     */
    distinct?: HolidaysScalarFieldEnum | HolidaysScalarFieldEnum[]
  }

  /**
   * Holidays findFirstOrThrow
   */
  export type HolidaysFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Holidays
     */
    select?: HolidaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Holidays
     */
    omit?: HolidaysOmit<ExtArgs> | null
    /**
     * Filter, which Holidays to fetch.
     */
    where?: HolidaysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Holidays to fetch.
     */
    orderBy?: HolidaysOrderByWithRelationInput | HolidaysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Holidays.
     */
    cursor?: HolidaysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Holidays from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Holidays.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Holidays.
     */
    distinct?: HolidaysScalarFieldEnum | HolidaysScalarFieldEnum[]
  }

  /**
   * Holidays findMany
   */
  export type HolidaysFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Holidays
     */
    select?: HolidaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Holidays
     */
    omit?: HolidaysOmit<ExtArgs> | null
    /**
     * Filter, which Holidays to fetch.
     */
    where?: HolidaysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Holidays to fetch.
     */
    orderBy?: HolidaysOrderByWithRelationInput | HolidaysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Holidays.
     */
    cursor?: HolidaysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Holidays from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Holidays.
     */
    skip?: number
    distinct?: HolidaysScalarFieldEnum | HolidaysScalarFieldEnum[]
  }

  /**
   * Holidays create
   */
  export type HolidaysCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Holidays
     */
    select?: HolidaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Holidays
     */
    omit?: HolidaysOmit<ExtArgs> | null
    /**
     * The data needed to create a Holidays.
     */
    data: XOR<HolidaysCreateInput, HolidaysUncheckedCreateInput>
  }

  /**
   * Holidays createMany
   */
  export type HolidaysCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Holidays.
     */
    data: HolidaysCreateManyInput | HolidaysCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Holidays createManyAndReturn
   */
  export type HolidaysCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Holidays
     */
    select?: HolidaysSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Holidays
     */
    omit?: HolidaysOmit<ExtArgs> | null
    /**
     * The data used to create many Holidays.
     */
    data: HolidaysCreateManyInput | HolidaysCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Holidays update
   */
  export type HolidaysUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Holidays
     */
    select?: HolidaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Holidays
     */
    omit?: HolidaysOmit<ExtArgs> | null
    /**
     * The data needed to update a Holidays.
     */
    data: XOR<HolidaysUpdateInput, HolidaysUncheckedUpdateInput>
    /**
     * Choose, which Holidays to update.
     */
    where: HolidaysWhereUniqueInput
  }

  /**
   * Holidays updateMany
   */
  export type HolidaysUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Holidays.
     */
    data: XOR<HolidaysUpdateManyMutationInput, HolidaysUncheckedUpdateManyInput>
    /**
     * Filter which Holidays to update
     */
    where?: HolidaysWhereInput
    /**
     * Limit how many Holidays to update.
     */
    limit?: number
  }

  /**
   * Holidays updateManyAndReturn
   */
  export type HolidaysUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Holidays
     */
    select?: HolidaysSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Holidays
     */
    omit?: HolidaysOmit<ExtArgs> | null
    /**
     * The data used to update Holidays.
     */
    data: XOR<HolidaysUpdateManyMutationInput, HolidaysUncheckedUpdateManyInput>
    /**
     * Filter which Holidays to update
     */
    where?: HolidaysWhereInput
    /**
     * Limit how many Holidays to update.
     */
    limit?: number
  }

  /**
   * Holidays upsert
   */
  export type HolidaysUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Holidays
     */
    select?: HolidaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Holidays
     */
    omit?: HolidaysOmit<ExtArgs> | null
    /**
     * The filter to search for the Holidays to update in case it exists.
     */
    where: HolidaysWhereUniqueInput
    /**
     * In case the Holidays found by the `where` argument doesn't exist, create a new Holidays with this data.
     */
    create: XOR<HolidaysCreateInput, HolidaysUncheckedCreateInput>
    /**
     * In case the Holidays was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HolidaysUpdateInput, HolidaysUncheckedUpdateInput>
  }

  /**
   * Holidays delete
   */
  export type HolidaysDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Holidays
     */
    select?: HolidaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Holidays
     */
    omit?: HolidaysOmit<ExtArgs> | null
    /**
     * Filter which Holidays to delete.
     */
    where: HolidaysWhereUniqueInput
  }

  /**
   * Holidays deleteMany
   */
  export type HolidaysDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Holidays to delete
     */
    where?: HolidaysWhereInput
    /**
     * Limit how many Holidays to delete.
     */
    limit?: number
  }

  /**
   * Holidays without action
   */
  export type HolidaysDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Holidays
     */
    select?: HolidaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Holidays
     */
    omit?: HolidaysOmit<ExtArgs> | null
  }


  /**
   * Model JobTitle
   */

  export type AggregateJobTitle = {
    _count: JobTitleCountAggregateOutputType | null
    _avg: JobTitleAvgAggregateOutputType | null
    _sum: JobTitleSumAggregateOutputType | null
    _min: JobTitleMinAggregateOutputType | null
    _max: JobTitleMaxAggregateOutputType | null
  }

  export type JobTitleAvgAggregateOutputType = {
    id: number | null
  }

  export type JobTitleSumAggregateOutputType = {
    id: number | null
  }

  export type JobTitleMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type JobTitleMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type JobTitleCountAggregateOutputType = {
    id: number
    name: number
    description: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type JobTitleAvgAggregateInputType = {
    id?: true
  }

  export type JobTitleSumAggregateInputType = {
    id?: true
  }

  export type JobTitleMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type JobTitleMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type JobTitleCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type JobTitleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JobTitle to aggregate.
     */
    where?: JobTitleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobTitles to fetch.
     */
    orderBy?: JobTitleOrderByWithRelationInput | JobTitleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: JobTitleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobTitles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobTitles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned JobTitles
    **/
    _count?: true | JobTitleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: JobTitleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: JobTitleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: JobTitleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: JobTitleMaxAggregateInputType
  }

  export type GetJobTitleAggregateType<T extends JobTitleAggregateArgs> = {
        [P in keyof T & keyof AggregateJobTitle]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateJobTitle[P]>
      : GetScalarType<T[P], AggregateJobTitle[P]>
  }




  export type JobTitleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobTitleWhereInput
    orderBy?: JobTitleOrderByWithAggregationInput | JobTitleOrderByWithAggregationInput[]
    by: JobTitleScalarFieldEnum[] | JobTitleScalarFieldEnum
    having?: JobTitleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: JobTitleCountAggregateInputType | true
    _avg?: JobTitleAvgAggregateInputType
    _sum?: JobTitleSumAggregateInputType
    _min?: JobTitleMinAggregateInputType
    _max?: JobTitleMaxAggregateInputType
  }

  export type JobTitleGroupByOutputType = {
    id: number
    name: string
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    _count: JobTitleCountAggregateOutputType | null
    _avg: JobTitleAvgAggregateOutputType | null
    _sum: JobTitleSumAggregateOutputType | null
    _min: JobTitleMinAggregateOutputType | null
    _max: JobTitleMaxAggregateOutputType | null
  }

  type GetJobTitleGroupByPayload<T extends JobTitleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<JobTitleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof JobTitleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], JobTitleGroupByOutputType[P]>
            : GetScalarType<T[P], JobTitleGroupByOutputType[P]>
        }
      >
    >


  export type JobTitleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    people?: boolean | JobTitle$peopleArgs<ExtArgs>
    _count?: boolean | JobTitleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jobTitle"]>

  export type JobTitleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["jobTitle"]>

  export type JobTitleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["jobTitle"]>

  export type JobTitleSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type JobTitleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "createdAt" | "updatedAt", ExtArgs["result"]["jobTitle"]>
  export type JobTitleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    people?: boolean | JobTitle$peopleArgs<ExtArgs>
    _count?: boolean | JobTitleCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type JobTitleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type JobTitleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $JobTitlePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "JobTitle"
    objects: {
      people: Prisma.$PeoplePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string | null
      createdAt: Date | null
      updatedAt: Date | null
    }, ExtArgs["result"]["jobTitle"]>
    composites: {}
  }

  type JobTitleGetPayload<S extends boolean | null | undefined | JobTitleDefaultArgs> = $Result.GetResult<Prisma.$JobTitlePayload, S>

  type JobTitleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<JobTitleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: JobTitleCountAggregateInputType | true
    }

  export interface JobTitleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['JobTitle'], meta: { name: 'JobTitle' } }
    /**
     * Find zero or one JobTitle that matches the filter.
     * @param {JobTitleFindUniqueArgs} args - Arguments to find a JobTitle
     * @example
     * // Get one JobTitle
     * const jobTitle = await prisma.jobTitle.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends JobTitleFindUniqueArgs>(args: SelectSubset<T, JobTitleFindUniqueArgs<ExtArgs>>): Prisma__JobTitleClient<$Result.GetResult<Prisma.$JobTitlePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one JobTitle that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {JobTitleFindUniqueOrThrowArgs} args - Arguments to find a JobTitle
     * @example
     * // Get one JobTitle
     * const jobTitle = await prisma.jobTitle.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends JobTitleFindUniqueOrThrowArgs>(args: SelectSubset<T, JobTitleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__JobTitleClient<$Result.GetResult<Prisma.$JobTitlePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first JobTitle that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobTitleFindFirstArgs} args - Arguments to find a JobTitle
     * @example
     * // Get one JobTitle
     * const jobTitle = await prisma.jobTitle.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends JobTitleFindFirstArgs>(args?: SelectSubset<T, JobTitleFindFirstArgs<ExtArgs>>): Prisma__JobTitleClient<$Result.GetResult<Prisma.$JobTitlePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first JobTitle that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobTitleFindFirstOrThrowArgs} args - Arguments to find a JobTitle
     * @example
     * // Get one JobTitle
     * const jobTitle = await prisma.jobTitle.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends JobTitleFindFirstOrThrowArgs>(args?: SelectSubset<T, JobTitleFindFirstOrThrowArgs<ExtArgs>>): Prisma__JobTitleClient<$Result.GetResult<Prisma.$JobTitlePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more JobTitles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobTitleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all JobTitles
     * const jobTitles = await prisma.jobTitle.findMany()
     * 
     * // Get first 10 JobTitles
     * const jobTitles = await prisma.jobTitle.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const jobTitleWithIdOnly = await prisma.jobTitle.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends JobTitleFindManyArgs>(args?: SelectSubset<T, JobTitleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobTitlePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a JobTitle.
     * @param {JobTitleCreateArgs} args - Arguments to create a JobTitle.
     * @example
     * // Create one JobTitle
     * const JobTitle = await prisma.jobTitle.create({
     *   data: {
     *     // ... data to create a JobTitle
     *   }
     * })
     * 
     */
    create<T extends JobTitleCreateArgs>(args: SelectSubset<T, JobTitleCreateArgs<ExtArgs>>): Prisma__JobTitleClient<$Result.GetResult<Prisma.$JobTitlePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many JobTitles.
     * @param {JobTitleCreateManyArgs} args - Arguments to create many JobTitles.
     * @example
     * // Create many JobTitles
     * const jobTitle = await prisma.jobTitle.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends JobTitleCreateManyArgs>(args?: SelectSubset<T, JobTitleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many JobTitles and returns the data saved in the database.
     * @param {JobTitleCreateManyAndReturnArgs} args - Arguments to create many JobTitles.
     * @example
     * // Create many JobTitles
     * const jobTitle = await prisma.jobTitle.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many JobTitles and only return the `id`
     * const jobTitleWithIdOnly = await prisma.jobTitle.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends JobTitleCreateManyAndReturnArgs>(args?: SelectSubset<T, JobTitleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobTitlePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a JobTitle.
     * @param {JobTitleDeleteArgs} args - Arguments to delete one JobTitle.
     * @example
     * // Delete one JobTitle
     * const JobTitle = await prisma.jobTitle.delete({
     *   where: {
     *     // ... filter to delete one JobTitle
     *   }
     * })
     * 
     */
    delete<T extends JobTitleDeleteArgs>(args: SelectSubset<T, JobTitleDeleteArgs<ExtArgs>>): Prisma__JobTitleClient<$Result.GetResult<Prisma.$JobTitlePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one JobTitle.
     * @param {JobTitleUpdateArgs} args - Arguments to update one JobTitle.
     * @example
     * // Update one JobTitle
     * const jobTitle = await prisma.jobTitle.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends JobTitleUpdateArgs>(args: SelectSubset<T, JobTitleUpdateArgs<ExtArgs>>): Prisma__JobTitleClient<$Result.GetResult<Prisma.$JobTitlePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more JobTitles.
     * @param {JobTitleDeleteManyArgs} args - Arguments to filter JobTitles to delete.
     * @example
     * // Delete a few JobTitles
     * const { count } = await prisma.jobTitle.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends JobTitleDeleteManyArgs>(args?: SelectSubset<T, JobTitleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more JobTitles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobTitleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many JobTitles
     * const jobTitle = await prisma.jobTitle.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends JobTitleUpdateManyArgs>(args: SelectSubset<T, JobTitleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more JobTitles and returns the data updated in the database.
     * @param {JobTitleUpdateManyAndReturnArgs} args - Arguments to update many JobTitles.
     * @example
     * // Update many JobTitles
     * const jobTitle = await prisma.jobTitle.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more JobTitles and only return the `id`
     * const jobTitleWithIdOnly = await prisma.jobTitle.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends JobTitleUpdateManyAndReturnArgs>(args: SelectSubset<T, JobTitleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobTitlePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one JobTitle.
     * @param {JobTitleUpsertArgs} args - Arguments to update or create a JobTitle.
     * @example
     * // Update or create a JobTitle
     * const jobTitle = await prisma.jobTitle.upsert({
     *   create: {
     *     // ... data to create a JobTitle
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the JobTitle we want to update
     *   }
     * })
     */
    upsert<T extends JobTitleUpsertArgs>(args: SelectSubset<T, JobTitleUpsertArgs<ExtArgs>>): Prisma__JobTitleClient<$Result.GetResult<Prisma.$JobTitlePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of JobTitles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobTitleCountArgs} args - Arguments to filter JobTitles to count.
     * @example
     * // Count the number of JobTitles
     * const count = await prisma.jobTitle.count({
     *   where: {
     *     // ... the filter for the JobTitles we want to count
     *   }
     * })
    **/
    count<T extends JobTitleCountArgs>(
      args?: Subset<T, JobTitleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], JobTitleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a JobTitle.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobTitleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends JobTitleAggregateArgs>(args: Subset<T, JobTitleAggregateArgs>): Prisma.PrismaPromise<GetJobTitleAggregateType<T>>

    /**
     * Group by JobTitle.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobTitleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends JobTitleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: JobTitleGroupByArgs['orderBy'] }
        : { orderBy?: JobTitleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, JobTitleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJobTitleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the JobTitle model
   */
  readonly fields: JobTitleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for JobTitle.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__JobTitleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    people<T extends JobTitle$peopleArgs<ExtArgs> = {}>(args?: Subset<T, JobTitle$peopleArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PeoplePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the JobTitle model
   */
  interface JobTitleFieldRefs {
    readonly id: FieldRef<"JobTitle", 'Int'>
    readonly name: FieldRef<"JobTitle", 'String'>
    readonly description: FieldRef<"JobTitle", 'String'>
    readonly createdAt: FieldRef<"JobTitle", 'DateTime'>
    readonly updatedAt: FieldRef<"JobTitle", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * JobTitle findUnique
   */
  export type JobTitleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobTitle
     */
    select?: JobTitleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobTitle
     */
    omit?: JobTitleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobTitleInclude<ExtArgs> | null
    /**
     * Filter, which JobTitle to fetch.
     */
    where: JobTitleWhereUniqueInput
  }

  /**
   * JobTitle findUniqueOrThrow
   */
  export type JobTitleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobTitle
     */
    select?: JobTitleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobTitle
     */
    omit?: JobTitleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobTitleInclude<ExtArgs> | null
    /**
     * Filter, which JobTitle to fetch.
     */
    where: JobTitleWhereUniqueInput
  }

  /**
   * JobTitle findFirst
   */
  export type JobTitleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobTitle
     */
    select?: JobTitleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobTitle
     */
    omit?: JobTitleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobTitleInclude<ExtArgs> | null
    /**
     * Filter, which JobTitle to fetch.
     */
    where?: JobTitleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobTitles to fetch.
     */
    orderBy?: JobTitleOrderByWithRelationInput | JobTitleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JobTitles.
     */
    cursor?: JobTitleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobTitles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobTitles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JobTitles.
     */
    distinct?: JobTitleScalarFieldEnum | JobTitleScalarFieldEnum[]
  }

  /**
   * JobTitle findFirstOrThrow
   */
  export type JobTitleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobTitle
     */
    select?: JobTitleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobTitle
     */
    omit?: JobTitleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobTitleInclude<ExtArgs> | null
    /**
     * Filter, which JobTitle to fetch.
     */
    where?: JobTitleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobTitles to fetch.
     */
    orderBy?: JobTitleOrderByWithRelationInput | JobTitleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JobTitles.
     */
    cursor?: JobTitleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobTitles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobTitles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JobTitles.
     */
    distinct?: JobTitleScalarFieldEnum | JobTitleScalarFieldEnum[]
  }

  /**
   * JobTitle findMany
   */
  export type JobTitleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobTitle
     */
    select?: JobTitleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobTitle
     */
    omit?: JobTitleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobTitleInclude<ExtArgs> | null
    /**
     * Filter, which JobTitles to fetch.
     */
    where?: JobTitleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobTitles to fetch.
     */
    orderBy?: JobTitleOrderByWithRelationInput | JobTitleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing JobTitles.
     */
    cursor?: JobTitleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobTitles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobTitles.
     */
    skip?: number
    distinct?: JobTitleScalarFieldEnum | JobTitleScalarFieldEnum[]
  }

  /**
   * JobTitle create
   */
  export type JobTitleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobTitle
     */
    select?: JobTitleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobTitle
     */
    omit?: JobTitleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobTitleInclude<ExtArgs> | null
    /**
     * The data needed to create a JobTitle.
     */
    data: XOR<JobTitleCreateInput, JobTitleUncheckedCreateInput>
  }

  /**
   * JobTitle createMany
   */
  export type JobTitleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many JobTitles.
     */
    data: JobTitleCreateManyInput | JobTitleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * JobTitle createManyAndReturn
   */
  export type JobTitleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobTitle
     */
    select?: JobTitleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the JobTitle
     */
    omit?: JobTitleOmit<ExtArgs> | null
    /**
     * The data used to create many JobTitles.
     */
    data: JobTitleCreateManyInput | JobTitleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * JobTitle update
   */
  export type JobTitleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobTitle
     */
    select?: JobTitleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobTitle
     */
    omit?: JobTitleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobTitleInclude<ExtArgs> | null
    /**
     * The data needed to update a JobTitle.
     */
    data: XOR<JobTitleUpdateInput, JobTitleUncheckedUpdateInput>
    /**
     * Choose, which JobTitle to update.
     */
    where: JobTitleWhereUniqueInput
  }

  /**
   * JobTitle updateMany
   */
  export type JobTitleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update JobTitles.
     */
    data: XOR<JobTitleUpdateManyMutationInput, JobTitleUncheckedUpdateManyInput>
    /**
     * Filter which JobTitles to update
     */
    where?: JobTitleWhereInput
    /**
     * Limit how many JobTitles to update.
     */
    limit?: number
  }

  /**
   * JobTitle updateManyAndReturn
   */
  export type JobTitleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobTitle
     */
    select?: JobTitleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the JobTitle
     */
    omit?: JobTitleOmit<ExtArgs> | null
    /**
     * The data used to update JobTitles.
     */
    data: XOR<JobTitleUpdateManyMutationInput, JobTitleUncheckedUpdateManyInput>
    /**
     * Filter which JobTitles to update
     */
    where?: JobTitleWhereInput
    /**
     * Limit how many JobTitles to update.
     */
    limit?: number
  }

  /**
   * JobTitle upsert
   */
  export type JobTitleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobTitle
     */
    select?: JobTitleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobTitle
     */
    omit?: JobTitleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobTitleInclude<ExtArgs> | null
    /**
     * The filter to search for the JobTitle to update in case it exists.
     */
    where: JobTitleWhereUniqueInput
    /**
     * In case the JobTitle found by the `where` argument doesn't exist, create a new JobTitle with this data.
     */
    create: XOR<JobTitleCreateInput, JobTitleUncheckedCreateInput>
    /**
     * In case the JobTitle was found with the provided `where` argument, update it with this data.
     */
    update: XOR<JobTitleUpdateInput, JobTitleUncheckedUpdateInput>
  }

  /**
   * JobTitle delete
   */
  export type JobTitleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobTitle
     */
    select?: JobTitleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobTitle
     */
    omit?: JobTitleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobTitleInclude<ExtArgs> | null
    /**
     * Filter which JobTitle to delete.
     */
    where: JobTitleWhereUniqueInput
  }

  /**
   * JobTitle deleteMany
   */
  export type JobTitleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JobTitles to delete
     */
    where?: JobTitleWhereInput
    /**
     * Limit how many JobTitles to delete.
     */
    limit?: number
  }

  /**
   * JobTitle.people
   */
  export type JobTitle$peopleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the People
     */
    select?: PeopleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the People
     */
    omit?: PeopleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeopleInclude<ExtArgs> | null
    where?: PeopleWhereInput
    orderBy?: PeopleOrderByWithRelationInput | PeopleOrderByWithRelationInput[]
    cursor?: PeopleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PeopleScalarFieldEnum | PeopleScalarFieldEnum[]
  }

  /**
   * JobTitle without action
   */
  export type JobTitleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobTitle
     */
    select?: JobTitleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobTitle
     */
    omit?: JobTitleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobTitleInclude<ExtArgs> | null
  }


  /**
   * Model Role
   */

  export type AggregateRole = {
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  export type RoleAvgAggregateOutputType = {
    id: number | null
  }

  export type RoleSumAggregateOutputType = {
    id: number | null
  }

  export type RoleMinAggregateOutputType = {
    id: number | null
    name: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RoleMaxAggregateOutputType = {
    id: number | null
    name: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RoleCountAggregateOutputType = {
    id: number
    name: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RoleAvgAggregateInputType = {
    id?: true
  }

  export type RoleSumAggregateInputType = {
    id?: true
  }

  export type RoleMinAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RoleMaxAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RoleCountAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RoleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Role to aggregate.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Roles
    **/
    _count?: true | RoleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RoleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RoleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoleMaxAggregateInputType
  }

  export type GetRoleAggregateType<T extends RoleAggregateArgs> = {
        [P in keyof T & keyof AggregateRole]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRole[P]>
      : GetScalarType<T[P], AggregateRole[P]>
  }




  export type RoleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithAggregationInput | RoleOrderByWithAggregationInput[]
    by: RoleScalarFieldEnum[] | RoleScalarFieldEnum
    having?: RoleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoleCountAggregateInputType | true
    _avg?: RoleAvgAggregateInputType
    _sum?: RoleSumAggregateInputType
    _min?: RoleMinAggregateInputType
    _max?: RoleMaxAggregateInputType
  }

  export type RoleGroupByOutputType = {
    id: number
    name: string
    createdAt: Date | null
    updatedAt: Date | null
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  type GetRoleGroupByPayload<T extends RoleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RoleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoleGroupByOutputType[P]>
            : GetScalarType<T[P], RoleGroupByOutputType[P]>
        }
      >
    >


  export type RoleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    people?: boolean | Role$peopleArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>

  export type RoleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["role"]>

  export type RoleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["role"]>

  export type RoleSelectScalar = {
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RoleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "createdAt" | "updatedAt", ExtArgs["result"]["role"]>
  export type RoleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    people?: boolean | Role$peopleArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RoleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type RoleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $RolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Role"
    objects: {
      people: Prisma.$PeoplePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      createdAt: Date | null
      updatedAt: Date | null
    }, ExtArgs["result"]["role"]>
    composites: {}
  }

  type RoleGetPayload<S extends boolean | null | undefined | RoleDefaultArgs> = $Result.GetResult<Prisma.$RolePayload, S>

  type RoleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RoleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RoleCountAggregateInputType | true
    }

  export interface RoleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Role'], meta: { name: 'Role' } }
    /**
     * Find zero or one Role that matches the filter.
     * @param {RoleFindUniqueArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RoleFindUniqueArgs>(args: SelectSubset<T, RoleFindUniqueArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Role that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RoleFindUniqueOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RoleFindUniqueOrThrowArgs>(args: SelectSubset<T, RoleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RoleFindFirstArgs>(args?: SelectSubset<T, RoleFindFirstArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RoleFindFirstOrThrowArgs>(args?: SelectSubset<T, RoleFindFirstOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.role.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.role.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const roleWithIdOnly = await prisma.role.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RoleFindManyArgs>(args?: SelectSubset<T, RoleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Role.
     * @param {RoleCreateArgs} args - Arguments to create a Role.
     * @example
     * // Create one Role
     * const Role = await prisma.role.create({
     *   data: {
     *     // ... data to create a Role
     *   }
     * })
     * 
     */
    create<T extends RoleCreateArgs>(args: SelectSubset<T, RoleCreateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Roles.
     * @param {RoleCreateManyArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RoleCreateManyArgs>(args?: SelectSubset<T, RoleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Roles and returns the data saved in the database.
     * @param {RoleCreateManyAndReturnArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Roles and only return the `id`
     * const roleWithIdOnly = await prisma.role.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RoleCreateManyAndReturnArgs>(args?: SelectSubset<T, RoleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Role.
     * @param {RoleDeleteArgs} args - Arguments to delete one Role.
     * @example
     * // Delete one Role
     * const Role = await prisma.role.delete({
     *   where: {
     *     // ... filter to delete one Role
     *   }
     * })
     * 
     */
    delete<T extends RoleDeleteArgs>(args: SelectSubset<T, RoleDeleteArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Role.
     * @param {RoleUpdateArgs} args - Arguments to update one Role.
     * @example
     * // Update one Role
     * const role = await prisma.role.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RoleUpdateArgs>(args: SelectSubset<T, RoleUpdateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Roles.
     * @param {RoleDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.role.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RoleDeleteManyArgs>(args?: SelectSubset<T, RoleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RoleUpdateManyArgs>(args: SelectSubset<T, RoleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles and returns the data updated in the database.
     * @param {RoleUpdateManyAndReturnArgs} args - Arguments to update many Roles.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Roles and only return the `id`
     * const roleWithIdOnly = await prisma.role.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RoleUpdateManyAndReturnArgs>(args: SelectSubset<T, RoleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Role.
     * @param {RoleUpsertArgs} args - Arguments to update or create a Role.
     * @example
     * // Update or create a Role
     * const role = await prisma.role.upsert({
     *   create: {
     *     // ... data to create a Role
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Role we want to update
     *   }
     * })
     */
    upsert<T extends RoleUpsertArgs>(args: SelectSubset<T, RoleUpsertArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.role.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends RoleCountArgs>(
      args?: Subset<T, RoleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoleAggregateArgs>(args: Subset<T, RoleAggregateArgs>): Prisma.PrismaPromise<GetRoleAggregateType<T>>

    /**
     * Group by Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RoleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RoleGroupByArgs['orderBy'] }
        : { orderBy?: RoleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RoleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Role model
   */
  readonly fields: RoleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Role.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RoleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    people<T extends Role$peopleArgs<ExtArgs> = {}>(args?: Subset<T, Role$peopleArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PeoplePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Role model
   */
  interface RoleFieldRefs {
    readonly id: FieldRef<"Role", 'Int'>
    readonly name: FieldRef<"Role", 'String'>
    readonly createdAt: FieldRef<"Role", 'DateTime'>
    readonly updatedAt: FieldRef<"Role", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Role findUnique
   */
  export type RoleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findUniqueOrThrow
   */
  export type RoleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findFirst
   */
  export type RoleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findFirstOrThrow
   */
  export type RoleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findMany
   */
  export type RoleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Roles to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role create
   */
  export type RoleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to create a Role.
     */
    data: XOR<RoleCreateInput, RoleUncheckedCreateInput>
  }

  /**
   * Role createMany
   */
  export type RoleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Role createManyAndReturn
   */
  export type RoleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Role update
   */
  export type RoleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to update a Role.
     */
    data: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
    /**
     * Choose, which Role to update.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role updateMany
   */
  export type RoleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Roles.
     */
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to update.
     */
    limit?: number
  }

  /**
   * Role updateManyAndReturn
   */
  export type RoleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * The data used to update Roles.
     */
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to update.
     */
    limit?: number
  }

  /**
   * Role upsert
   */
  export type RoleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The filter to search for the Role to update in case it exists.
     */
    where: RoleWhereUniqueInput
    /**
     * In case the Role found by the `where` argument doesn't exist, create a new Role with this data.
     */
    create: XOR<RoleCreateInput, RoleUncheckedCreateInput>
    /**
     * In case the Role was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
  }

  /**
   * Role delete
   */
  export type RoleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter which Role to delete.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role deleteMany
   */
  export type RoleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Roles to delete
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to delete.
     */
    limit?: number
  }

  /**
   * Role.people
   */
  export type Role$peopleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the People
     */
    select?: PeopleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the People
     */
    omit?: PeopleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeopleInclude<ExtArgs> | null
    where?: PeopleWhereInput
    orderBy?: PeopleOrderByWithRelationInput | PeopleOrderByWithRelationInput[]
    cursor?: PeopleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PeopleScalarFieldEnum | PeopleScalarFieldEnum[]
  }

  /**
   * Role without action
   */
  export type RoleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
  }


  /**
   * Model Seniority
   */

  export type AggregateSeniority = {
    _count: SeniorityCountAggregateOutputType | null
    _avg: SeniorityAvgAggregateOutputType | null
    _sum: SenioritySumAggregateOutputType | null
    _min: SeniorityMinAggregateOutputType | null
    _max: SeniorityMaxAggregateOutputType | null
  }

  export type SeniorityAvgAggregateOutputType = {
    id: number | null
  }

  export type SenioritySumAggregateOutputType = {
    id: number | null
  }

  export type SeniorityMinAggregateOutputType = {
    id: number | null
    name: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SeniorityMaxAggregateOutputType = {
    id: number | null
    name: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SeniorityCountAggregateOutputType = {
    id: number
    name: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SeniorityAvgAggregateInputType = {
    id?: true
  }

  export type SenioritySumAggregateInputType = {
    id?: true
  }

  export type SeniorityMinAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SeniorityMaxAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SeniorityCountAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SeniorityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Seniority to aggregate.
     */
    where?: SeniorityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Seniorities to fetch.
     */
    orderBy?: SeniorityOrderByWithRelationInput | SeniorityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SeniorityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Seniorities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Seniorities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Seniorities
    **/
    _count?: true | SeniorityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SeniorityAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SenioritySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SeniorityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SeniorityMaxAggregateInputType
  }

  export type GetSeniorityAggregateType<T extends SeniorityAggregateArgs> = {
        [P in keyof T & keyof AggregateSeniority]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSeniority[P]>
      : GetScalarType<T[P], AggregateSeniority[P]>
  }




  export type SeniorityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SeniorityWhereInput
    orderBy?: SeniorityOrderByWithAggregationInput | SeniorityOrderByWithAggregationInput[]
    by: SeniorityScalarFieldEnum[] | SeniorityScalarFieldEnum
    having?: SeniorityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SeniorityCountAggregateInputType | true
    _avg?: SeniorityAvgAggregateInputType
    _sum?: SenioritySumAggregateInputType
    _min?: SeniorityMinAggregateInputType
    _max?: SeniorityMaxAggregateInputType
  }

  export type SeniorityGroupByOutputType = {
    id: number
    name: string
    createdAt: Date | null
    updatedAt: Date | null
    _count: SeniorityCountAggregateOutputType | null
    _avg: SeniorityAvgAggregateOutputType | null
    _sum: SenioritySumAggregateOutputType | null
    _min: SeniorityMinAggregateOutputType | null
    _max: SeniorityMaxAggregateOutputType | null
  }

  type GetSeniorityGroupByPayload<T extends SeniorityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SeniorityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SeniorityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SeniorityGroupByOutputType[P]>
            : GetScalarType<T[P], SeniorityGroupByOutputType[P]>
        }
      >
    >


  export type SenioritySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    people?: boolean | Seniority$peopleArgs<ExtArgs>
    _count?: boolean | SeniorityCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["seniority"]>

  export type SenioritySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["seniority"]>

  export type SenioritySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["seniority"]>

  export type SenioritySelectScalar = {
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SeniorityOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "createdAt" | "updatedAt", ExtArgs["result"]["seniority"]>
  export type SeniorityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    people?: boolean | Seniority$peopleArgs<ExtArgs>
    _count?: boolean | SeniorityCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SeniorityIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type SeniorityIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $SeniorityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Seniority"
    objects: {
      people: Prisma.$PeoplePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      createdAt: Date | null
      updatedAt: Date | null
    }, ExtArgs["result"]["seniority"]>
    composites: {}
  }

  type SeniorityGetPayload<S extends boolean | null | undefined | SeniorityDefaultArgs> = $Result.GetResult<Prisma.$SeniorityPayload, S>

  type SeniorityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SeniorityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SeniorityCountAggregateInputType | true
    }

  export interface SeniorityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Seniority'], meta: { name: 'Seniority' } }
    /**
     * Find zero or one Seniority that matches the filter.
     * @param {SeniorityFindUniqueArgs} args - Arguments to find a Seniority
     * @example
     * // Get one Seniority
     * const seniority = await prisma.seniority.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SeniorityFindUniqueArgs>(args: SelectSubset<T, SeniorityFindUniqueArgs<ExtArgs>>): Prisma__SeniorityClient<$Result.GetResult<Prisma.$SeniorityPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Seniority that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SeniorityFindUniqueOrThrowArgs} args - Arguments to find a Seniority
     * @example
     * // Get one Seniority
     * const seniority = await prisma.seniority.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SeniorityFindUniqueOrThrowArgs>(args: SelectSubset<T, SeniorityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SeniorityClient<$Result.GetResult<Prisma.$SeniorityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Seniority that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeniorityFindFirstArgs} args - Arguments to find a Seniority
     * @example
     * // Get one Seniority
     * const seniority = await prisma.seniority.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SeniorityFindFirstArgs>(args?: SelectSubset<T, SeniorityFindFirstArgs<ExtArgs>>): Prisma__SeniorityClient<$Result.GetResult<Prisma.$SeniorityPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Seniority that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeniorityFindFirstOrThrowArgs} args - Arguments to find a Seniority
     * @example
     * // Get one Seniority
     * const seniority = await prisma.seniority.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SeniorityFindFirstOrThrowArgs>(args?: SelectSubset<T, SeniorityFindFirstOrThrowArgs<ExtArgs>>): Prisma__SeniorityClient<$Result.GetResult<Prisma.$SeniorityPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Seniorities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeniorityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Seniorities
     * const seniorities = await prisma.seniority.findMany()
     * 
     * // Get first 10 Seniorities
     * const seniorities = await prisma.seniority.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const seniorityWithIdOnly = await prisma.seniority.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SeniorityFindManyArgs>(args?: SelectSubset<T, SeniorityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeniorityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Seniority.
     * @param {SeniorityCreateArgs} args - Arguments to create a Seniority.
     * @example
     * // Create one Seniority
     * const Seniority = await prisma.seniority.create({
     *   data: {
     *     // ... data to create a Seniority
     *   }
     * })
     * 
     */
    create<T extends SeniorityCreateArgs>(args: SelectSubset<T, SeniorityCreateArgs<ExtArgs>>): Prisma__SeniorityClient<$Result.GetResult<Prisma.$SeniorityPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Seniorities.
     * @param {SeniorityCreateManyArgs} args - Arguments to create many Seniorities.
     * @example
     * // Create many Seniorities
     * const seniority = await prisma.seniority.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SeniorityCreateManyArgs>(args?: SelectSubset<T, SeniorityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Seniorities and returns the data saved in the database.
     * @param {SeniorityCreateManyAndReturnArgs} args - Arguments to create many Seniorities.
     * @example
     * // Create many Seniorities
     * const seniority = await prisma.seniority.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Seniorities and only return the `id`
     * const seniorityWithIdOnly = await prisma.seniority.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SeniorityCreateManyAndReturnArgs>(args?: SelectSubset<T, SeniorityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeniorityPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Seniority.
     * @param {SeniorityDeleteArgs} args - Arguments to delete one Seniority.
     * @example
     * // Delete one Seniority
     * const Seniority = await prisma.seniority.delete({
     *   where: {
     *     // ... filter to delete one Seniority
     *   }
     * })
     * 
     */
    delete<T extends SeniorityDeleteArgs>(args: SelectSubset<T, SeniorityDeleteArgs<ExtArgs>>): Prisma__SeniorityClient<$Result.GetResult<Prisma.$SeniorityPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Seniority.
     * @param {SeniorityUpdateArgs} args - Arguments to update one Seniority.
     * @example
     * // Update one Seniority
     * const seniority = await prisma.seniority.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SeniorityUpdateArgs>(args: SelectSubset<T, SeniorityUpdateArgs<ExtArgs>>): Prisma__SeniorityClient<$Result.GetResult<Prisma.$SeniorityPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Seniorities.
     * @param {SeniorityDeleteManyArgs} args - Arguments to filter Seniorities to delete.
     * @example
     * // Delete a few Seniorities
     * const { count } = await prisma.seniority.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SeniorityDeleteManyArgs>(args?: SelectSubset<T, SeniorityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Seniorities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeniorityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Seniorities
     * const seniority = await prisma.seniority.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SeniorityUpdateManyArgs>(args: SelectSubset<T, SeniorityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Seniorities and returns the data updated in the database.
     * @param {SeniorityUpdateManyAndReturnArgs} args - Arguments to update many Seniorities.
     * @example
     * // Update many Seniorities
     * const seniority = await prisma.seniority.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Seniorities and only return the `id`
     * const seniorityWithIdOnly = await prisma.seniority.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SeniorityUpdateManyAndReturnArgs>(args: SelectSubset<T, SeniorityUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeniorityPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Seniority.
     * @param {SeniorityUpsertArgs} args - Arguments to update or create a Seniority.
     * @example
     * // Update or create a Seniority
     * const seniority = await prisma.seniority.upsert({
     *   create: {
     *     // ... data to create a Seniority
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Seniority we want to update
     *   }
     * })
     */
    upsert<T extends SeniorityUpsertArgs>(args: SelectSubset<T, SeniorityUpsertArgs<ExtArgs>>): Prisma__SeniorityClient<$Result.GetResult<Prisma.$SeniorityPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Seniorities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeniorityCountArgs} args - Arguments to filter Seniorities to count.
     * @example
     * // Count the number of Seniorities
     * const count = await prisma.seniority.count({
     *   where: {
     *     // ... the filter for the Seniorities we want to count
     *   }
     * })
    **/
    count<T extends SeniorityCountArgs>(
      args?: Subset<T, SeniorityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SeniorityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Seniority.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeniorityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SeniorityAggregateArgs>(args: Subset<T, SeniorityAggregateArgs>): Prisma.PrismaPromise<GetSeniorityAggregateType<T>>

    /**
     * Group by Seniority.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeniorityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SeniorityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SeniorityGroupByArgs['orderBy'] }
        : { orderBy?: SeniorityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SeniorityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSeniorityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Seniority model
   */
  readonly fields: SeniorityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Seniority.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SeniorityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    people<T extends Seniority$peopleArgs<ExtArgs> = {}>(args?: Subset<T, Seniority$peopleArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PeoplePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Seniority model
   */
  interface SeniorityFieldRefs {
    readonly id: FieldRef<"Seniority", 'Int'>
    readonly name: FieldRef<"Seniority", 'String'>
    readonly createdAt: FieldRef<"Seniority", 'DateTime'>
    readonly updatedAt: FieldRef<"Seniority", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Seniority findUnique
   */
  export type SeniorityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seniority
     */
    select?: SenioritySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seniority
     */
    omit?: SeniorityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeniorityInclude<ExtArgs> | null
    /**
     * Filter, which Seniority to fetch.
     */
    where: SeniorityWhereUniqueInput
  }

  /**
   * Seniority findUniqueOrThrow
   */
  export type SeniorityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seniority
     */
    select?: SenioritySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seniority
     */
    omit?: SeniorityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeniorityInclude<ExtArgs> | null
    /**
     * Filter, which Seniority to fetch.
     */
    where: SeniorityWhereUniqueInput
  }

  /**
   * Seniority findFirst
   */
  export type SeniorityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seniority
     */
    select?: SenioritySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seniority
     */
    omit?: SeniorityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeniorityInclude<ExtArgs> | null
    /**
     * Filter, which Seniority to fetch.
     */
    where?: SeniorityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Seniorities to fetch.
     */
    orderBy?: SeniorityOrderByWithRelationInput | SeniorityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Seniorities.
     */
    cursor?: SeniorityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Seniorities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Seniorities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Seniorities.
     */
    distinct?: SeniorityScalarFieldEnum | SeniorityScalarFieldEnum[]
  }

  /**
   * Seniority findFirstOrThrow
   */
  export type SeniorityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seniority
     */
    select?: SenioritySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seniority
     */
    omit?: SeniorityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeniorityInclude<ExtArgs> | null
    /**
     * Filter, which Seniority to fetch.
     */
    where?: SeniorityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Seniorities to fetch.
     */
    orderBy?: SeniorityOrderByWithRelationInput | SeniorityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Seniorities.
     */
    cursor?: SeniorityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Seniorities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Seniorities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Seniorities.
     */
    distinct?: SeniorityScalarFieldEnum | SeniorityScalarFieldEnum[]
  }

  /**
   * Seniority findMany
   */
  export type SeniorityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seniority
     */
    select?: SenioritySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seniority
     */
    omit?: SeniorityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeniorityInclude<ExtArgs> | null
    /**
     * Filter, which Seniorities to fetch.
     */
    where?: SeniorityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Seniorities to fetch.
     */
    orderBy?: SeniorityOrderByWithRelationInput | SeniorityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Seniorities.
     */
    cursor?: SeniorityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Seniorities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Seniorities.
     */
    skip?: number
    distinct?: SeniorityScalarFieldEnum | SeniorityScalarFieldEnum[]
  }

  /**
   * Seniority create
   */
  export type SeniorityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seniority
     */
    select?: SenioritySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seniority
     */
    omit?: SeniorityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeniorityInclude<ExtArgs> | null
    /**
     * The data needed to create a Seniority.
     */
    data: XOR<SeniorityCreateInput, SeniorityUncheckedCreateInput>
  }

  /**
   * Seniority createMany
   */
  export type SeniorityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Seniorities.
     */
    data: SeniorityCreateManyInput | SeniorityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Seniority createManyAndReturn
   */
  export type SeniorityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seniority
     */
    select?: SenioritySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Seniority
     */
    omit?: SeniorityOmit<ExtArgs> | null
    /**
     * The data used to create many Seniorities.
     */
    data: SeniorityCreateManyInput | SeniorityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Seniority update
   */
  export type SeniorityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seniority
     */
    select?: SenioritySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seniority
     */
    omit?: SeniorityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeniorityInclude<ExtArgs> | null
    /**
     * The data needed to update a Seniority.
     */
    data: XOR<SeniorityUpdateInput, SeniorityUncheckedUpdateInput>
    /**
     * Choose, which Seniority to update.
     */
    where: SeniorityWhereUniqueInput
  }

  /**
   * Seniority updateMany
   */
  export type SeniorityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Seniorities.
     */
    data: XOR<SeniorityUpdateManyMutationInput, SeniorityUncheckedUpdateManyInput>
    /**
     * Filter which Seniorities to update
     */
    where?: SeniorityWhereInput
    /**
     * Limit how many Seniorities to update.
     */
    limit?: number
  }

  /**
   * Seniority updateManyAndReturn
   */
  export type SeniorityUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seniority
     */
    select?: SenioritySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Seniority
     */
    omit?: SeniorityOmit<ExtArgs> | null
    /**
     * The data used to update Seniorities.
     */
    data: XOR<SeniorityUpdateManyMutationInput, SeniorityUncheckedUpdateManyInput>
    /**
     * Filter which Seniorities to update
     */
    where?: SeniorityWhereInput
    /**
     * Limit how many Seniorities to update.
     */
    limit?: number
  }

  /**
   * Seniority upsert
   */
  export type SeniorityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seniority
     */
    select?: SenioritySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seniority
     */
    omit?: SeniorityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeniorityInclude<ExtArgs> | null
    /**
     * The filter to search for the Seniority to update in case it exists.
     */
    where: SeniorityWhereUniqueInput
    /**
     * In case the Seniority found by the `where` argument doesn't exist, create a new Seniority with this data.
     */
    create: XOR<SeniorityCreateInput, SeniorityUncheckedCreateInput>
    /**
     * In case the Seniority was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SeniorityUpdateInput, SeniorityUncheckedUpdateInput>
  }

  /**
   * Seniority delete
   */
  export type SeniorityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seniority
     */
    select?: SenioritySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seniority
     */
    omit?: SeniorityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeniorityInclude<ExtArgs> | null
    /**
     * Filter which Seniority to delete.
     */
    where: SeniorityWhereUniqueInput
  }

  /**
   * Seniority deleteMany
   */
  export type SeniorityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Seniorities to delete
     */
    where?: SeniorityWhereInput
    /**
     * Limit how many Seniorities to delete.
     */
    limit?: number
  }

  /**
   * Seniority.people
   */
  export type Seniority$peopleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the People
     */
    select?: PeopleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the People
     */
    omit?: PeopleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeopleInclude<ExtArgs> | null
    where?: PeopleWhereInput
    orderBy?: PeopleOrderByWithRelationInput | PeopleOrderByWithRelationInput[]
    cursor?: PeopleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PeopleScalarFieldEnum | PeopleScalarFieldEnum[]
  }

  /**
   * Seniority without action
   */
  export type SeniorityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seniority
     */
    select?: SenioritySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seniority
     */
    omit?: SeniorityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeniorityInclude<ExtArgs> | null
  }


  /**
   * Model SkillLevel
   */

  export type AggregateSkillLevel = {
    _count: SkillLevelCountAggregateOutputType | null
    _avg: SkillLevelAvgAggregateOutputType | null
    _sum: SkillLevelSumAggregateOutputType | null
    _min: SkillLevelMinAggregateOutputType | null
    _max: SkillLevelMaxAggregateOutputType | null
  }

  export type SkillLevelAvgAggregateOutputType = {
    id: number | null
  }

  export type SkillLevelSumAggregateOutputType = {
    id: number | null
  }

  export type SkillLevelMinAggregateOutputType = {
    id: number | null
    name: string | null
    level: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SkillLevelMaxAggregateOutputType = {
    id: number | null
    name: string | null
    level: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SkillLevelCountAggregateOutputType = {
    id: number
    name: number
    level: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SkillLevelAvgAggregateInputType = {
    id?: true
  }

  export type SkillLevelSumAggregateInputType = {
    id?: true
  }

  export type SkillLevelMinAggregateInputType = {
    id?: true
    name?: true
    level?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SkillLevelMaxAggregateInputType = {
    id?: true
    name?: true
    level?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SkillLevelCountAggregateInputType = {
    id?: true
    name?: true
    level?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SkillLevelAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SkillLevel to aggregate.
     */
    where?: SkillLevelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SkillLevels to fetch.
     */
    orderBy?: SkillLevelOrderByWithRelationInput | SkillLevelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SkillLevelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SkillLevels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SkillLevels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SkillLevels
    **/
    _count?: true | SkillLevelCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SkillLevelAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SkillLevelSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SkillLevelMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SkillLevelMaxAggregateInputType
  }

  export type GetSkillLevelAggregateType<T extends SkillLevelAggregateArgs> = {
        [P in keyof T & keyof AggregateSkillLevel]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSkillLevel[P]>
      : GetScalarType<T[P], AggregateSkillLevel[P]>
  }




  export type SkillLevelGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SkillLevelWhereInput
    orderBy?: SkillLevelOrderByWithAggregationInput | SkillLevelOrderByWithAggregationInput[]
    by: SkillLevelScalarFieldEnum[] | SkillLevelScalarFieldEnum
    having?: SkillLevelScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SkillLevelCountAggregateInputType | true
    _avg?: SkillLevelAvgAggregateInputType
    _sum?: SkillLevelSumAggregateInputType
    _min?: SkillLevelMinAggregateInputType
    _max?: SkillLevelMaxAggregateInputType
  }

  export type SkillLevelGroupByOutputType = {
    id: number
    name: string
    level: string
    createdAt: Date | null
    updatedAt: Date | null
    _count: SkillLevelCountAggregateOutputType | null
    _avg: SkillLevelAvgAggregateOutputType | null
    _sum: SkillLevelSumAggregateOutputType | null
    _min: SkillLevelMinAggregateOutputType | null
    _max: SkillLevelMaxAggregateOutputType | null
  }

  type GetSkillLevelGroupByPayload<T extends SkillLevelGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SkillLevelGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SkillLevelGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SkillLevelGroupByOutputType[P]>
            : GetScalarType<T[P], SkillLevelGroupByOutputType[P]>
        }
      >
    >


  export type SkillLevelSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    level?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["skillLevel"]>

  export type SkillLevelSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    level?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["skillLevel"]>

  export type SkillLevelSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    level?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["skillLevel"]>

  export type SkillLevelSelectScalar = {
    id?: boolean
    name?: boolean
    level?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SkillLevelOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "level" | "createdAt" | "updatedAt", ExtArgs["result"]["skillLevel"]>

  export type $SkillLevelPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SkillLevel"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      level: string
      createdAt: Date | null
      updatedAt: Date | null
    }, ExtArgs["result"]["skillLevel"]>
    composites: {}
  }

  type SkillLevelGetPayload<S extends boolean | null | undefined | SkillLevelDefaultArgs> = $Result.GetResult<Prisma.$SkillLevelPayload, S>

  type SkillLevelCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SkillLevelFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SkillLevelCountAggregateInputType | true
    }

  export interface SkillLevelDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SkillLevel'], meta: { name: 'SkillLevel' } }
    /**
     * Find zero or one SkillLevel that matches the filter.
     * @param {SkillLevelFindUniqueArgs} args - Arguments to find a SkillLevel
     * @example
     * // Get one SkillLevel
     * const skillLevel = await prisma.skillLevel.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SkillLevelFindUniqueArgs>(args: SelectSubset<T, SkillLevelFindUniqueArgs<ExtArgs>>): Prisma__SkillLevelClient<$Result.GetResult<Prisma.$SkillLevelPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SkillLevel that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SkillLevelFindUniqueOrThrowArgs} args - Arguments to find a SkillLevel
     * @example
     * // Get one SkillLevel
     * const skillLevel = await prisma.skillLevel.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SkillLevelFindUniqueOrThrowArgs>(args: SelectSubset<T, SkillLevelFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SkillLevelClient<$Result.GetResult<Prisma.$SkillLevelPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SkillLevel that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkillLevelFindFirstArgs} args - Arguments to find a SkillLevel
     * @example
     * // Get one SkillLevel
     * const skillLevel = await prisma.skillLevel.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SkillLevelFindFirstArgs>(args?: SelectSubset<T, SkillLevelFindFirstArgs<ExtArgs>>): Prisma__SkillLevelClient<$Result.GetResult<Prisma.$SkillLevelPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SkillLevel that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkillLevelFindFirstOrThrowArgs} args - Arguments to find a SkillLevel
     * @example
     * // Get one SkillLevel
     * const skillLevel = await prisma.skillLevel.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SkillLevelFindFirstOrThrowArgs>(args?: SelectSubset<T, SkillLevelFindFirstOrThrowArgs<ExtArgs>>): Prisma__SkillLevelClient<$Result.GetResult<Prisma.$SkillLevelPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SkillLevels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkillLevelFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SkillLevels
     * const skillLevels = await prisma.skillLevel.findMany()
     * 
     * // Get first 10 SkillLevels
     * const skillLevels = await prisma.skillLevel.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const skillLevelWithIdOnly = await prisma.skillLevel.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SkillLevelFindManyArgs>(args?: SelectSubset<T, SkillLevelFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SkillLevelPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SkillLevel.
     * @param {SkillLevelCreateArgs} args - Arguments to create a SkillLevel.
     * @example
     * // Create one SkillLevel
     * const SkillLevel = await prisma.skillLevel.create({
     *   data: {
     *     // ... data to create a SkillLevel
     *   }
     * })
     * 
     */
    create<T extends SkillLevelCreateArgs>(args: SelectSubset<T, SkillLevelCreateArgs<ExtArgs>>): Prisma__SkillLevelClient<$Result.GetResult<Prisma.$SkillLevelPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SkillLevels.
     * @param {SkillLevelCreateManyArgs} args - Arguments to create many SkillLevels.
     * @example
     * // Create many SkillLevels
     * const skillLevel = await prisma.skillLevel.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SkillLevelCreateManyArgs>(args?: SelectSubset<T, SkillLevelCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SkillLevels and returns the data saved in the database.
     * @param {SkillLevelCreateManyAndReturnArgs} args - Arguments to create many SkillLevels.
     * @example
     * // Create many SkillLevels
     * const skillLevel = await prisma.skillLevel.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SkillLevels and only return the `id`
     * const skillLevelWithIdOnly = await prisma.skillLevel.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SkillLevelCreateManyAndReturnArgs>(args?: SelectSubset<T, SkillLevelCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SkillLevelPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SkillLevel.
     * @param {SkillLevelDeleteArgs} args - Arguments to delete one SkillLevel.
     * @example
     * // Delete one SkillLevel
     * const SkillLevel = await prisma.skillLevel.delete({
     *   where: {
     *     // ... filter to delete one SkillLevel
     *   }
     * })
     * 
     */
    delete<T extends SkillLevelDeleteArgs>(args: SelectSubset<T, SkillLevelDeleteArgs<ExtArgs>>): Prisma__SkillLevelClient<$Result.GetResult<Prisma.$SkillLevelPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SkillLevel.
     * @param {SkillLevelUpdateArgs} args - Arguments to update one SkillLevel.
     * @example
     * // Update one SkillLevel
     * const skillLevel = await prisma.skillLevel.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SkillLevelUpdateArgs>(args: SelectSubset<T, SkillLevelUpdateArgs<ExtArgs>>): Prisma__SkillLevelClient<$Result.GetResult<Prisma.$SkillLevelPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SkillLevels.
     * @param {SkillLevelDeleteManyArgs} args - Arguments to filter SkillLevels to delete.
     * @example
     * // Delete a few SkillLevels
     * const { count } = await prisma.skillLevel.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SkillLevelDeleteManyArgs>(args?: SelectSubset<T, SkillLevelDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SkillLevels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkillLevelUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SkillLevels
     * const skillLevel = await prisma.skillLevel.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SkillLevelUpdateManyArgs>(args: SelectSubset<T, SkillLevelUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SkillLevels and returns the data updated in the database.
     * @param {SkillLevelUpdateManyAndReturnArgs} args - Arguments to update many SkillLevels.
     * @example
     * // Update many SkillLevels
     * const skillLevel = await prisma.skillLevel.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SkillLevels and only return the `id`
     * const skillLevelWithIdOnly = await prisma.skillLevel.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SkillLevelUpdateManyAndReturnArgs>(args: SelectSubset<T, SkillLevelUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SkillLevelPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SkillLevel.
     * @param {SkillLevelUpsertArgs} args - Arguments to update or create a SkillLevel.
     * @example
     * // Update or create a SkillLevel
     * const skillLevel = await prisma.skillLevel.upsert({
     *   create: {
     *     // ... data to create a SkillLevel
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SkillLevel we want to update
     *   }
     * })
     */
    upsert<T extends SkillLevelUpsertArgs>(args: SelectSubset<T, SkillLevelUpsertArgs<ExtArgs>>): Prisma__SkillLevelClient<$Result.GetResult<Prisma.$SkillLevelPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SkillLevels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkillLevelCountArgs} args - Arguments to filter SkillLevels to count.
     * @example
     * // Count the number of SkillLevels
     * const count = await prisma.skillLevel.count({
     *   where: {
     *     // ... the filter for the SkillLevels we want to count
     *   }
     * })
    **/
    count<T extends SkillLevelCountArgs>(
      args?: Subset<T, SkillLevelCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SkillLevelCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SkillLevel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkillLevelAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SkillLevelAggregateArgs>(args: Subset<T, SkillLevelAggregateArgs>): Prisma.PrismaPromise<GetSkillLevelAggregateType<T>>

    /**
     * Group by SkillLevel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkillLevelGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SkillLevelGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SkillLevelGroupByArgs['orderBy'] }
        : { orderBy?: SkillLevelGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SkillLevelGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSkillLevelGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SkillLevel model
   */
  readonly fields: SkillLevelFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SkillLevel.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SkillLevelClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SkillLevel model
   */
  interface SkillLevelFieldRefs {
    readonly id: FieldRef<"SkillLevel", 'Int'>
    readonly name: FieldRef<"SkillLevel", 'String'>
    readonly level: FieldRef<"SkillLevel", 'String'>
    readonly createdAt: FieldRef<"SkillLevel", 'DateTime'>
    readonly updatedAt: FieldRef<"SkillLevel", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SkillLevel findUnique
   */
  export type SkillLevelFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkillLevel
     */
    select?: SkillLevelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkillLevel
     */
    omit?: SkillLevelOmit<ExtArgs> | null
    /**
     * Filter, which SkillLevel to fetch.
     */
    where: SkillLevelWhereUniqueInput
  }

  /**
   * SkillLevel findUniqueOrThrow
   */
  export type SkillLevelFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkillLevel
     */
    select?: SkillLevelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkillLevel
     */
    omit?: SkillLevelOmit<ExtArgs> | null
    /**
     * Filter, which SkillLevel to fetch.
     */
    where: SkillLevelWhereUniqueInput
  }

  /**
   * SkillLevel findFirst
   */
  export type SkillLevelFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkillLevel
     */
    select?: SkillLevelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkillLevel
     */
    omit?: SkillLevelOmit<ExtArgs> | null
    /**
     * Filter, which SkillLevel to fetch.
     */
    where?: SkillLevelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SkillLevels to fetch.
     */
    orderBy?: SkillLevelOrderByWithRelationInput | SkillLevelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SkillLevels.
     */
    cursor?: SkillLevelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SkillLevels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SkillLevels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SkillLevels.
     */
    distinct?: SkillLevelScalarFieldEnum | SkillLevelScalarFieldEnum[]
  }

  /**
   * SkillLevel findFirstOrThrow
   */
  export type SkillLevelFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkillLevel
     */
    select?: SkillLevelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkillLevel
     */
    omit?: SkillLevelOmit<ExtArgs> | null
    /**
     * Filter, which SkillLevel to fetch.
     */
    where?: SkillLevelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SkillLevels to fetch.
     */
    orderBy?: SkillLevelOrderByWithRelationInput | SkillLevelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SkillLevels.
     */
    cursor?: SkillLevelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SkillLevels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SkillLevels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SkillLevels.
     */
    distinct?: SkillLevelScalarFieldEnum | SkillLevelScalarFieldEnum[]
  }

  /**
   * SkillLevel findMany
   */
  export type SkillLevelFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkillLevel
     */
    select?: SkillLevelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkillLevel
     */
    omit?: SkillLevelOmit<ExtArgs> | null
    /**
     * Filter, which SkillLevels to fetch.
     */
    where?: SkillLevelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SkillLevels to fetch.
     */
    orderBy?: SkillLevelOrderByWithRelationInput | SkillLevelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SkillLevels.
     */
    cursor?: SkillLevelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SkillLevels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SkillLevels.
     */
    skip?: number
    distinct?: SkillLevelScalarFieldEnum | SkillLevelScalarFieldEnum[]
  }

  /**
   * SkillLevel create
   */
  export type SkillLevelCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkillLevel
     */
    select?: SkillLevelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkillLevel
     */
    omit?: SkillLevelOmit<ExtArgs> | null
    /**
     * The data needed to create a SkillLevel.
     */
    data: XOR<SkillLevelCreateInput, SkillLevelUncheckedCreateInput>
  }

  /**
   * SkillLevel createMany
   */
  export type SkillLevelCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SkillLevels.
     */
    data: SkillLevelCreateManyInput | SkillLevelCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SkillLevel createManyAndReturn
   */
  export type SkillLevelCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkillLevel
     */
    select?: SkillLevelSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SkillLevel
     */
    omit?: SkillLevelOmit<ExtArgs> | null
    /**
     * The data used to create many SkillLevels.
     */
    data: SkillLevelCreateManyInput | SkillLevelCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SkillLevel update
   */
  export type SkillLevelUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkillLevel
     */
    select?: SkillLevelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkillLevel
     */
    omit?: SkillLevelOmit<ExtArgs> | null
    /**
     * The data needed to update a SkillLevel.
     */
    data: XOR<SkillLevelUpdateInput, SkillLevelUncheckedUpdateInput>
    /**
     * Choose, which SkillLevel to update.
     */
    where: SkillLevelWhereUniqueInput
  }

  /**
   * SkillLevel updateMany
   */
  export type SkillLevelUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SkillLevels.
     */
    data: XOR<SkillLevelUpdateManyMutationInput, SkillLevelUncheckedUpdateManyInput>
    /**
     * Filter which SkillLevels to update
     */
    where?: SkillLevelWhereInput
    /**
     * Limit how many SkillLevels to update.
     */
    limit?: number
  }

  /**
   * SkillLevel updateManyAndReturn
   */
  export type SkillLevelUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkillLevel
     */
    select?: SkillLevelSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SkillLevel
     */
    omit?: SkillLevelOmit<ExtArgs> | null
    /**
     * The data used to update SkillLevels.
     */
    data: XOR<SkillLevelUpdateManyMutationInput, SkillLevelUncheckedUpdateManyInput>
    /**
     * Filter which SkillLevels to update
     */
    where?: SkillLevelWhereInput
    /**
     * Limit how many SkillLevels to update.
     */
    limit?: number
  }

  /**
   * SkillLevel upsert
   */
  export type SkillLevelUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkillLevel
     */
    select?: SkillLevelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkillLevel
     */
    omit?: SkillLevelOmit<ExtArgs> | null
    /**
     * The filter to search for the SkillLevel to update in case it exists.
     */
    where: SkillLevelWhereUniqueInput
    /**
     * In case the SkillLevel found by the `where` argument doesn't exist, create a new SkillLevel with this data.
     */
    create: XOR<SkillLevelCreateInput, SkillLevelUncheckedCreateInput>
    /**
     * In case the SkillLevel was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SkillLevelUpdateInput, SkillLevelUncheckedUpdateInput>
  }

  /**
   * SkillLevel delete
   */
  export type SkillLevelDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkillLevel
     */
    select?: SkillLevelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkillLevel
     */
    omit?: SkillLevelOmit<ExtArgs> | null
    /**
     * Filter which SkillLevel to delete.
     */
    where: SkillLevelWhereUniqueInput
  }

  /**
   * SkillLevel deleteMany
   */
  export type SkillLevelDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SkillLevels to delete
     */
    where?: SkillLevelWhereInput
    /**
     * Limit how many SkillLevels to delete.
     */
    limit?: number
  }

  /**
   * SkillLevel without action
   */
  export type SkillLevelDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkillLevel
     */
    select?: SkillLevelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkillLevel
     */
    omit?: SkillLevelOmit<ExtArgs> | null
  }


  /**
   * Model TechnicalsStacks
   */

  export type AggregateTechnicalsStacks = {
    _count: TechnicalsStacksCountAggregateOutputType | null
    _avg: TechnicalsStacksAvgAggregateOutputType | null
    _sum: TechnicalsStacksSumAggregateOutputType | null
    _min: TechnicalsStacksMinAggregateOutputType | null
    _max: TechnicalsStacksMaxAggregateOutputType | null
  }

  export type TechnicalsStacksAvgAggregateOutputType = {
    id: number | null
  }

  export type TechnicalsStacksSumAggregateOutputType = {
    id: number | null
  }

  export type TechnicalsStacksMinAggregateOutputType = {
    id: number | null
    name: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TechnicalsStacksMaxAggregateOutputType = {
    id: number | null
    name: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TechnicalsStacksCountAggregateOutputType = {
    id: number
    name: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type TechnicalsStacksAvgAggregateInputType = {
    id?: true
  }

  export type TechnicalsStacksSumAggregateInputType = {
    id?: true
  }

  export type TechnicalsStacksMinAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TechnicalsStacksMaxAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TechnicalsStacksCountAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type TechnicalsStacksAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TechnicalsStacks to aggregate.
     */
    where?: TechnicalsStacksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TechnicalsStacks to fetch.
     */
    orderBy?: TechnicalsStacksOrderByWithRelationInput | TechnicalsStacksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TechnicalsStacksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TechnicalsStacks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TechnicalsStacks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TechnicalsStacks
    **/
    _count?: true | TechnicalsStacksCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TechnicalsStacksAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TechnicalsStacksSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TechnicalsStacksMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TechnicalsStacksMaxAggregateInputType
  }

  export type GetTechnicalsStacksAggregateType<T extends TechnicalsStacksAggregateArgs> = {
        [P in keyof T & keyof AggregateTechnicalsStacks]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTechnicalsStacks[P]>
      : GetScalarType<T[P], AggregateTechnicalsStacks[P]>
  }




  export type TechnicalsStacksGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TechnicalsStacksWhereInput
    orderBy?: TechnicalsStacksOrderByWithAggregationInput | TechnicalsStacksOrderByWithAggregationInput[]
    by: TechnicalsStacksScalarFieldEnum[] | TechnicalsStacksScalarFieldEnum
    having?: TechnicalsStacksScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TechnicalsStacksCountAggregateInputType | true
    _avg?: TechnicalsStacksAvgAggregateInputType
    _sum?: TechnicalsStacksSumAggregateInputType
    _min?: TechnicalsStacksMinAggregateInputType
    _max?: TechnicalsStacksMaxAggregateInputType
  }

  export type TechnicalsStacksGroupByOutputType = {
    id: number
    name: string
    createdAt: Date | null
    updatedAt: Date | null
    _count: TechnicalsStacksCountAggregateOutputType | null
    _avg: TechnicalsStacksAvgAggregateOutputType | null
    _sum: TechnicalsStacksSumAggregateOutputType | null
    _min: TechnicalsStacksMinAggregateOutputType | null
    _max: TechnicalsStacksMaxAggregateOutputType | null
  }

  type GetTechnicalsStacksGroupByPayload<T extends TechnicalsStacksGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TechnicalsStacksGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TechnicalsStacksGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TechnicalsStacksGroupByOutputType[P]>
            : GetScalarType<T[P], TechnicalsStacksGroupByOutputType[P]>
        }
      >
    >


  export type TechnicalsStacksSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    people?: boolean | TechnicalsStacks$peopleArgs<ExtArgs>
    contacts?: boolean | TechnicalsStacks$contactsArgs<ExtArgs>
    _count?: boolean | TechnicalsStacksCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["technicalsStacks"]>

  export type TechnicalsStacksSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["technicalsStacks"]>

  export type TechnicalsStacksSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["technicalsStacks"]>

  export type TechnicalsStacksSelectScalar = {
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type TechnicalsStacksOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "createdAt" | "updatedAt", ExtArgs["result"]["technicalsStacks"]>
  export type TechnicalsStacksInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    people?: boolean | TechnicalsStacks$peopleArgs<ExtArgs>
    contacts?: boolean | TechnicalsStacks$contactsArgs<ExtArgs>
    _count?: boolean | TechnicalsStacksCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TechnicalsStacksIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type TechnicalsStacksIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $TechnicalsStacksPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TechnicalsStacks"
    objects: {
      people: Prisma.$PeoplePayload<ExtArgs>[]
      contacts: Prisma.$ContactPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      createdAt: Date | null
      updatedAt: Date | null
    }, ExtArgs["result"]["technicalsStacks"]>
    composites: {}
  }

  type TechnicalsStacksGetPayload<S extends boolean | null | undefined | TechnicalsStacksDefaultArgs> = $Result.GetResult<Prisma.$TechnicalsStacksPayload, S>

  type TechnicalsStacksCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TechnicalsStacksFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TechnicalsStacksCountAggregateInputType | true
    }

  export interface TechnicalsStacksDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TechnicalsStacks'], meta: { name: 'TechnicalsStacks' } }
    /**
     * Find zero or one TechnicalsStacks that matches the filter.
     * @param {TechnicalsStacksFindUniqueArgs} args - Arguments to find a TechnicalsStacks
     * @example
     * // Get one TechnicalsStacks
     * const technicalsStacks = await prisma.technicalsStacks.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TechnicalsStacksFindUniqueArgs>(args: SelectSubset<T, TechnicalsStacksFindUniqueArgs<ExtArgs>>): Prisma__TechnicalsStacksClient<$Result.GetResult<Prisma.$TechnicalsStacksPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TechnicalsStacks that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TechnicalsStacksFindUniqueOrThrowArgs} args - Arguments to find a TechnicalsStacks
     * @example
     * // Get one TechnicalsStacks
     * const technicalsStacks = await prisma.technicalsStacks.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TechnicalsStacksFindUniqueOrThrowArgs>(args: SelectSubset<T, TechnicalsStacksFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TechnicalsStacksClient<$Result.GetResult<Prisma.$TechnicalsStacksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TechnicalsStacks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TechnicalsStacksFindFirstArgs} args - Arguments to find a TechnicalsStacks
     * @example
     * // Get one TechnicalsStacks
     * const technicalsStacks = await prisma.technicalsStacks.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TechnicalsStacksFindFirstArgs>(args?: SelectSubset<T, TechnicalsStacksFindFirstArgs<ExtArgs>>): Prisma__TechnicalsStacksClient<$Result.GetResult<Prisma.$TechnicalsStacksPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TechnicalsStacks that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TechnicalsStacksFindFirstOrThrowArgs} args - Arguments to find a TechnicalsStacks
     * @example
     * // Get one TechnicalsStacks
     * const technicalsStacks = await prisma.technicalsStacks.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TechnicalsStacksFindFirstOrThrowArgs>(args?: SelectSubset<T, TechnicalsStacksFindFirstOrThrowArgs<ExtArgs>>): Prisma__TechnicalsStacksClient<$Result.GetResult<Prisma.$TechnicalsStacksPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TechnicalsStacks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TechnicalsStacksFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TechnicalsStacks
     * const technicalsStacks = await prisma.technicalsStacks.findMany()
     * 
     * // Get first 10 TechnicalsStacks
     * const technicalsStacks = await prisma.technicalsStacks.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const technicalsStacksWithIdOnly = await prisma.technicalsStacks.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TechnicalsStacksFindManyArgs>(args?: SelectSubset<T, TechnicalsStacksFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TechnicalsStacksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TechnicalsStacks.
     * @param {TechnicalsStacksCreateArgs} args - Arguments to create a TechnicalsStacks.
     * @example
     * // Create one TechnicalsStacks
     * const TechnicalsStacks = await prisma.technicalsStacks.create({
     *   data: {
     *     // ... data to create a TechnicalsStacks
     *   }
     * })
     * 
     */
    create<T extends TechnicalsStacksCreateArgs>(args: SelectSubset<T, TechnicalsStacksCreateArgs<ExtArgs>>): Prisma__TechnicalsStacksClient<$Result.GetResult<Prisma.$TechnicalsStacksPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TechnicalsStacks.
     * @param {TechnicalsStacksCreateManyArgs} args - Arguments to create many TechnicalsStacks.
     * @example
     * // Create many TechnicalsStacks
     * const technicalsStacks = await prisma.technicalsStacks.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TechnicalsStacksCreateManyArgs>(args?: SelectSubset<T, TechnicalsStacksCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TechnicalsStacks and returns the data saved in the database.
     * @param {TechnicalsStacksCreateManyAndReturnArgs} args - Arguments to create many TechnicalsStacks.
     * @example
     * // Create many TechnicalsStacks
     * const technicalsStacks = await prisma.technicalsStacks.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TechnicalsStacks and only return the `id`
     * const technicalsStacksWithIdOnly = await prisma.technicalsStacks.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TechnicalsStacksCreateManyAndReturnArgs>(args?: SelectSubset<T, TechnicalsStacksCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TechnicalsStacksPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a TechnicalsStacks.
     * @param {TechnicalsStacksDeleteArgs} args - Arguments to delete one TechnicalsStacks.
     * @example
     * // Delete one TechnicalsStacks
     * const TechnicalsStacks = await prisma.technicalsStacks.delete({
     *   where: {
     *     // ... filter to delete one TechnicalsStacks
     *   }
     * })
     * 
     */
    delete<T extends TechnicalsStacksDeleteArgs>(args: SelectSubset<T, TechnicalsStacksDeleteArgs<ExtArgs>>): Prisma__TechnicalsStacksClient<$Result.GetResult<Prisma.$TechnicalsStacksPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TechnicalsStacks.
     * @param {TechnicalsStacksUpdateArgs} args - Arguments to update one TechnicalsStacks.
     * @example
     * // Update one TechnicalsStacks
     * const technicalsStacks = await prisma.technicalsStacks.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TechnicalsStacksUpdateArgs>(args: SelectSubset<T, TechnicalsStacksUpdateArgs<ExtArgs>>): Prisma__TechnicalsStacksClient<$Result.GetResult<Prisma.$TechnicalsStacksPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TechnicalsStacks.
     * @param {TechnicalsStacksDeleteManyArgs} args - Arguments to filter TechnicalsStacks to delete.
     * @example
     * // Delete a few TechnicalsStacks
     * const { count } = await prisma.technicalsStacks.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TechnicalsStacksDeleteManyArgs>(args?: SelectSubset<T, TechnicalsStacksDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TechnicalsStacks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TechnicalsStacksUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TechnicalsStacks
     * const technicalsStacks = await prisma.technicalsStacks.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TechnicalsStacksUpdateManyArgs>(args: SelectSubset<T, TechnicalsStacksUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TechnicalsStacks and returns the data updated in the database.
     * @param {TechnicalsStacksUpdateManyAndReturnArgs} args - Arguments to update many TechnicalsStacks.
     * @example
     * // Update many TechnicalsStacks
     * const technicalsStacks = await prisma.technicalsStacks.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more TechnicalsStacks and only return the `id`
     * const technicalsStacksWithIdOnly = await prisma.technicalsStacks.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TechnicalsStacksUpdateManyAndReturnArgs>(args: SelectSubset<T, TechnicalsStacksUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TechnicalsStacksPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one TechnicalsStacks.
     * @param {TechnicalsStacksUpsertArgs} args - Arguments to update or create a TechnicalsStacks.
     * @example
     * // Update or create a TechnicalsStacks
     * const technicalsStacks = await prisma.technicalsStacks.upsert({
     *   create: {
     *     // ... data to create a TechnicalsStacks
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TechnicalsStacks we want to update
     *   }
     * })
     */
    upsert<T extends TechnicalsStacksUpsertArgs>(args: SelectSubset<T, TechnicalsStacksUpsertArgs<ExtArgs>>): Prisma__TechnicalsStacksClient<$Result.GetResult<Prisma.$TechnicalsStacksPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TechnicalsStacks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TechnicalsStacksCountArgs} args - Arguments to filter TechnicalsStacks to count.
     * @example
     * // Count the number of TechnicalsStacks
     * const count = await prisma.technicalsStacks.count({
     *   where: {
     *     // ... the filter for the TechnicalsStacks we want to count
     *   }
     * })
    **/
    count<T extends TechnicalsStacksCountArgs>(
      args?: Subset<T, TechnicalsStacksCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TechnicalsStacksCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TechnicalsStacks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TechnicalsStacksAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TechnicalsStacksAggregateArgs>(args: Subset<T, TechnicalsStacksAggregateArgs>): Prisma.PrismaPromise<GetTechnicalsStacksAggregateType<T>>

    /**
     * Group by TechnicalsStacks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TechnicalsStacksGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TechnicalsStacksGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TechnicalsStacksGroupByArgs['orderBy'] }
        : { orderBy?: TechnicalsStacksGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TechnicalsStacksGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTechnicalsStacksGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TechnicalsStacks model
   */
  readonly fields: TechnicalsStacksFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TechnicalsStacks.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TechnicalsStacksClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    people<T extends TechnicalsStacks$peopleArgs<ExtArgs> = {}>(args?: Subset<T, TechnicalsStacks$peopleArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PeoplePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    contacts<T extends TechnicalsStacks$contactsArgs<ExtArgs> = {}>(args?: Subset<T, TechnicalsStacks$contactsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TechnicalsStacks model
   */
  interface TechnicalsStacksFieldRefs {
    readonly id: FieldRef<"TechnicalsStacks", 'Int'>
    readonly name: FieldRef<"TechnicalsStacks", 'String'>
    readonly createdAt: FieldRef<"TechnicalsStacks", 'DateTime'>
    readonly updatedAt: FieldRef<"TechnicalsStacks", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * TechnicalsStacks findUnique
   */
  export type TechnicalsStacksFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TechnicalsStacks
     */
    select?: TechnicalsStacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TechnicalsStacks
     */
    omit?: TechnicalsStacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TechnicalsStacksInclude<ExtArgs> | null
    /**
     * Filter, which TechnicalsStacks to fetch.
     */
    where: TechnicalsStacksWhereUniqueInput
  }

  /**
   * TechnicalsStacks findUniqueOrThrow
   */
  export type TechnicalsStacksFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TechnicalsStacks
     */
    select?: TechnicalsStacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TechnicalsStacks
     */
    omit?: TechnicalsStacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TechnicalsStacksInclude<ExtArgs> | null
    /**
     * Filter, which TechnicalsStacks to fetch.
     */
    where: TechnicalsStacksWhereUniqueInput
  }

  /**
   * TechnicalsStacks findFirst
   */
  export type TechnicalsStacksFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TechnicalsStacks
     */
    select?: TechnicalsStacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TechnicalsStacks
     */
    omit?: TechnicalsStacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TechnicalsStacksInclude<ExtArgs> | null
    /**
     * Filter, which TechnicalsStacks to fetch.
     */
    where?: TechnicalsStacksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TechnicalsStacks to fetch.
     */
    orderBy?: TechnicalsStacksOrderByWithRelationInput | TechnicalsStacksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TechnicalsStacks.
     */
    cursor?: TechnicalsStacksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TechnicalsStacks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TechnicalsStacks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TechnicalsStacks.
     */
    distinct?: TechnicalsStacksScalarFieldEnum | TechnicalsStacksScalarFieldEnum[]
  }

  /**
   * TechnicalsStacks findFirstOrThrow
   */
  export type TechnicalsStacksFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TechnicalsStacks
     */
    select?: TechnicalsStacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TechnicalsStacks
     */
    omit?: TechnicalsStacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TechnicalsStacksInclude<ExtArgs> | null
    /**
     * Filter, which TechnicalsStacks to fetch.
     */
    where?: TechnicalsStacksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TechnicalsStacks to fetch.
     */
    orderBy?: TechnicalsStacksOrderByWithRelationInput | TechnicalsStacksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TechnicalsStacks.
     */
    cursor?: TechnicalsStacksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TechnicalsStacks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TechnicalsStacks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TechnicalsStacks.
     */
    distinct?: TechnicalsStacksScalarFieldEnum | TechnicalsStacksScalarFieldEnum[]
  }

  /**
   * TechnicalsStacks findMany
   */
  export type TechnicalsStacksFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TechnicalsStacks
     */
    select?: TechnicalsStacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TechnicalsStacks
     */
    omit?: TechnicalsStacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TechnicalsStacksInclude<ExtArgs> | null
    /**
     * Filter, which TechnicalsStacks to fetch.
     */
    where?: TechnicalsStacksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TechnicalsStacks to fetch.
     */
    orderBy?: TechnicalsStacksOrderByWithRelationInput | TechnicalsStacksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TechnicalsStacks.
     */
    cursor?: TechnicalsStacksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TechnicalsStacks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TechnicalsStacks.
     */
    skip?: number
    distinct?: TechnicalsStacksScalarFieldEnum | TechnicalsStacksScalarFieldEnum[]
  }

  /**
   * TechnicalsStacks create
   */
  export type TechnicalsStacksCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TechnicalsStacks
     */
    select?: TechnicalsStacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TechnicalsStacks
     */
    omit?: TechnicalsStacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TechnicalsStacksInclude<ExtArgs> | null
    /**
     * The data needed to create a TechnicalsStacks.
     */
    data: XOR<TechnicalsStacksCreateInput, TechnicalsStacksUncheckedCreateInput>
  }

  /**
   * TechnicalsStacks createMany
   */
  export type TechnicalsStacksCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TechnicalsStacks.
     */
    data: TechnicalsStacksCreateManyInput | TechnicalsStacksCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TechnicalsStacks createManyAndReturn
   */
  export type TechnicalsStacksCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TechnicalsStacks
     */
    select?: TechnicalsStacksSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TechnicalsStacks
     */
    omit?: TechnicalsStacksOmit<ExtArgs> | null
    /**
     * The data used to create many TechnicalsStacks.
     */
    data: TechnicalsStacksCreateManyInput | TechnicalsStacksCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TechnicalsStacks update
   */
  export type TechnicalsStacksUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TechnicalsStacks
     */
    select?: TechnicalsStacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TechnicalsStacks
     */
    omit?: TechnicalsStacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TechnicalsStacksInclude<ExtArgs> | null
    /**
     * The data needed to update a TechnicalsStacks.
     */
    data: XOR<TechnicalsStacksUpdateInput, TechnicalsStacksUncheckedUpdateInput>
    /**
     * Choose, which TechnicalsStacks to update.
     */
    where: TechnicalsStacksWhereUniqueInput
  }

  /**
   * TechnicalsStacks updateMany
   */
  export type TechnicalsStacksUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TechnicalsStacks.
     */
    data: XOR<TechnicalsStacksUpdateManyMutationInput, TechnicalsStacksUncheckedUpdateManyInput>
    /**
     * Filter which TechnicalsStacks to update
     */
    where?: TechnicalsStacksWhereInput
    /**
     * Limit how many TechnicalsStacks to update.
     */
    limit?: number
  }

  /**
   * TechnicalsStacks updateManyAndReturn
   */
  export type TechnicalsStacksUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TechnicalsStacks
     */
    select?: TechnicalsStacksSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TechnicalsStacks
     */
    omit?: TechnicalsStacksOmit<ExtArgs> | null
    /**
     * The data used to update TechnicalsStacks.
     */
    data: XOR<TechnicalsStacksUpdateManyMutationInput, TechnicalsStacksUncheckedUpdateManyInput>
    /**
     * Filter which TechnicalsStacks to update
     */
    where?: TechnicalsStacksWhereInput
    /**
     * Limit how many TechnicalsStacks to update.
     */
    limit?: number
  }

  /**
   * TechnicalsStacks upsert
   */
  export type TechnicalsStacksUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TechnicalsStacks
     */
    select?: TechnicalsStacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TechnicalsStacks
     */
    omit?: TechnicalsStacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TechnicalsStacksInclude<ExtArgs> | null
    /**
     * The filter to search for the TechnicalsStacks to update in case it exists.
     */
    where: TechnicalsStacksWhereUniqueInput
    /**
     * In case the TechnicalsStacks found by the `where` argument doesn't exist, create a new TechnicalsStacks with this data.
     */
    create: XOR<TechnicalsStacksCreateInput, TechnicalsStacksUncheckedCreateInput>
    /**
     * In case the TechnicalsStacks was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TechnicalsStacksUpdateInput, TechnicalsStacksUncheckedUpdateInput>
  }

  /**
   * TechnicalsStacks delete
   */
  export type TechnicalsStacksDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TechnicalsStacks
     */
    select?: TechnicalsStacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TechnicalsStacks
     */
    omit?: TechnicalsStacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TechnicalsStacksInclude<ExtArgs> | null
    /**
     * Filter which TechnicalsStacks to delete.
     */
    where: TechnicalsStacksWhereUniqueInput
  }

  /**
   * TechnicalsStacks deleteMany
   */
  export type TechnicalsStacksDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TechnicalsStacks to delete
     */
    where?: TechnicalsStacksWhereInput
    /**
     * Limit how many TechnicalsStacks to delete.
     */
    limit?: number
  }

  /**
   * TechnicalsStacks.people
   */
  export type TechnicalsStacks$peopleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the People
     */
    select?: PeopleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the People
     */
    omit?: PeopleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeopleInclude<ExtArgs> | null
    where?: PeopleWhereInput
    orderBy?: PeopleOrderByWithRelationInput | PeopleOrderByWithRelationInput[]
    cursor?: PeopleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PeopleScalarFieldEnum | PeopleScalarFieldEnum[]
  }

  /**
   * TechnicalsStacks.contacts
   */
  export type TechnicalsStacks$contactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    where?: ContactWhereInput
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    cursor?: ContactWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * TechnicalsStacks without action
   */
  export type TechnicalsStacksDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TechnicalsStacks
     */
    select?: TechnicalsStacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TechnicalsStacks
     */
    omit?: TechnicalsStacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TechnicalsStacksInclude<ExtArgs> | null
  }


  /**
   * Model Price
   */

  export type AggregatePrice = {
    _count: PriceCountAggregateOutputType | null
    _avg: PriceAvgAggregateOutputType | null
    _sum: PriceSumAggregateOutputType | null
    _min: PriceMinAggregateOutputType | null
    _max: PriceMaxAggregateOutputType | null
  }

  export type PriceAvgAggregateOutputType = {
    id: number | null
    value: Decimal | null
    currency_type: number | null
  }

  export type PriceSumAggregateOutputType = {
    id: number | null
    value: Decimal | null
    currency_type: number | null
  }

  export type PriceMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    value: Decimal | null
    currency_type: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PriceMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    value: Decimal | null
    currency_type: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PriceCountAggregateOutputType = {
    id: number
    name: number
    description: number
    value: number
    currency_type: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PriceAvgAggregateInputType = {
    id?: true
    value?: true
    currency_type?: true
  }

  export type PriceSumAggregateInputType = {
    id?: true
    value?: true
    currency_type?: true
  }

  export type PriceMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    value?: true
    currency_type?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PriceMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    value?: true
    currency_type?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PriceCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    value?: true
    currency_type?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PriceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Price to aggregate.
     */
    where?: PriceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prices to fetch.
     */
    orderBy?: PriceOrderByWithRelationInput | PriceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PriceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Prices
    **/
    _count?: true | PriceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PriceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PriceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PriceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PriceMaxAggregateInputType
  }

  export type GetPriceAggregateType<T extends PriceAggregateArgs> = {
        [P in keyof T & keyof AggregatePrice]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePrice[P]>
      : GetScalarType<T[P], AggregatePrice[P]>
  }




  export type PriceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PriceWhereInput
    orderBy?: PriceOrderByWithAggregationInput | PriceOrderByWithAggregationInput[]
    by: PriceScalarFieldEnum[] | PriceScalarFieldEnum
    having?: PriceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PriceCountAggregateInputType | true
    _avg?: PriceAvgAggregateInputType
    _sum?: PriceSumAggregateInputType
    _min?: PriceMinAggregateInputType
    _max?: PriceMaxAggregateInputType
  }

  export type PriceGroupByOutputType = {
    id: number
    name: string
    description: string | null
    value: Decimal
    currency_type: number | null
    createdAt: Date | null
    updatedAt: Date | null
    _count: PriceCountAggregateOutputType | null
    _avg: PriceAvgAggregateOutputType | null
    _sum: PriceSumAggregateOutputType | null
    _min: PriceMinAggregateOutputType | null
    _max: PriceMaxAggregateOutputType | null
  }

  type GetPriceGroupByPayload<T extends PriceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PriceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PriceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PriceGroupByOutputType[P]>
            : GetScalarType<T[P], PriceGroupByOutputType[P]>
        }
      >
    >


  export type PriceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    value?: boolean
    currency_type?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    CurrencyType?: boolean | Price$CurrencyTypeArgs<ExtArgs>
  }, ExtArgs["result"]["price"]>

  export type PriceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    value?: boolean
    currency_type?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    CurrencyType?: boolean | Price$CurrencyTypeArgs<ExtArgs>
  }, ExtArgs["result"]["price"]>

  export type PriceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    value?: boolean
    currency_type?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    CurrencyType?: boolean | Price$CurrencyTypeArgs<ExtArgs>
  }, ExtArgs["result"]["price"]>

  export type PriceSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    value?: boolean
    currency_type?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PriceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "value" | "currency_type" | "createdAt" | "updatedAt", ExtArgs["result"]["price"]>
  export type PriceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CurrencyType?: boolean | Price$CurrencyTypeArgs<ExtArgs>
  }
  export type PriceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CurrencyType?: boolean | Price$CurrencyTypeArgs<ExtArgs>
  }
  export type PriceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CurrencyType?: boolean | Price$CurrencyTypeArgs<ExtArgs>
  }

  export type $PricePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Price"
    objects: {
      CurrencyType: Prisma.$CurrencyTypePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string | null
      value: Prisma.Decimal
      currency_type: number | null
      createdAt: Date | null
      updatedAt: Date | null
    }, ExtArgs["result"]["price"]>
    composites: {}
  }

  type PriceGetPayload<S extends boolean | null | undefined | PriceDefaultArgs> = $Result.GetResult<Prisma.$PricePayload, S>

  type PriceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PriceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PriceCountAggregateInputType | true
    }

  export interface PriceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Price'], meta: { name: 'Price' } }
    /**
     * Find zero or one Price that matches the filter.
     * @param {PriceFindUniqueArgs} args - Arguments to find a Price
     * @example
     * // Get one Price
     * const price = await prisma.price.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PriceFindUniqueArgs>(args: SelectSubset<T, PriceFindUniqueArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Price that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PriceFindUniqueOrThrowArgs} args - Arguments to find a Price
     * @example
     * // Get one Price
     * const price = await prisma.price.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PriceFindUniqueOrThrowArgs>(args: SelectSubset<T, PriceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Price that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceFindFirstArgs} args - Arguments to find a Price
     * @example
     * // Get one Price
     * const price = await prisma.price.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PriceFindFirstArgs>(args?: SelectSubset<T, PriceFindFirstArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Price that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceFindFirstOrThrowArgs} args - Arguments to find a Price
     * @example
     * // Get one Price
     * const price = await prisma.price.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PriceFindFirstOrThrowArgs>(args?: SelectSubset<T, PriceFindFirstOrThrowArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Prices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Prices
     * const prices = await prisma.price.findMany()
     * 
     * // Get first 10 Prices
     * const prices = await prisma.price.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const priceWithIdOnly = await prisma.price.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PriceFindManyArgs>(args?: SelectSubset<T, PriceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Price.
     * @param {PriceCreateArgs} args - Arguments to create a Price.
     * @example
     * // Create one Price
     * const Price = await prisma.price.create({
     *   data: {
     *     // ... data to create a Price
     *   }
     * })
     * 
     */
    create<T extends PriceCreateArgs>(args: SelectSubset<T, PriceCreateArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Prices.
     * @param {PriceCreateManyArgs} args - Arguments to create many Prices.
     * @example
     * // Create many Prices
     * const price = await prisma.price.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PriceCreateManyArgs>(args?: SelectSubset<T, PriceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Prices and returns the data saved in the database.
     * @param {PriceCreateManyAndReturnArgs} args - Arguments to create many Prices.
     * @example
     * // Create many Prices
     * const price = await prisma.price.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Prices and only return the `id`
     * const priceWithIdOnly = await prisma.price.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PriceCreateManyAndReturnArgs>(args?: SelectSubset<T, PriceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Price.
     * @param {PriceDeleteArgs} args - Arguments to delete one Price.
     * @example
     * // Delete one Price
     * const Price = await prisma.price.delete({
     *   where: {
     *     // ... filter to delete one Price
     *   }
     * })
     * 
     */
    delete<T extends PriceDeleteArgs>(args: SelectSubset<T, PriceDeleteArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Price.
     * @param {PriceUpdateArgs} args - Arguments to update one Price.
     * @example
     * // Update one Price
     * const price = await prisma.price.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PriceUpdateArgs>(args: SelectSubset<T, PriceUpdateArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Prices.
     * @param {PriceDeleteManyArgs} args - Arguments to filter Prices to delete.
     * @example
     * // Delete a few Prices
     * const { count } = await prisma.price.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PriceDeleteManyArgs>(args?: SelectSubset<T, PriceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Prices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Prices
     * const price = await prisma.price.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PriceUpdateManyArgs>(args: SelectSubset<T, PriceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Prices and returns the data updated in the database.
     * @param {PriceUpdateManyAndReturnArgs} args - Arguments to update many Prices.
     * @example
     * // Update many Prices
     * const price = await prisma.price.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Prices and only return the `id`
     * const priceWithIdOnly = await prisma.price.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PriceUpdateManyAndReturnArgs>(args: SelectSubset<T, PriceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Price.
     * @param {PriceUpsertArgs} args - Arguments to update or create a Price.
     * @example
     * // Update or create a Price
     * const price = await prisma.price.upsert({
     *   create: {
     *     // ... data to create a Price
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Price we want to update
     *   }
     * })
     */
    upsert<T extends PriceUpsertArgs>(args: SelectSubset<T, PriceUpsertArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Prices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceCountArgs} args - Arguments to filter Prices to count.
     * @example
     * // Count the number of Prices
     * const count = await prisma.price.count({
     *   where: {
     *     // ... the filter for the Prices we want to count
     *   }
     * })
    **/
    count<T extends PriceCountArgs>(
      args?: Subset<T, PriceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PriceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Price.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PriceAggregateArgs>(args: Subset<T, PriceAggregateArgs>): Prisma.PrismaPromise<GetPriceAggregateType<T>>

    /**
     * Group by Price.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PriceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PriceGroupByArgs['orderBy'] }
        : { orderBy?: PriceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PriceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPriceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Price model
   */
  readonly fields: PriceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Price.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PriceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    CurrencyType<T extends Price$CurrencyTypeArgs<ExtArgs> = {}>(args?: Subset<T, Price$CurrencyTypeArgs<ExtArgs>>): Prisma__CurrencyTypeClient<$Result.GetResult<Prisma.$CurrencyTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Price model
   */
  interface PriceFieldRefs {
    readonly id: FieldRef<"Price", 'Int'>
    readonly name: FieldRef<"Price", 'String'>
    readonly description: FieldRef<"Price", 'String'>
    readonly value: FieldRef<"Price", 'Decimal'>
    readonly currency_type: FieldRef<"Price", 'Int'>
    readonly createdAt: FieldRef<"Price", 'DateTime'>
    readonly updatedAt: FieldRef<"Price", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Price findUnique
   */
  export type PriceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Price
     */
    omit?: PriceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * Filter, which Price to fetch.
     */
    where: PriceWhereUniqueInput
  }

  /**
   * Price findUniqueOrThrow
   */
  export type PriceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Price
     */
    omit?: PriceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * Filter, which Price to fetch.
     */
    where: PriceWhereUniqueInput
  }

  /**
   * Price findFirst
   */
  export type PriceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Price
     */
    omit?: PriceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * Filter, which Price to fetch.
     */
    where?: PriceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prices to fetch.
     */
    orderBy?: PriceOrderByWithRelationInput | PriceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Prices.
     */
    cursor?: PriceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Prices.
     */
    distinct?: PriceScalarFieldEnum | PriceScalarFieldEnum[]
  }

  /**
   * Price findFirstOrThrow
   */
  export type PriceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Price
     */
    omit?: PriceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * Filter, which Price to fetch.
     */
    where?: PriceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prices to fetch.
     */
    orderBy?: PriceOrderByWithRelationInput | PriceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Prices.
     */
    cursor?: PriceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Prices.
     */
    distinct?: PriceScalarFieldEnum | PriceScalarFieldEnum[]
  }

  /**
   * Price findMany
   */
  export type PriceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Price
     */
    omit?: PriceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * Filter, which Prices to fetch.
     */
    where?: PriceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prices to fetch.
     */
    orderBy?: PriceOrderByWithRelationInput | PriceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Prices.
     */
    cursor?: PriceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prices.
     */
    skip?: number
    distinct?: PriceScalarFieldEnum | PriceScalarFieldEnum[]
  }

  /**
   * Price create
   */
  export type PriceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Price
     */
    omit?: PriceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * The data needed to create a Price.
     */
    data: XOR<PriceCreateInput, PriceUncheckedCreateInput>
  }

  /**
   * Price createMany
   */
  export type PriceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Prices.
     */
    data: PriceCreateManyInput | PriceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Price createManyAndReturn
   */
  export type PriceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Price
     */
    omit?: PriceOmit<ExtArgs> | null
    /**
     * The data used to create many Prices.
     */
    data: PriceCreateManyInput | PriceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Price update
   */
  export type PriceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Price
     */
    omit?: PriceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * The data needed to update a Price.
     */
    data: XOR<PriceUpdateInput, PriceUncheckedUpdateInput>
    /**
     * Choose, which Price to update.
     */
    where: PriceWhereUniqueInput
  }

  /**
   * Price updateMany
   */
  export type PriceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Prices.
     */
    data: XOR<PriceUpdateManyMutationInput, PriceUncheckedUpdateManyInput>
    /**
     * Filter which Prices to update
     */
    where?: PriceWhereInput
    /**
     * Limit how many Prices to update.
     */
    limit?: number
  }

  /**
   * Price updateManyAndReturn
   */
  export type PriceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Price
     */
    omit?: PriceOmit<ExtArgs> | null
    /**
     * The data used to update Prices.
     */
    data: XOR<PriceUpdateManyMutationInput, PriceUncheckedUpdateManyInput>
    /**
     * Filter which Prices to update
     */
    where?: PriceWhereInput
    /**
     * Limit how many Prices to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Price upsert
   */
  export type PriceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Price
     */
    omit?: PriceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * The filter to search for the Price to update in case it exists.
     */
    where: PriceWhereUniqueInput
    /**
     * In case the Price found by the `where` argument doesn't exist, create a new Price with this data.
     */
    create: XOR<PriceCreateInput, PriceUncheckedCreateInput>
    /**
     * In case the Price was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PriceUpdateInput, PriceUncheckedUpdateInput>
  }

  /**
   * Price delete
   */
  export type PriceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Price
     */
    omit?: PriceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * Filter which Price to delete.
     */
    where: PriceWhereUniqueInput
  }

  /**
   * Price deleteMany
   */
  export type PriceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Prices to delete
     */
    where?: PriceWhereInput
    /**
     * Limit how many Prices to delete.
     */
    limit?: number
  }

  /**
   * Price.CurrencyType
   */
  export type Price$CurrencyTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyType
     */
    select?: CurrencyTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyType
     */
    omit?: CurrencyTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyTypeInclude<ExtArgs> | null
    where?: CurrencyTypeWhereInput
  }

  /**
   * Price without action
   */
  export type PriceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Price
     */
    omit?: PriceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
  }


  /**
   * Model People
   */

  export type AggregatePeople = {
    _count: PeopleCountAggregateOutputType | null
    _avg: PeopleAvgAggregateOutputType | null
    _sum: PeopleSumAggregateOutputType | null
    _min: PeopleMinAggregateOutputType | null
    _max: PeopleMaxAggregateOutputType | null
  }

  export type PeopleAvgAggregateOutputType = {
    id: number | null
    roleId: number | null
    clientId: number | null
    jobTitleId: number | null
    seniorityId: number | null
    technicalStacksId: number | null
    afpInstitutionId: number | null
    healthInstitutionId: number | null
    salaryCurrencyTypeId: number | null
    netSalary: Decimal | null
    feeCurrencyTypeId: number | null
    serviceFee: Decimal | null
    billableDay: number | null
    laptopCurrencyTypeId: number | null
    laptopBonus: Decimal | null
  }

  export type PeopleSumAggregateOutputType = {
    id: number | null
    roleId: number | null
    clientId: number | null
    jobTitleId: number | null
    seniorityId: number | null
    technicalStacksId: number | null
    afpInstitutionId: number | null
    healthInstitutionId: number | null
    salaryCurrencyTypeId: number | null
    netSalary: Decimal | null
    feeCurrencyTypeId: number | null
    serviceFee: Decimal | null
    billableDay: number | null
    laptopCurrencyTypeId: number | null
    laptopBonus: Decimal | null
  }

  export type PeopleMinAggregateOutputType = {
    id: number | null
    name: string | null
    lastName: string | null
    dni: string | null
    corporateName: string | null
    corporateEmail: string | null
    contractType: string | null
    contractStart: Date | null
    contractEnd: Date | null
    contractClientEnd: Date | null
    roleId: number | null
    isActive: boolean | null
    causal: string | null
    reason: string | null
    clientId: number | null
    remote: string | null
    jobTitleId: number | null
    seniorityId: number | null
    technicalStacksId: number | null
    salesManager: string | null
    searchManager: string | null
    deliveryManager: string | null
    administrativeArea: string | null
    leader: string | null
    leaderMail: string | null
    leaderPhone: string | null
    birth: Date | null
    phone: string | null
    email: string | null
    address: string | null
    sublocality: string | null
    locality: string | null
    country: string | null
    nationality: string | null
    afpInstitutionId: number | null
    healthInstitutionId: number | null
    bank: string | null
    accountNumber: string | null
    salaryCurrencyTypeId: number | null
    netSalary: Decimal | null
    feeCurrencyTypeId: number | null
    serviceFee: Decimal | null
    fee: boolean | null
    billableDay: number | null
    laptopCurrencyTypeId: number | null
    laptopBonus: Decimal | null
    comment: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PeopleMaxAggregateOutputType = {
    id: number | null
    name: string | null
    lastName: string | null
    dni: string | null
    corporateName: string | null
    corporateEmail: string | null
    contractType: string | null
    contractStart: Date | null
    contractEnd: Date | null
    contractClientEnd: Date | null
    roleId: number | null
    isActive: boolean | null
    causal: string | null
    reason: string | null
    clientId: number | null
    remote: string | null
    jobTitleId: number | null
    seniorityId: number | null
    technicalStacksId: number | null
    salesManager: string | null
    searchManager: string | null
    deliveryManager: string | null
    administrativeArea: string | null
    leader: string | null
    leaderMail: string | null
    leaderPhone: string | null
    birth: Date | null
    phone: string | null
    email: string | null
    address: string | null
    sublocality: string | null
    locality: string | null
    country: string | null
    nationality: string | null
    afpInstitutionId: number | null
    healthInstitutionId: number | null
    bank: string | null
    accountNumber: string | null
    salaryCurrencyTypeId: number | null
    netSalary: Decimal | null
    feeCurrencyTypeId: number | null
    serviceFee: Decimal | null
    fee: boolean | null
    billableDay: number | null
    laptopCurrencyTypeId: number | null
    laptopBonus: Decimal | null
    comment: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PeopleCountAggregateOutputType = {
    id: number
    name: number
    lastName: number
    dni: number
    corporateName: number
    corporateEmail: number
    contractType: number
    contractStart: number
    contractEnd: number
    contractClientEnd: number
    roleId: number
    isActive: number
    causal: number
    reason: number
    clientId: number
    remote: number
    jobTitleId: number
    seniorityId: number
    technicalStacksId: number
    salesManager: number
    searchManager: number
    deliveryManager: number
    administrativeArea: number
    leader: number
    leaderMail: number
    leaderPhone: number
    birth: number
    phone: number
    email: number
    address: number
    sublocality: number
    locality: number
    country: number
    nationality: number
    afpInstitutionId: number
    healthInstitutionId: number
    bank: number
    accountNumber: number
    salaryCurrencyTypeId: number
    netSalary: number
    feeCurrencyTypeId: number
    serviceFee: number
    fee: number
    billableDay: number
    laptopCurrencyTypeId: number
    laptopBonus: number
    comment: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PeopleAvgAggregateInputType = {
    id?: true
    roleId?: true
    clientId?: true
    jobTitleId?: true
    seniorityId?: true
    technicalStacksId?: true
    afpInstitutionId?: true
    healthInstitutionId?: true
    salaryCurrencyTypeId?: true
    netSalary?: true
    feeCurrencyTypeId?: true
    serviceFee?: true
    billableDay?: true
    laptopCurrencyTypeId?: true
    laptopBonus?: true
  }

  export type PeopleSumAggregateInputType = {
    id?: true
    roleId?: true
    clientId?: true
    jobTitleId?: true
    seniorityId?: true
    technicalStacksId?: true
    afpInstitutionId?: true
    healthInstitutionId?: true
    salaryCurrencyTypeId?: true
    netSalary?: true
    feeCurrencyTypeId?: true
    serviceFee?: true
    billableDay?: true
    laptopCurrencyTypeId?: true
    laptopBonus?: true
  }

  export type PeopleMinAggregateInputType = {
    id?: true
    name?: true
    lastName?: true
    dni?: true
    corporateName?: true
    corporateEmail?: true
    contractType?: true
    contractStart?: true
    contractEnd?: true
    contractClientEnd?: true
    roleId?: true
    isActive?: true
    causal?: true
    reason?: true
    clientId?: true
    remote?: true
    jobTitleId?: true
    seniorityId?: true
    technicalStacksId?: true
    salesManager?: true
    searchManager?: true
    deliveryManager?: true
    administrativeArea?: true
    leader?: true
    leaderMail?: true
    leaderPhone?: true
    birth?: true
    phone?: true
    email?: true
    address?: true
    sublocality?: true
    locality?: true
    country?: true
    nationality?: true
    afpInstitutionId?: true
    healthInstitutionId?: true
    bank?: true
    accountNumber?: true
    salaryCurrencyTypeId?: true
    netSalary?: true
    feeCurrencyTypeId?: true
    serviceFee?: true
    fee?: true
    billableDay?: true
    laptopCurrencyTypeId?: true
    laptopBonus?: true
    comment?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PeopleMaxAggregateInputType = {
    id?: true
    name?: true
    lastName?: true
    dni?: true
    corporateName?: true
    corporateEmail?: true
    contractType?: true
    contractStart?: true
    contractEnd?: true
    contractClientEnd?: true
    roleId?: true
    isActive?: true
    causal?: true
    reason?: true
    clientId?: true
    remote?: true
    jobTitleId?: true
    seniorityId?: true
    technicalStacksId?: true
    salesManager?: true
    searchManager?: true
    deliveryManager?: true
    administrativeArea?: true
    leader?: true
    leaderMail?: true
    leaderPhone?: true
    birth?: true
    phone?: true
    email?: true
    address?: true
    sublocality?: true
    locality?: true
    country?: true
    nationality?: true
    afpInstitutionId?: true
    healthInstitutionId?: true
    bank?: true
    accountNumber?: true
    salaryCurrencyTypeId?: true
    netSalary?: true
    feeCurrencyTypeId?: true
    serviceFee?: true
    fee?: true
    billableDay?: true
    laptopCurrencyTypeId?: true
    laptopBonus?: true
    comment?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PeopleCountAggregateInputType = {
    id?: true
    name?: true
    lastName?: true
    dni?: true
    corporateName?: true
    corporateEmail?: true
    contractType?: true
    contractStart?: true
    contractEnd?: true
    contractClientEnd?: true
    roleId?: true
    isActive?: true
    causal?: true
    reason?: true
    clientId?: true
    remote?: true
    jobTitleId?: true
    seniorityId?: true
    technicalStacksId?: true
    salesManager?: true
    searchManager?: true
    deliveryManager?: true
    administrativeArea?: true
    leader?: true
    leaderMail?: true
    leaderPhone?: true
    birth?: true
    phone?: true
    email?: true
    address?: true
    sublocality?: true
    locality?: true
    country?: true
    nationality?: true
    afpInstitutionId?: true
    healthInstitutionId?: true
    bank?: true
    accountNumber?: true
    salaryCurrencyTypeId?: true
    netSalary?: true
    feeCurrencyTypeId?: true
    serviceFee?: true
    fee?: true
    billableDay?: true
    laptopCurrencyTypeId?: true
    laptopBonus?: true
    comment?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PeopleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which People to aggregate.
     */
    where?: PeopleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of People to fetch.
     */
    orderBy?: PeopleOrderByWithRelationInput | PeopleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PeopleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` People from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` People.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned People
    **/
    _count?: true | PeopleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PeopleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PeopleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PeopleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PeopleMaxAggregateInputType
  }

  export type GetPeopleAggregateType<T extends PeopleAggregateArgs> = {
        [P in keyof T & keyof AggregatePeople]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePeople[P]>
      : GetScalarType<T[P], AggregatePeople[P]>
  }




  export type PeopleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PeopleWhereInput
    orderBy?: PeopleOrderByWithAggregationInput | PeopleOrderByWithAggregationInput[]
    by: PeopleScalarFieldEnum[] | PeopleScalarFieldEnum
    having?: PeopleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PeopleCountAggregateInputType | true
    _avg?: PeopleAvgAggregateInputType
    _sum?: PeopleSumAggregateInputType
    _min?: PeopleMinAggregateInputType
    _max?: PeopleMaxAggregateInputType
  }

  export type PeopleGroupByOutputType = {
    id: number
    name: string
    lastName: string
    dni: string | null
    corporateName: string | null
    corporateEmail: string | null
    contractType: string | null
    contractStart: Date | null
    contractEnd: Date | null
    contractClientEnd: Date | null
    roleId: number | null
    isActive: boolean | null
    causal: string | null
    reason: string | null
    clientId: number | null
    remote: string | null
    jobTitleId: number | null
    seniorityId: number | null
    technicalStacksId: number | null
    salesManager: string | null
    searchManager: string | null
    deliveryManager: string | null
    administrativeArea: string | null
    leader: string | null
    leaderMail: string | null
    leaderPhone: string | null
    birth: Date | null
    phone: string | null
    email: string | null
    address: string | null
    sublocality: string | null
    locality: string | null
    country: string | null
    nationality: string | null
    afpInstitutionId: number | null
    healthInstitutionId: number | null
    bank: string | null
    accountNumber: string | null
    salaryCurrencyTypeId: number | null
    netSalary: Decimal | null
    feeCurrencyTypeId: number | null
    serviceFee: Decimal | null
    fee: boolean | null
    billableDay: number | null
    laptopCurrencyTypeId: number | null
    laptopBonus: Decimal | null
    comment: string | null
    createdAt: Date | null
    updatedAt: Date | null
    _count: PeopleCountAggregateOutputType | null
    _avg: PeopleAvgAggregateOutputType | null
    _sum: PeopleSumAggregateOutputType | null
    _min: PeopleMinAggregateOutputType | null
    _max: PeopleMaxAggregateOutputType | null
  }

  type GetPeopleGroupByPayload<T extends PeopleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PeopleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PeopleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PeopleGroupByOutputType[P]>
            : GetScalarType<T[P], PeopleGroupByOutputType[P]>
        }
      >
    >


  export type PeopleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    lastName?: boolean
    dni?: boolean
    corporateName?: boolean
    corporateEmail?: boolean
    contractType?: boolean
    contractStart?: boolean
    contractEnd?: boolean
    contractClientEnd?: boolean
    roleId?: boolean
    isActive?: boolean
    causal?: boolean
    reason?: boolean
    clientId?: boolean
    remote?: boolean
    jobTitleId?: boolean
    seniorityId?: boolean
    technicalStacksId?: boolean
    salesManager?: boolean
    searchManager?: boolean
    deliveryManager?: boolean
    administrativeArea?: boolean
    leader?: boolean
    leaderMail?: boolean
    leaderPhone?: boolean
    birth?: boolean
    phone?: boolean
    email?: boolean
    address?: boolean
    sublocality?: boolean
    locality?: boolean
    country?: boolean
    nationality?: boolean
    afpInstitutionId?: boolean
    healthInstitutionId?: boolean
    bank?: boolean
    accountNumber?: boolean
    salaryCurrencyTypeId?: boolean
    netSalary?: boolean
    feeCurrencyTypeId?: boolean
    serviceFee?: boolean
    fee?: boolean
    billableDay?: boolean
    laptopCurrencyTypeId?: boolean
    laptopBonus?: boolean
    comment?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    leaveDays?: boolean | People$leaveDaysArgs<ExtArgs>
    afpInstitution?: boolean | People$afpInstitutionArgs<ExtArgs>
    client?: boolean | People$clientArgs<ExtArgs>
    salaryCurrencyType?: boolean | People$salaryCurrencyTypeArgs<ExtArgs>
    feeCurrencyType?: boolean | People$feeCurrencyTypeArgs<ExtArgs>
    laptopCurrencyType?: boolean | People$laptopCurrencyTypeArgs<ExtArgs>
    healthInstitution?: boolean | People$healthInstitutionArgs<ExtArgs>
    jobTitle?: boolean | People$jobTitleArgs<ExtArgs>
    role?: boolean | People$roleArgs<ExtArgs>
    seniority?: boolean | People$seniorityArgs<ExtArgs>
    technicalStacks?: boolean | People$technicalStacksArgs<ExtArgs>
    preInvoiceDetails?: boolean | People$preInvoiceDetailsArgs<ExtArgs>
    _count?: boolean | PeopleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["people"]>

  export type PeopleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    lastName?: boolean
    dni?: boolean
    corporateName?: boolean
    corporateEmail?: boolean
    contractType?: boolean
    contractStart?: boolean
    contractEnd?: boolean
    contractClientEnd?: boolean
    roleId?: boolean
    isActive?: boolean
    causal?: boolean
    reason?: boolean
    clientId?: boolean
    remote?: boolean
    jobTitleId?: boolean
    seniorityId?: boolean
    technicalStacksId?: boolean
    salesManager?: boolean
    searchManager?: boolean
    deliveryManager?: boolean
    administrativeArea?: boolean
    leader?: boolean
    leaderMail?: boolean
    leaderPhone?: boolean
    birth?: boolean
    phone?: boolean
    email?: boolean
    address?: boolean
    sublocality?: boolean
    locality?: boolean
    country?: boolean
    nationality?: boolean
    afpInstitutionId?: boolean
    healthInstitutionId?: boolean
    bank?: boolean
    accountNumber?: boolean
    salaryCurrencyTypeId?: boolean
    netSalary?: boolean
    feeCurrencyTypeId?: boolean
    serviceFee?: boolean
    fee?: boolean
    billableDay?: boolean
    laptopCurrencyTypeId?: boolean
    laptopBonus?: boolean
    comment?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    afpInstitution?: boolean | People$afpInstitutionArgs<ExtArgs>
    client?: boolean | People$clientArgs<ExtArgs>
    salaryCurrencyType?: boolean | People$salaryCurrencyTypeArgs<ExtArgs>
    feeCurrencyType?: boolean | People$feeCurrencyTypeArgs<ExtArgs>
    laptopCurrencyType?: boolean | People$laptopCurrencyTypeArgs<ExtArgs>
    healthInstitution?: boolean | People$healthInstitutionArgs<ExtArgs>
    jobTitle?: boolean | People$jobTitleArgs<ExtArgs>
    role?: boolean | People$roleArgs<ExtArgs>
    seniority?: boolean | People$seniorityArgs<ExtArgs>
    technicalStacks?: boolean | People$technicalStacksArgs<ExtArgs>
  }, ExtArgs["result"]["people"]>

  export type PeopleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    lastName?: boolean
    dni?: boolean
    corporateName?: boolean
    corporateEmail?: boolean
    contractType?: boolean
    contractStart?: boolean
    contractEnd?: boolean
    contractClientEnd?: boolean
    roleId?: boolean
    isActive?: boolean
    causal?: boolean
    reason?: boolean
    clientId?: boolean
    remote?: boolean
    jobTitleId?: boolean
    seniorityId?: boolean
    technicalStacksId?: boolean
    salesManager?: boolean
    searchManager?: boolean
    deliveryManager?: boolean
    administrativeArea?: boolean
    leader?: boolean
    leaderMail?: boolean
    leaderPhone?: boolean
    birth?: boolean
    phone?: boolean
    email?: boolean
    address?: boolean
    sublocality?: boolean
    locality?: boolean
    country?: boolean
    nationality?: boolean
    afpInstitutionId?: boolean
    healthInstitutionId?: boolean
    bank?: boolean
    accountNumber?: boolean
    salaryCurrencyTypeId?: boolean
    netSalary?: boolean
    feeCurrencyTypeId?: boolean
    serviceFee?: boolean
    fee?: boolean
    billableDay?: boolean
    laptopCurrencyTypeId?: boolean
    laptopBonus?: boolean
    comment?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    afpInstitution?: boolean | People$afpInstitutionArgs<ExtArgs>
    client?: boolean | People$clientArgs<ExtArgs>
    salaryCurrencyType?: boolean | People$salaryCurrencyTypeArgs<ExtArgs>
    feeCurrencyType?: boolean | People$feeCurrencyTypeArgs<ExtArgs>
    laptopCurrencyType?: boolean | People$laptopCurrencyTypeArgs<ExtArgs>
    healthInstitution?: boolean | People$healthInstitutionArgs<ExtArgs>
    jobTitle?: boolean | People$jobTitleArgs<ExtArgs>
    role?: boolean | People$roleArgs<ExtArgs>
    seniority?: boolean | People$seniorityArgs<ExtArgs>
    technicalStacks?: boolean | People$technicalStacksArgs<ExtArgs>
  }, ExtArgs["result"]["people"]>

  export type PeopleSelectScalar = {
    id?: boolean
    name?: boolean
    lastName?: boolean
    dni?: boolean
    corporateName?: boolean
    corporateEmail?: boolean
    contractType?: boolean
    contractStart?: boolean
    contractEnd?: boolean
    contractClientEnd?: boolean
    roleId?: boolean
    isActive?: boolean
    causal?: boolean
    reason?: boolean
    clientId?: boolean
    remote?: boolean
    jobTitleId?: boolean
    seniorityId?: boolean
    technicalStacksId?: boolean
    salesManager?: boolean
    searchManager?: boolean
    deliveryManager?: boolean
    administrativeArea?: boolean
    leader?: boolean
    leaderMail?: boolean
    leaderPhone?: boolean
    birth?: boolean
    phone?: boolean
    email?: boolean
    address?: boolean
    sublocality?: boolean
    locality?: boolean
    country?: boolean
    nationality?: boolean
    afpInstitutionId?: boolean
    healthInstitutionId?: boolean
    bank?: boolean
    accountNumber?: boolean
    salaryCurrencyTypeId?: boolean
    netSalary?: boolean
    feeCurrencyTypeId?: boolean
    serviceFee?: boolean
    fee?: boolean
    billableDay?: boolean
    laptopCurrencyTypeId?: boolean
    laptopBonus?: boolean
    comment?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PeopleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "lastName" | "dni" | "corporateName" | "corporateEmail" | "contractType" | "contractStart" | "contractEnd" | "contractClientEnd" | "roleId" | "isActive" | "causal" | "reason" | "clientId" | "remote" | "jobTitleId" | "seniorityId" | "technicalStacksId" | "salesManager" | "searchManager" | "deliveryManager" | "administrativeArea" | "leader" | "leaderMail" | "leaderPhone" | "birth" | "phone" | "email" | "address" | "sublocality" | "locality" | "country" | "nationality" | "afpInstitutionId" | "healthInstitutionId" | "bank" | "accountNumber" | "salaryCurrencyTypeId" | "netSalary" | "feeCurrencyTypeId" | "serviceFee" | "fee" | "billableDay" | "laptopCurrencyTypeId" | "laptopBonus" | "comment" | "createdAt" | "updatedAt", ExtArgs["result"]["people"]>
  export type PeopleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    leaveDays?: boolean | People$leaveDaysArgs<ExtArgs>
    afpInstitution?: boolean | People$afpInstitutionArgs<ExtArgs>
    client?: boolean | People$clientArgs<ExtArgs>
    salaryCurrencyType?: boolean | People$salaryCurrencyTypeArgs<ExtArgs>
    feeCurrencyType?: boolean | People$feeCurrencyTypeArgs<ExtArgs>
    laptopCurrencyType?: boolean | People$laptopCurrencyTypeArgs<ExtArgs>
    healthInstitution?: boolean | People$healthInstitutionArgs<ExtArgs>
    jobTitle?: boolean | People$jobTitleArgs<ExtArgs>
    role?: boolean | People$roleArgs<ExtArgs>
    seniority?: boolean | People$seniorityArgs<ExtArgs>
    technicalStacks?: boolean | People$technicalStacksArgs<ExtArgs>
    preInvoiceDetails?: boolean | People$preInvoiceDetailsArgs<ExtArgs>
    _count?: boolean | PeopleCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PeopleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    afpInstitution?: boolean | People$afpInstitutionArgs<ExtArgs>
    client?: boolean | People$clientArgs<ExtArgs>
    salaryCurrencyType?: boolean | People$salaryCurrencyTypeArgs<ExtArgs>
    feeCurrencyType?: boolean | People$feeCurrencyTypeArgs<ExtArgs>
    laptopCurrencyType?: boolean | People$laptopCurrencyTypeArgs<ExtArgs>
    healthInstitution?: boolean | People$healthInstitutionArgs<ExtArgs>
    jobTitle?: boolean | People$jobTitleArgs<ExtArgs>
    role?: boolean | People$roleArgs<ExtArgs>
    seniority?: boolean | People$seniorityArgs<ExtArgs>
    technicalStacks?: boolean | People$technicalStacksArgs<ExtArgs>
  }
  export type PeopleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    afpInstitution?: boolean | People$afpInstitutionArgs<ExtArgs>
    client?: boolean | People$clientArgs<ExtArgs>
    salaryCurrencyType?: boolean | People$salaryCurrencyTypeArgs<ExtArgs>
    feeCurrencyType?: boolean | People$feeCurrencyTypeArgs<ExtArgs>
    laptopCurrencyType?: boolean | People$laptopCurrencyTypeArgs<ExtArgs>
    healthInstitution?: boolean | People$healthInstitutionArgs<ExtArgs>
    jobTitle?: boolean | People$jobTitleArgs<ExtArgs>
    role?: boolean | People$roleArgs<ExtArgs>
    seniority?: boolean | People$seniorityArgs<ExtArgs>
    technicalStacks?: boolean | People$technicalStacksArgs<ExtArgs>
  }

  export type $PeoplePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "People"
    objects: {
      leaveDays: Prisma.$LeaveDaysPayload<ExtArgs>[]
      afpInstitution: Prisma.$AFPInstitutionPayload<ExtArgs> | null
      client: Prisma.$ClientPayload<ExtArgs> | null
      salaryCurrencyType: Prisma.$CurrencyTypePayload<ExtArgs> | null
      feeCurrencyType: Prisma.$CurrencyTypePayload<ExtArgs> | null
      laptopCurrencyType: Prisma.$CurrencyTypePayload<ExtArgs> | null
      healthInstitution: Prisma.$HealthInstitutionPayload<ExtArgs> | null
      jobTitle: Prisma.$JobTitlePayload<ExtArgs> | null
      role: Prisma.$RolePayload<ExtArgs> | null
      seniority: Prisma.$SeniorityPayload<ExtArgs> | null
      technicalStacks: Prisma.$TechnicalsStacksPayload<ExtArgs> | null
      preInvoiceDetails: Prisma.$PreInvoiceDetailPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      lastName: string
      dni: string | null
      corporateName: string | null
      corporateEmail: string | null
      contractType: string | null
      contractStart: Date | null
      contractEnd: Date | null
      contractClientEnd: Date | null
      roleId: number | null
      isActive: boolean | null
      causal: string | null
      reason: string | null
      clientId: number | null
      remote: string | null
      jobTitleId: number | null
      seniorityId: number | null
      technicalStacksId: number | null
      salesManager: string | null
      searchManager: string | null
      deliveryManager: string | null
      administrativeArea: string | null
      leader: string | null
      leaderMail: string | null
      leaderPhone: string | null
      birth: Date | null
      phone: string | null
      email: string | null
      address: string | null
      sublocality: string | null
      locality: string | null
      country: string | null
      nationality: string | null
      afpInstitutionId: number | null
      healthInstitutionId: number | null
      bank: string | null
      accountNumber: string | null
      salaryCurrencyTypeId: number | null
      netSalary: Prisma.Decimal | null
      feeCurrencyTypeId: number | null
      serviceFee: Prisma.Decimal | null
      fee: boolean | null
      billableDay: number | null
      laptopCurrencyTypeId: number | null
      laptopBonus: Prisma.Decimal | null
      comment: string | null
      createdAt: Date | null
      updatedAt: Date | null
    }, ExtArgs["result"]["people"]>
    composites: {}
  }

  type PeopleGetPayload<S extends boolean | null | undefined | PeopleDefaultArgs> = $Result.GetResult<Prisma.$PeoplePayload, S>

  type PeopleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PeopleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PeopleCountAggregateInputType | true
    }

  export interface PeopleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['People'], meta: { name: 'People' } }
    /**
     * Find zero or one People that matches the filter.
     * @param {PeopleFindUniqueArgs} args - Arguments to find a People
     * @example
     * // Get one People
     * const people = await prisma.people.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PeopleFindUniqueArgs>(args: SelectSubset<T, PeopleFindUniqueArgs<ExtArgs>>): Prisma__PeopleClient<$Result.GetResult<Prisma.$PeoplePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one People that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PeopleFindUniqueOrThrowArgs} args - Arguments to find a People
     * @example
     * // Get one People
     * const people = await prisma.people.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PeopleFindUniqueOrThrowArgs>(args: SelectSubset<T, PeopleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PeopleClient<$Result.GetResult<Prisma.$PeoplePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first People that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PeopleFindFirstArgs} args - Arguments to find a People
     * @example
     * // Get one People
     * const people = await prisma.people.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PeopleFindFirstArgs>(args?: SelectSubset<T, PeopleFindFirstArgs<ExtArgs>>): Prisma__PeopleClient<$Result.GetResult<Prisma.$PeoplePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first People that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PeopleFindFirstOrThrowArgs} args - Arguments to find a People
     * @example
     * // Get one People
     * const people = await prisma.people.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PeopleFindFirstOrThrowArgs>(args?: SelectSubset<T, PeopleFindFirstOrThrowArgs<ExtArgs>>): Prisma__PeopleClient<$Result.GetResult<Prisma.$PeoplePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more People that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PeopleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all People
     * const people = await prisma.people.findMany()
     * 
     * // Get first 10 People
     * const people = await prisma.people.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const peopleWithIdOnly = await prisma.people.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PeopleFindManyArgs>(args?: SelectSubset<T, PeopleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PeoplePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a People.
     * @param {PeopleCreateArgs} args - Arguments to create a People.
     * @example
     * // Create one People
     * const People = await prisma.people.create({
     *   data: {
     *     // ... data to create a People
     *   }
     * })
     * 
     */
    create<T extends PeopleCreateArgs>(args: SelectSubset<T, PeopleCreateArgs<ExtArgs>>): Prisma__PeopleClient<$Result.GetResult<Prisma.$PeoplePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many People.
     * @param {PeopleCreateManyArgs} args - Arguments to create many People.
     * @example
     * // Create many People
     * const people = await prisma.people.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PeopleCreateManyArgs>(args?: SelectSubset<T, PeopleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many People and returns the data saved in the database.
     * @param {PeopleCreateManyAndReturnArgs} args - Arguments to create many People.
     * @example
     * // Create many People
     * const people = await prisma.people.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many People and only return the `id`
     * const peopleWithIdOnly = await prisma.people.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PeopleCreateManyAndReturnArgs>(args?: SelectSubset<T, PeopleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PeoplePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a People.
     * @param {PeopleDeleteArgs} args - Arguments to delete one People.
     * @example
     * // Delete one People
     * const People = await prisma.people.delete({
     *   where: {
     *     // ... filter to delete one People
     *   }
     * })
     * 
     */
    delete<T extends PeopleDeleteArgs>(args: SelectSubset<T, PeopleDeleteArgs<ExtArgs>>): Prisma__PeopleClient<$Result.GetResult<Prisma.$PeoplePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one People.
     * @param {PeopleUpdateArgs} args - Arguments to update one People.
     * @example
     * // Update one People
     * const people = await prisma.people.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PeopleUpdateArgs>(args: SelectSubset<T, PeopleUpdateArgs<ExtArgs>>): Prisma__PeopleClient<$Result.GetResult<Prisma.$PeoplePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more People.
     * @param {PeopleDeleteManyArgs} args - Arguments to filter People to delete.
     * @example
     * // Delete a few People
     * const { count } = await prisma.people.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PeopleDeleteManyArgs>(args?: SelectSubset<T, PeopleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more People.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PeopleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many People
     * const people = await prisma.people.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PeopleUpdateManyArgs>(args: SelectSubset<T, PeopleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more People and returns the data updated in the database.
     * @param {PeopleUpdateManyAndReturnArgs} args - Arguments to update many People.
     * @example
     * // Update many People
     * const people = await prisma.people.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more People and only return the `id`
     * const peopleWithIdOnly = await prisma.people.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PeopleUpdateManyAndReturnArgs>(args: SelectSubset<T, PeopleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PeoplePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one People.
     * @param {PeopleUpsertArgs} args - Arguments to update or create a People.
     * @example
     * // Update or create a People
     * const people = await prisma.people.upsert({
     *   create: {
     *     // ... data to create a People
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the People we want to update
     *   }
     * })
     */
    upsert<T extends PeopleUpsertArgs>(args: SelectSubset<T, PeopleUpsertArgs<ExtArgs>>): Prisma__PeopleClient<$Result.GetResult<Prisma.$PeoplePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of People.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PeopleCountArgs} args - Arguments to filter People to count.
     * @example
     * // Count the number of People
     * const count = await prisma.people.count({
     *   where: {
     *     // ... the filter for the People we want to count
     *   }
     * })
    **/
    count<T extends PeopleCountArgs>(
      args?: Subset<T, PeopleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PeopleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a People.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PeopleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PeopleAggregateArgs>(args: Subset<T, PeopleAggregateArgs>): Prisma.PrismaPromise<GetPeopleAggregateType<T>>

    /**
     * Group by People.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PeopleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PeopleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PeopleGroupByArgs['orderBy'] }
        : { orderBy?: PeopleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PeopleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPeopleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the People model
   */
  readonly fields: PeopleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for People.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PeopleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    leaveDays<T extends People$leaveDaysArgs<ExtArgs> = {}>(args?: Subset<T, People$leaveDaysArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LeaveDaysPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    afpInstitution<T extends People$afpInstitutionArgs<ExtArgs> = {}>(args?: Subset<T, People$afpInstitutionArgs<ExtArgs>>): Prisma__AFPInstitutionClient<$Result.GetResult<Prisma.$AFPInstitutionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    client<T extends People$clientArgs<ExtArgs> = {}>(args?: Subset<T, People$clientArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    salaryCurrencyType<T extends People$salaryCurrencyTypeArgs<ExtArgs> = {}>(args?: Subset<T, People$salaryCurrencyTypeArgs<ExtArgs>>): Prisma__CurrencyTypeClient<$Result.GetResult<Prisma.$CurrencyTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    feeCurrencyType<T extends People$feeCurrencyTypeArgs<ExtArgs> = {}>(args?: Subset<T, People$feeCurrencyTypeArgs<ExtArgs>>): Prisma__CurrencyTypeClient<$Result.GetResult<Prisma.$CurrencyTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    laptopCurrencyType<T extends People$laptopCurrencyTypeArgs<ExtArgs> = {}>(args?: Subset<T, People$laptopCurrencyTypeArgs<ExtArgs>>): Prisma__CurrencyTypeClient<$Result.GetResult<Prisma.$CurrencyTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    healthInstitution<T extends People$healthInstitutionArgs<ExtArgs> = {}>(args?: Subset<T, People$healthInstitutionArgs<ExtArgs>>): Prisma__HealthInstitutionClient<$Result.GetResult<Prisma.$HealthInstitutionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    jobTitle<T extends People$jobTitleArgs<ExtArgs> = {}>(args?: Subset<T, People$jobTitleArgs<ExtArgs>>): Prisma__JobTitleClient<$Result.GetResult<Prisma.$JobTitlePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    role<T extends People$roleArgs<ExtArgs> = {}>(args?: Subset<T, People$roleArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    seniority<T extends People$seniorityArgs<ExtArgs> = {}>(args?: Subset<T, People$seniorityArgs<ExtArgs>>): Prisma__SeniorityClient<$Result.GetResult<Prisma.$SeniorityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    technicalStacks<T extends People$technicalStacksArgs<ExtArgs> = {}>(args?: Subset<T, People$technicalStacksArgs<ExtArgs>>): Prisma__TechnicalsStacksClient<$Result.GetResult<Prisma.$TechnicalsStacksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    preInvoiceDetails<T extends People$preInvoiceDetailsArgs<ExtArgs> = {}>(args?: Subset<T, People$preInvoiceDetailsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PreInvoiceDetailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the People model
   */
  interface PeopleFieldRefs {
    readonly id: FieldRef<"People", 'Int'>
    readonly name: FieldRef<"People", 'String'>
    readonly lastName: FieldRef<"People", 'String'>
    readonly dni: FieldRef<"People", 'String'>
    readonly corporateName: FieldRef<"People", 'String'>
    readonly corporateEmail: FieldRef<"People", 'String'>
    readonly contractType: FieldRef<"People", 'String'>
    readonly contractStart: FieldRef<"People", 'DateTime'>
    readonly contractEnd: FieldRef<"People", 'DateTime'>
    readonly contractClientEnd: FieldRef<"People", 'DateTime'>
    readonly roleId: FieldRef<"People", 'Int'>
    readonly isActive: FieldRef<"People", 'Boolean'>
    readonly causal: FieldRef<"People", 'String'>
    readonly reason: FieldRef<"People", 'String'>
    readonly clientId: FieldRef<"People", 'Int'>
    readonly remote: FieldRef<"People", 'String'>
    readonly jobTitleId: FieldRef<"People", 'Int'>
    readonly seniorityId: FieldRef<"People", 'Int'>
    readonly technicalStacksId: FieldRef<"People", 'Int'>
    readonly salesManager: FieldRef<"People", 'String'>
    readonly searchManager: FieldRef<"People", 'String'>
    readonly deliveryManager: FieldRef<"People", 'String'>
    readonly administrativeArea: FieldRef<"People", 'String'>
    readonly leader: FieldRef<"People", 'String'>
    readonly leaderMail: FieldRef<"People", 'String'>
    readonly leaderPhone: FieldRef<"People", 'String'>
    readonly birth: FieldRef<"People", 'DateTime'>
    readonly phone: FieldRef<"People", 'String'>
    readonly email: FieldRef<"People", 'String'>
    readonly address: FieldRef<"People", 'String'>
    readonly sublocality: FieldRef<"People", 'String'>
    readonly locality: FieldRef<"People", 'String'>
    readonly country: FieldRef<"People", 'String'>
    readonly nationality: FieldRef<"People", 'String'>
    readonly afpInstitutionId: FieldRef<"People", 'Int'>
    readonly healthInstitutionId: FieldRef<"People", 'Int'>
    readonly bank: FieldRef<"People", 'String'>
    readonly accountNumber: FieldRef<"People", 'String'>
    readonly salaryCurrencyTypeId: FieldRef<"People", 'Int'>
    readonly netSalary: FieldRef<"People", 'Decimal'>
    readonly feeCurrencyTypeId: FieldRef<"People", 'Int'>
    readonly serviceFee: FieldRef<"People", 'Decimal'>
    readonly fee: FieldRef<"People", 'Boolean'>
    readonly billableDay: FieldRef<"People", 'Int'>
    readonly laptopCurrencyTypeId: FieldRef<"People", 'Int'>
    readonly laptopBonus: FieldRef<"People", 'Decimal'>
    readonly comment: FieldRef<"People", 'String'>
    readonly createdAt: FieldRef<"People", 'DateTime'>
    readonly updatedAt: FieldRef<"People", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * People findUnique
   */
  export type PeopleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the People
     */
    select?: PeopleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the People
     */
    omit?: PeopleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeopleInclude<ExtArgs> | null
    /**
     * Filter, which People to fetch.
     */
    where: PeopleWhereUniqueInput
  }

  /**
   * People findUniqueOrThrow
   */
  export type PeopleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the People
     */
    select?: PeopleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the People
     */
    omit?: PeopleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeopleInclude<ExtArgs> | null
    /**
     * Filter, which People to fetch.
     */
    where: PeopleWhereUniqueInput
  }

  /**
   * People findFirst
   */
  export type PeopleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the People
     */
    select?: PeopleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the People
     */
    omit?: PeopleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeopleInclude<ExtArgs> | null
    /**
     * Filter, which People to fetch.
     */
    where?: PeopleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of People to fetch.
     */
    orderBy?: PeopleOrderByWithRelationInput | PeopleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for People.
     */
    cursor?: PeopleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` People from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` People.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of People.
     */
    distinct?: PeopleScalarFieldEnum | PeopleScalarFieldEnum[]
  }

  /**
   * People findFirstOrThrow
   */
  export type PeopleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the People
     */
    select?: PeopleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the People
     */
    omit?: PeopleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeopleInclude<ExtArgs> | null
    /**
     * Filter, which People to fetch.
     */
    where?: PeopleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of People to fetch.
     */
    orderBy?: PeopleOrderByWithRelationInput | PeopleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for People.
     */
    cursor?: PeopleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` People from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` People.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of People.
     */
    distinct?: PeopleScalarFieldEnum | PeopleScalarFieldEnum[]
  }

  /**
   * People findMany
   */
  export type PeopleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the People
     */
    select?: PeopleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the People
     */
    omit?: PeopleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeopleInclude<ExtArgs> | null
    /**
     * Filter, which People to fetch.
     */
    where?: PeopleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of People to fetch.
     */
    orderBy?: PeopleOrderByWithRelationInput | PeopleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing People.
     */
    cursor?: PeopleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` People from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` People.
     */
    skip?: number
    distinct?: PeopleScalarFieldEnum | PeopleScalarFieldEnum[]
  }

  /**
   * People create
   */
  export type PeopleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the People
     */
    select?: PeopleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the People
     */
    omit?: PeopleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeopleInclude<ExtArgs> | null
    /**
     * The data needed to create a People.
     */
    data: XOR<PeopleCreateInput, PeopleUncheckedCreateInput>
  }

  /**
   * People createMany
   */
  export type PeopleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many People.
     */
    data: PeopleCreateManyInput | PeopleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * People createManyAndReturn
   */
  export type PeopleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the People
     */
    select?: PeopleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the People
     */
    omit?: PeopleOmit<ExtArgs> | null
    /**
     * The data used to create many People.
     */
    data: PeopleCreateManyInput | PeopleCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeopleIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * People update
   */
  export type PeopleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the People
     */
    select?: PeopleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the People
     */
    omit?: PeopleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeopleInclude<ExtArgs> | null
    /**
     * The data needed to update a People.
     */
    data: XOR<PeopleUpdateInput, PeopleUncheckedUpdateInput>
    /**
     * Choose, which People to update.
     */
    where: PeopleWhereUniqueInput
  }

  /**
   * People updateMany
   */
  export type PeopleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update People.
     */
    data: XOR<PeopleUpdateManyMutationInput, PeopleUncheckedUpdateManyInput>
    /**
     * Filter which People to update
     */
    where?: PeopleWhereInput
    /**
     * Limit how many People to update.
     */
    limit?: number
  }

  /**
   * People updateManyAndReturn
   */
  export type PeopleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the People
     */
    select?: PeopleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the People
     */
    omit?: PeopleOmit<ExtArgs> | null
    /**
     * The data used to update People.
     */
    data: XOR<PeopleUpdateManyMutationInput, PeopleUncheckedUpdateManyInput>
    /**
     * Filter which People to update
     */
    where?: PeopleWhereInput
    /**
     * Limit how many People to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeopleIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * People upsert
   */
  export type PeopleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the People
     */
    select?: PeopleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the People
     */
    omit?: PeopleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeopleInclude<ExtArgs> | null
    /**
     * The filter to search for the People to update in case it exists.
     */
    where: PeopleWhereUniqueInput
    /**
     * In case the People found by the `where` argument doesn't exist, create a new People with this data.
     */
    create: XOR<PeopleCreateInput, PeopleUncheckedCreateInput>
    /**
     * In case the People was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PeopleUpdateInput, PeopleUncheckedUpdateInput>
  }

  /**
   * People delete
   */
  export type PeopleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the People
     */
    select?: PeopleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the People
     */
    omit?: PeopleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeopleInclude<ExtArgs> | null
    /**
     * Filter which People to delete.
     */
    where: PeopleWhereUniqueInput
  }

  /**
   * People deleteMany
   */
  export type PeopleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which People to delete
     */
    where?: PeopleWhereInput
    /**
     * Limit how many People to delete.
     */
    limit?: number
  }

  /**
   * People.leaveDays
   */
  export type People$leaveDaysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeaveDays
     */
    select?: LeaveDaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LeaveDays
     */
    omit?: LeaveDaysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveDaysInclude<ExtArgs> | null
    where?: LeaveDaysWhereInput
    orderBy?: LeaveDaysOrderByWithRelationInput | LeaveDaysOrderByWithRelationInput[]
    cursor?: LeaveDaysWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LeaveDaysScalarFieldEnum | LeaveDaysScalarFieldEnum[]
  }

  /**
   * People.afpInstitution
   */
  export type People$afpInstitutionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AFPInstitution
     */
    select?: AFPInstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AFPInstitution
     */
    omit?: AFPInstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AFPInstitutionInclude<ExtArgs> | null
    where?: AFPInstitutionWhereInput
  }

  /**
   * People.client
   */
  export type People$clientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    where?: ClientWhereInput
  }

  /**
   * People.salaryCurrencyType
   */
  export type People$salaryCurrencyTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyType
     */
    select?: CurrencyTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyType
     */
    omit?: CurrencyTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyTypeInclude<ExtArgs> | null
    where?: CurrencyTypeWhereInput
  }

  /**
   * People.feeCurrencyType
   */
  export type People$feeCurrencyTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyType
     */
    select?: CurrencyTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyType
     */
    omit?: CurrencyTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyTypeInclude<ExtArgs> | null
    where?: CurrencyTypeWhereInput
  }

  /**
   * People.laptopCurrencyType
   */
  export type People$laptopCurrencyTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyType
     */
    select?: CurrencyTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyType
     */
    omit?: CurrencyTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyTypeInclude<ExtArgs> | null
    where?: CurrencyTypeWhereInput
  }

  /**
   * People.healthInstitution
   */
  export type People$healthInstitutionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthInstitution
     */
    select?: HealthInstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HealthInstitution
     */
    omit?: HealthInstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthInstitutionInclude<ExtArgs> | null
    where?: HealthInstitutionWhereInput
  }

  /**
   * People.jobTitle
   */
  export type People$jobTitleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobTitle
     */
    select?: JobTitleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobTitle
     */
    omit?: JobTitleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobTitleInclude<ExtArgs> | null
    where?: JobTitleWhereInput
  }

  /**
   * People.role
   */
  export type People$roleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    where?: RoleWhereInput
  }

  /**
   * People.seniority
   */
  export type People$seniorityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seniority
     */
    select?: SenioritySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seniority
     */
    omit?: SeniorityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeniorityInclude<ExtArgs> | null
    where?: SeniorityWhereInput
  }

  /**
   * People.technicalStacks
   */
  export type People$technicalStacksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TechnicalsStacks
     */
    select?: TechnicalsStacksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TechnicalsStacks
     */
    omit?: TechnicalsStacksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TechnicalsStacksInclude<ExtArgs> | null
    where?: TechnicalsStacksWhereInput
  }

  /**
   * People.preInvoiceDetails
   */
  export type People$preInvoiceDetailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoiceDetail
     */
    select?: PreInvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoiceDetail
     */
    omit?: PreInvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceDetailInclude<ExtArgs> | null
    where?: PreInvoiceDetailWhereInput
    orderBy?: PreInvoiceDetailOrderByWithRelationInput | PreInvoiceDetailOrderByWithRelationInput[]
    cursor?: PreInvoiceDetailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PreInvoiceDetailScalarFieldEnum | PreInvoiceDetailScalarFieldEnum[]
  }

  /**
   * People without action
   */
  export type PeopleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the People
     */
    select?: PeopleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the People
     */
    omit?: PeopleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeopleInclude<ExtArgs> | null
  }


  /**
   * Model LeaveDays
   */

  export type AggregateLeaveDays = {
    _count: LeaveDaysCountAggregateOutputType | null
    _avg: LeaveDaysAvgAggregateOutputType | null
    _sum: LeaveDaysSumAggregateOutputType | null
    _min: LeaveDaysMinAggregateOutputType | null
    _max: LeaveDaysMaxAggregateOutputType | null
  }

  export type LeaveDaysAvgAggregateOutputType = {
    id: number | null
    personId: number | null
  }

  export type LeaveDaysSumAggregateOutputType = {
    id: number | null
    personId: number | null
  }

  export type LeaveDaysMinAggregateOutputType = {
    id: number | null
    personId: number | null
    startDate: Date | null
    endDate: Date | null
    reason: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type LeaveDaysMaxAggregateOutputType = {
    id: number | null
    personId: number | null
    startDate: Date | null
    endDate: Date | null
    reason: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type LeaveDaysCountAggregateOutputType = {
    id: number
    personId: number
    startDate: number
    endDate: number
    reason: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type LeaveDaysAvgAggregateInputType = {
    id?: true
    personId?: true
  }

  export type LeaveDaysSumAggregateInputType = {
    id?: true
    personId?: true
  }

  export type LeaveDaysMinAggregateInputType = {
    id?: true
    personId?: true
    startDate?: true
    endDate?: true
    reason?: true
    createdAt?: true
    updatedAt?: true
  }

  export type LeaveDaysMaxAggregateInputType = {
    id?: true
    personId?: true
    startDate?: true
    endDate?: true
    reason?: true
    createdAt?: true
    updatedAt?: true
  }

  export type LeaveDaysCountAggregateInputType = {
    id?: true
    personId?: true
    startDate?: true
    endDate?: true
    reason?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type LeaveDaysAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LeaveDays to aggregate.
     */
    where?: LeaveDaysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LeaveDays to fetch.
     */
    orderBy?: LeaveDaysOrderByWithRelationInput | LeaveDaysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LeaveDaysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LeaveDays from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LeaveDays.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LeaveDays
    **/
    _count?: true | LeaveDaysCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LeaveDaysAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LeaveDaysSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LeaveDaysMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LeaveDaysMaxAggregateInputType
  }

  export type GetLeaveDaysAggregateType<T extends LeaveDaysAggregateArgs> = {
        [P in keyof T & keyof AggregateLeaveDays]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLeaveDays[P]>
      : GetScalarType<T[P], AggregateLeaveDays[P]>
  }




  export type LeaveDaysGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LeaveDaysWhereInput
    orderBy?: LeaveDaysOrderByWithAggregationInput | LeaveDaysOrderByWithAggregationInput[]
    by: LeaveDaysScalarFieldEnum[] | LeaveDaysScalarFieldEnum
    having?: LeaveDaysScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LeaveDaysCountAggregateInputType | true
    _avg?: LeaveDaysAvgAggregateInputType
    _sum?: LeaveDaysSumAggregateInputType
    _min?: LeaveDaysMinAggregateInputType
    _max?: LeaveDaysMaxAggregateInputType
  }

  export type LeaveDaysGroupByOutputType = {
    id: number
    personId: number | null
    startDate: Date
    endDate: Date
    reason: string | null
    createdAt: Date | null
    updatedAt: Date | null
    _count: LeaveDaysCountAggregateOutputType | null
    _avg: LeaveDaysAvgAggregateOutputType | null
    _sum: LeaveDaysSumAggregateOutputType | null
    _min: LeaveDaysMinAggregateOutputType | null
    _max: LeaveDaysMaxAggregateOutputType | null
  }

  type GetLeaveDaysGroupByPayload<T extends LeaveDaysGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LeaveDaysGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LeaveDaysGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LeaveDaysGroupByOutputType[P]>
            : GetScalarType<T[P], LeaveDaysGroupByOutputType[P]>
        }
      >
    >


  export type LeaveDaysSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    personId?: boolean
    startDate?: boolean
    endDate?: boolean
    reason?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    person?: boolean | LeaveDays$personArgs<ExtArgs>
  }, ExtArgs["result"]["leaveDays"]>

  export type LeaveDaysSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    personId?: boolean
    startDate?: boolean
    endDate?: boolean
    reason?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    person?: boolean | LeaveDays$personArgs<ExtArgs>
  }, ExtArgs["result"]["leaveDays"]>

  export type LeaveDaysSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    personId?: boolean
    startDate?: boolean
    endDate?: boolean
    reason?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    person?: boolean | LeaveDays$personArgs<ExtArgs>
  }, ExtArgs["result"]["leaveDays"]>

  export type LeaveDaysSelectScalar = {
    id?: boolean
    personId?: boolean
    startDate?: boolean
    endDate?: boolean
    reason?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type LeaveDaysOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "personId" | "startDate" | "endDate" | "reason" | "createdAt" | "updatedAt", ExtArgs["result"]["leaveDays"]>
  export type LeaveDaysInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    person?: boolean | LeaveDays$personArgs<ExtArgs>
  }
  export type LeaveDaysIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    person?: boolean | LeaveDays$personArgs<ExtArgs>
  }
  export type LeaveDaysIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    person?: boolean | LeaveDays$personArgs<ExtArgs>
  }

  export type $LeaveDaysPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "LeaveDays"
    objects: {
      person: Prisma.$PeoplePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      personId: number | null
      startDate: Date
      endDate: Date
      reason: string | null
      createdAt: Date | null
      updatedAt: Date | null
    }, ExtArgs["result"]["leaveDays"]>
    composites: {}
  }

  type LeaveDaysGetPayload<S extends boolean | null | undefined | LeaveDaysDefaultArgs> = $Result.GetResult<Prisma.$LeaveDaysPayload, S>

  type LeaveDaysCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LeaveDaysFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LeaveDaysCountAggregateInputType | true
    }

  export interface LeaveDaysDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['LeaveDays'], meta: { name: 'LeaveDays' } }
    /**
     * Find zero or one LeaveDays that matches the filter.
     * @param {LeaveDaysFindUniqueArgs} args - Arguments to find a LeaveDays
     * @example
     * // Get one LeaveDays
     * const leaveDays = await prisma.leaveDays.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LeaveDaysFindUniqueArgs>(args: SelectSubset<T, LeaveDaysFindUniqueArgs<ExtArgs>>): Prisma__LeaveDaysClient<$Result.GetResult<Prisma.$LeaveDaysPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one LeaveDays that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LeaveDaysFindUniqueOrThrowArgs} args - Arguments to find a LeaveDays
     * @example
     * // Get one LeaveDays
     * const leaveDays = await prisma.leaveDays.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LeaveDaysFindUniqueOrThrowArgs>(args: SelectSubset<T, LeaveDaysFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LeaveDaysClient<$Result.GetResult<Prisma.$LeaveDaysPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LeaveDays that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeaveDaysFindFirstArgs} args - Arguments to find a LeaveDays
     * @example
     * // Get one LeaveDays
     * const leaveDays = await prisma.leaveDays.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LeaveDaysFindFirstArgs>(args?: SelectSubset<T, LeaveDaysFindFirstArgs<ExtArgs>>): Prisma__LeaveDaysClient<$Result.GetResult<Prisma.$LeaveDaysPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LeaveDays that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeaveDaysFindFirstOrThrowArgs} args - Arguments to find a LeaveDays
     * @example
     * // Get one LeaveDays
     * const leaveDays = await prisma.leaveDays.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LeaveDaysFindFirstOrThrowArgs>(args?: SelectSubset<T, LeaveDaysFindFirstOrThrowArgs<ExtArgs>>): Prisma__LeaveDaysClient<$Result.GetResult<Prisma.$LeaveDaysPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more LeaveDays that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeaveDaysFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LeaveDays
     * const leaveDays = await prisma.leaveDays.findMany()
     * 
     * // Get first 10 LeaveDays
     * const leaveDays = await prisma.leaveDays.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const leaveDaysWithIdOnly = await prisma.leaveDays.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LeaveDaysFindManyArgs>(args?: SelectSubset<T, LeaveDaysFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LeaveDaysPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a LeaveDays.
     * @param {LeaveDaysCreateArgs} args - Arguments to create a LeaveDays.
     * @example
     * // Create one LeaveDays
     * const LeaveDays = await prisma.leaveDays.create({
     *   data: {
     *     // ... data to create a LeaveDays
     *   }
     * })
     * 
     */
    create<T extends LeaveDaysCreateArgs>(args: SelectSubset<T, LeaveDaysCreateArgs<ExtArgs>>): Prisma__LeaveDaysClient<$Result.GetResult<Prisma.$LeaveDaysPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many LeaveDays.
     * @param {LeaveDaysCreateManyArgs} args - Arguments to create many LeaveDays.
     * @example
     * // Create many LeaveDays
     * const leaveDays = await prisma.leaveDays.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LeaveDaysCreateManyArgs>(args?: SelectSubset<T, LeaveDaysCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many LeaveDays and returns the data saved in the database.
     * @param {LeaveDaysCreateManyAndReturnArgs} args - Arguments to create many LeaveDays.
     * @example
     * // Create many LeaveDays
     * const leaveDays = await prisma.leaveDays.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many LeaveDays and only return the `id`
     * const leaveDaysWithIdOnly = await prisma.leaveDays.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LeaveDaysCreateManyAndReturnArgs>(args?: SelectSubset<T, LeaveDaysCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LeaveDaysPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a LeaveDays.
     * @param {LeaveDaysDeleteArgs} args - Arguments to delete one LeaveDays.
     * @example
     * // Delete one LeaveDays
     * const LeaveDays = await prisma.leaveDays.delete({
     *   where: {
     *     // ... filter to delete one LeaveDays
     *   }
     * })
     * 
     */
    delete<T extends LeaveDaysDeleteArgs>(args: SelectSubset<T, LeaveDaysDeleteArgs<ExtArgs>>): Prisma__LeaveDaysClient<$Result.GetResult<Prisma.$LeaveDaysPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one LeaveDays.
     * @param {LeaveDaysUpdateArgs} args - Arguments to update one LeaveDays.
     * @example
     * // Update one LeaveDays
     * const leaveDays = await prisma.leaveDays.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LeaveDaysUpdateArgs>(args: SelectSubset<T, LeaveDaysUpdateArgs<ExtArgs>>): Prisma__LeaveDaysClient<$Result.GetResult<Prisma.$LeaveDaysPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more LeaveDays.
     * @param {LeaveDaysDeleteManyArgs} args - Arguments to filter LeaveDays to delete.
     * @example
     * // Delete a few LeaveDays
     * const { count } = await prisma.leaveDays.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LeaveDaysDeleteManyArgs>(args?: SelectSubset<T, LeaveDaysDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LeaveDays.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeaveDaysUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LeaveDays
     * const leaveDays = await prisma.leaveDays.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LeaveDaysUpdateManyArgs>(args: SelectSubset<T, LeaveDaysUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LeaveDays and returns the data updated in the database.
     * @param {LeaveDaysUpdateManyAndReturnArgs} args - Arguments to update many LeaveDays.
     * @example
     * // Update many LeaveDays
     * const leaveDays = await prisma.leaveDays.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more LeaveDays and only return the `id`
     * const leaveDaysWithIdOnly = await prisma.leaveDays.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LeaveDaysUpdateManyAndReturnArgs>(args: SelectSubset<T, LeaveDaysUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LeaveDaysPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one LeaveDays.
     * @param {LeaveDaysUpsertArgs} args - Arguments to update or create a LeaveDays.
     * @example
     * // Update or create a LeaveDays
     * const leaveDays = await prisma.leaveDays.upsert({
     *   create: {
     *     // ... data to create a LeaveDays
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LeaveDays we want to update
     *   }
     * })
     */
    upsert<T extends LeaveDaysUpsertArgs>(args: SelectSubset<T, LeaveDaysUpsertArgs<ExtArgs>>): Prisma__LeaveDaysClient<$Result.GetResult<Prisma.$LeaveDaysPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of LeaveDays.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeaveDaysCountArgs} args - Arguments to filter LeaveDays to count.
     * @example
     * // Count the number of LeaveDays
     * const count = await prisma.leaveDays.count({
     *   where: {
     *     // ... the filter for the LeaveDays we want to count
     *   }
     * })
    **/
    count<T extends LeaveDaysCountArgs>(
      args?: Subset<T, LeaveDaysCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LeaveDaysCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LeaveDays.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeaveDaysAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LeaveDaysAggregateArgs>(args: Subset<T, LeaveDaysAggregateArgs>): Prisma.PrismaPromise<GetLeaveDaysAggregateType<T>>

    /**
     * Group by LeaveDays.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeaveDaysGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LeaveDaysGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LeaveDaysGroupByArgs['orderBy'] }
        : { orderBy?: LeaveDaysGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LeaveDaysGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLeaveDaysGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the LeaveDays model
   */
  readonly fields: LeaveDaysFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for LeaveDays.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LeaveDaysClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    person<T extends LeaveDays$personArgs<ExtArgs> = {}>(args?: Subset<T, LeaveDays$personArgs<ExtArgs>>): Prisma__PeopleClient<$Result.GetResult<Prisma.$PeoplePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the LeaveDays model
   */
  interface LeaveDaysFieldRefs {
    readonly id: FieldRef<"LeaveDays", 'Int'>
    readonly personId: FieldRef<"LeaveDays", 'Int'>
    readonly startDate: FieldRef<"LeaveDays", 'DateTime'>
    readonly endDate: FieldRef<"LeaveDays", 'DateTime'>
    readonly reason: FieldRef<"LeaveDays", 'String'>
    readonly createdAt: FieldRef<"LeaveDays", 'DateTime'>
    readonly updatedAt: FieldRef<"LeaveDays", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * LeaveDays findUnique
   */
  export type LeaveDaysFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeaveDays
     */
    select?: LeaveDaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LeaveDays
     */
    omit?: LeaveDaysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveDaysInclude<ExtArgs> | null
    /**
     * Filter, which LeaveDays to fetch.
     */
    where: LeaveDaysWhereUniqueInput
  }

  /**
   * LeaveDays findUniqueOrThrow
   */
  export type LeaveDaysFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeaveDays
     */
    select?: LeaveDaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LeaveDays
     */
    omit?: LeaveDaysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveDaysInclude<ExtArgs> | null
    /**
     * Filter, which LeaveDays to fetch.
     */
    where: LeaveDaysWhereUniqueInput
  }

  /**
   * LeaveDays findFirst
   */
  export type LeaveDaysFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeaveDays
     */
    select?: LeaveDaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LeaveDays
     */
    omit?: LeaveDaysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveDaysInclude<ExtArgs> | null
    /**
     * Filter, which LeaveDays to fetch.
     */
    where?: LeaveDaysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LeaveDays to fetch.
     */
    orderBy?: LeaveDaysOrderByWithRelationInput | LeaveDaysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LeaveDays.
     */
    cursor?: LeaveDaysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LeaveDays from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LeaveDays.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LeaveDays.
     */
    distinct?: LeaveDaysScalarFieldEnum | LeaveDaysScalarFieldEnum[]
  }

  /**
   * LeaveDays findFirstOrThrow
   */
  export type LeaveDaysFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeaveDays
     */
    select?: LeaveDaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LeaveDays
     */
    omit?: LeaveDaysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveDaysInclude<ExtArgs> | null
    /**
     * Filter, which LeaveDays to fetch.
     */
    where?: LeaveDaysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LeaveDays to fetch.
     */
    orderBy?: LeaveDaysOrderByWithRelationInput | LeaveDaysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LeaveDays.
     */
    cursor?: LeaveDaysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LeaveDays from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LeaveDays.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LeaveDays.
     */
    distinct?: LeaveDaysScalarFieldEnum | LeaveDaysScalarFieldEnum[]
  }

  /**
   * LeaveDays findMany
   */
  export type LeaveDaysFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeaveDays
     */
    select?: LeaveDaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LeaveDays
     */
    omit?: LeaveDaysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveDaysInclude<ExtArgs> | null
    /**
     * Filter, which LeaveDays to fetch.
     */
    where?: LeaveDaysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LeaveDays to fetch.
     */
    orderBy?: LeaveDaysOrderByWithRelationInput | LeaveDaysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LeaveDays.
     */
    cursor?: LeaveDaysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LeaveDays from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LeaveDays.
     */
    skip?: number
    distinct?: LeaveDaysScalarFieldEnum | LeaveDaysScalarFieldEnum[]
  }

  /**
   * LeaveDays create
   */
  export type LeaveDaysCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeaveDays
     */
    select?: LeaveDaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LeaveDays
     */
    omit?: LeaveDaysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveDaysInclude<ExtArgs> | null
    /**
     * The data needed to create a LeaveDays.
     */
    data: XOR<LeaveDaysCreateInput, LeaveDaysUncheckedCreateInput>
  }

  /**
   * LeaveDays createMany
   */
  export type LeaveDaysCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many LeaveDays.
     */
    data: LeaveDaysCreateManyInput | LeaveDaysCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LeaveDays createManyAndReturn
   */
  export type LeaveDaysCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeaveDays
     */
    select?: LeaveDaysSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LeaveDays
     */
    omit?: LeaveDaysOmit<ExtArgs> | null
    /**
     * The data used to create many LeaveDays.
     */
    data: LeaveDaysCreateManyInput | LeaveDaysCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveDaysIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * LeaveDays update
   */
  export type LeaveDaysUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeaveDays
     */
    select?: LeaveDaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LeaveDays
     */
    omit?: LeaveDaysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveDaysInclude<ExtArgs> | null
    /**
     * The data needed to update a LeaveDays.
     */
    data: XOR<LeaveDaysUpdateInput, LeaveDaysUncheckedUpdateInput>
    /**
     * Choose, which LeaveDays to update.
     */
    where: LeaveDaysWhereUniqueInput
  }

  /**
   * LeaveDays updateMany
   */
  export type LeaveDaysUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update LeaveDays.
     */
    data: XOR<LeaveDaysUpdateManyMutationInput, LeaveDaysUncheckedUpdateManyInput>
    /**
     * Filter which LeaveDays to update
     */
    where?: LeaveDaysWhereInput
    /**
     * Limit how many LeaveDays to update.
     */
    limit?: number
  }

  /**
   * LeaveDays updateManyAndReturn
   */
  export type LeaveDaysUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeaveDays
     */
    select?: LeaveDaysSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LeaveDays
     */
    omit?: LeaveDaysOmit<ExtArgs> | null
    /**
     * The data used to update LeaveDays.
     */
    data: XOR<LeaveDaysUpdateManyMutationInput, LeaveDaysUncheckedUpdateManyInput>
    /**
     * Filter which LeaveDays to update
     */
    where?: LeaveDaysWhereInput
    /**
     * Limit how many LeaveDays to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveDaysIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * LeaveDays upsert
   */
  export type LeaveDaysUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeaveDays
     */
    select?: LeaveDaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LeaveDays
     */
    omit?: LeaveDaysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveDaysInclude<ExtArgs> | null
    /**
     * The filter to search for the LeaveDays to update in case it exists.
     */
    where: LeaveDaysWhereUniqueInput
    /**
     * In case the LeaveDays found by the `where` argument doesn't exist, create a new LeaveDays with this data.
     */
    create: XOR<LeaveDaysCreateInput, LeaveDaysUncheckedCreateInput>
    /**
     * In case the LeaveDays was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LeaveDaysUpdateInput, LeaveDaysUncheckedUpdateInput>
  }

  /**
   * LeaveDays delete
   */
  export type LeaveDaysDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeaveDays
     */
    select?: LeaveDaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LeaveDays
     */
    omit?: LeaveDaysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveDaysInclude<ExtArgs> | null
    /**
     * Filter which LeaveDays to delete.
     */
    where: LeaveDaysWhereUniqueInput
  }

  /**
   * LeaveDays deleteMany
   */
  export type LeaveDaysDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LeaveDays to delete
     */
    where?: LeaveDaysWhereInput
    /**
     * Limit how many LeaveDays to delete.
     */
    limit?: number
  }

  /**
   * LeaveDays.person
   */
  export type LeaveDays$personArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the People
     */
    select?: PeopleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the People
     */
    omit?: PeopleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeopleInclude<ExtArgs> | null
    where?: PeopleWhereInput
  }

  /**
   * LeaveDays without action
   */
  export type LeaveDaysDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeaveDays
     */
    select?: LeaveDaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LeaveDays
     */
    omit?: LeaveDaysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveDaysInclude<ExtArgs> | null
  }


  /**
   * Model PreInvoice
   */

  export type AggregatePreInvoice = {
    _count: PreInvoiceCountAggregateOutputType | null
    _avg: PreInvoiceAvgAggregateOutputType | null
    _sum: PreInvoiceSumAggregateOutputType | null
    _min: PreInvoiceMinAggregateOutputType | null
    _max: PreInvoiceMaxAggregateOutputType | null
  }

  export type PreInvoiceAvgAggregateOutputType = {
    id: number | null
    clientId: number | null
    contactId: number | null
    total: Decimal | null
    month: number | null
    year: number | null
    value: Decimal | null
    ocAmount: Decimal | null
    ufValueUsed: Decimal | null
  }

  export type PreInvoiceSumAggregateOutputType = {
    id: number | null
    clientId: number | null
    contactId: number | null
    total: Decimal | null
    month: number | null
    year: number | null
    value: Decimal | null
    ocAmount: Decimal | null
    ufValueUsed: Decimal | null
  }

  export type PreInvoiceMinAggregateOutputType = {
    id: number | null
    clientId: number | null
    contactId: number | null
    total: Decimal | null
    status: string | null
    ocNumber: string | null
    hesNumber: string | null
    invoiceNumber: string | null
    month: number | null
    year: number | null
    value: Decimal | null
    rejectNote: string | null
    ocAmount: Decimal | null
    edpNumber: string | null
    completedBy: string | null
    completedAt: Date | null
    ufValueUsed: Decimal | null
    ufDateUsed: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PreInvoiceMaxAggregateOutputType = {
    id: number | null
    clientId: number | null
    contactId: number | null
    total: Decimal | null
    status: string | null
    ocNumber: string | null
    hesNumber: string | null
    invoiceNumber: string | null
    month: number | null
    year: number | null
    value: Decimal | null
    rejectNote: string | null
    ocAmount: Decimal | null
    edpNumber: string | null
    completedBy: string | null
    completedAt: Date | null
    ufValueUsed: Decimal | null
    ufDateUsed: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PreInvoiceCountAggregateOutputType = {
    id: number
    clientId: number
    contactId: number
    total: number
    status: number
    ocNumber: number
    hesNumber: number
    invoiceNumber: number
    month: number
    year: number
    value: number
    rejectNote: number
    ocAmount: number
    edpNumber: number
    completedBy: number
    completedAt: number
    ufValueUsed: number
    ufDateUsed: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PreInvoiceAvgAggregateInputType = {
    id?: true
    clientId?: true
    contactId?: true
    total?: true
    month?: true
    year?: true
    value?: true
    ocAmount?: true
    ufValueUsed?: true
  }

  export type PreInvoiceSumAggregateInputType = {
    id?: true
    clientId?: true
    contactId?: true
    total?: true
    month?: true
    year?: true
    value?: true
    ocAmount?: true
    ufValueUsed?: true
  }

  export type PreInvoiceMinAggregateInputType = {
    id?: true
    clientId?: true
    contactId?: true
    total?: true
    status?: true
    ocNumber?: true
    hesNumber?: true
    invoiceNumber?: true
    month?: true
    year?: true
    value?: true
    rejectNote?: true
    ocAmount?: true
    edpNumber?: true
    completedBy?: true
    completedAt?: true
    ufValueUsed?: true
    ufDateUsed?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PreInvoiceMaxAggregateInputType = {
    id?: true
    clientId?: true
    contactId?: true
    total?: true
    status?: true
    ocNumber?: true
    hesNumber?: true
    invoiceNumber?: true
    month?: true
    year?: true
    value?: true
    rejectNote?: true
    ocAmount?: true
    edpNumber?: true
    completedBy?: true
    completedAt?: true
    ufValueUsed?: true
    ufDateUsed?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PreInvoiceCountAggregateInputType = {
    id?: true
    clientId?: true
    contactId?: true
    total?: true
    status?: true
    ocNumber?: true
    hesNumber?: true
    invoiceNumber?: true
    month?: true
    year?: true
    value?: true
    rejectNote?: true
    ocAmount?: true
    edpNumber?: true
    completedBy?: true
    completedAt?: true
    ufValueUsed?: true
    ufDateUsed?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PreInvoiceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PreInvoice to aggregate.
     */
    where?: PreInvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PreInvoices to fetch.
     */
    orderBy?: PreInvoiceOrderByWithRelationInput | PreInvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PreInvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PreInvoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PreInvoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PreInvoices
    **/
    _count?: true | PreInvoiceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PreInvoiceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PreInvoiceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PreInvoiceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PreInvoiceMaxAggregateInputType
  }

  export type GetPreInvoiceAggregateType<T extends PreInvoiceAggregateArgs> = {
        [P in keyof T & keyof AggregatePreInvoice]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePreInvoice[P]>
      : GetScalarType<T[P], AggregatePreInvoice[P]>
  }




  export type PreInvoiceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PreInvoiceWhereInput
    orderBy?: PreInvoiceOrderByWithAggregationInput | PreInvoiceOrderByWithAggregationInput[]
    by: PreInvoiceScalarFieldEnum[] | PreInvoiceScalarFieldEnum
    having?: PreInvoiceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PreInvoiceCountAggregateInputType | true
    _avg?: PreInvoiceAvgAggregateInputType
    _sum?: PreInvoiceSumAggregateInputType
    _min?: PreInvoiceMinAggregateInputType
    _max?: PreInvoiceMaxAggregateInputType
  }

  export type PreInvoiceGroupByOutputType = {
    id: number
    clientId: number | null
    contactId: number | null
    total: Decimal | null
    status: string
    ocNumber: string | null
    hesNumber: string | null
    invoiceNumber: string | null
    month: number
    year: number
    value: Decimal
    rejectNote: string | null
    ocAmount: Decimal | null
    edpNumber: string | null
    completedBy: string | null
    completedAt: Date | null
    ufValueUsed: Decimal | null
    ufDateUsed: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    _count: PreInvoiceCountAggregateOutputType | null
    _avg: PreInvoiceAvgAggregateOutputType | null
    _sum: PreInvoiceSumAggregateOutputType | null
    _min: PreInvoiceMinAggregateOutputType | null
    _max: PreInvoiceMaxAggregateOutputType | null
  }

  type GetPreInvoiceGroupByPayload<T extends PreInvoiceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PreInvoiceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PreInvoiceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PreInvoiceGroupByOutputType[P]>
            : GetScalarType<T[P], PreInvoiceGroupByOutputType[P]>
        }
      >
    >


  export type PreInvoiceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    contactId?: boolean
    total?: boolean
    status?: boolean
    ocNumber?: boolean
    hesNumber?: boolean
    invoiceNumber?: boolean
    month?: boolean
    year?: boolean
    value?: boolean
    rejectNote?: boolean
    ocAmount?: boolean
    edpNumber?: boolean
    completedBy?: boolean
    completedAt?: boolean
    ufValueUsed?: boolean
    ufDateUsed?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | PreInvoice$clientArgs<ExtArgs>
    contact?: boolean | PreInvoice$contactArgs<ExtArgs>
    details?: boolean | PreInvoice$detailsArgs<ExtArgs>
    _count?: boolean | PreInvoiceCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["preInvoice"]>

  export type PreInvoiceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    contactId?: boolean
    total?: boolean
    status?: boolean
    ocNumber?: boolean
    hesNumber?: boolean
    invoiceNumber?: boolean
    month?: boolean
    year?: boolean
    value?: boolean
    rejectNote?: boolean
    ocAmount?: boolean
    edpNumber?: boolean
    completedBy?: boolean
    completedAt?: boolean
    ufValueUsed?: boolean
    ufDateUsed?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | PreInvoice$clientArgs<ExtArgs>
    contact?: boolean | PreInvoice$contactArgs<ExtArgs>
  }, ExtArgs["result"]["preInvoice"]>

  export type PreInvoiceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    contactId?: boolean
    total?: boolean
    status?: boolean
    ocNumber?: boolean
    hesNumber?: boolean
    invoiceNumber?: boolean
    month?: boolean
    year?: boolean
    value?: boolean
    rejectNote?: boolean
    ocAmount?: boolean
    edpNumber?: boolean
    completedBy?: boolean
    completedAt?: boolean
    ufValueUsed?: boolean
    ufDateUsed?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | PreInvoice$clientArgs<ExtArgs>
    contact?: boolean | PreInvoice$contactArgs<ExtArgs>
  }, ExtArgs["result"]["preInvoice"]>

  export type PreInvoiceSelectScalar = {
    id?: boolean
    clientId?: boolean
    contactId?: boolean
    total?: boolean
    status?: boolean
    ocNumber?: boolean
    hesNumber?: boolean
    invoiceNumber?: boolean
    month?: boolean
    year?: boolean
    value?: boolean
    rejectNote?: boolean
    ocAmount?: boolean
    edpNumber?: boolean
    completedBy?: boolean
    completedAt?: boolean
    ufValueUsed?: boolean
    ufDateUsed?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PreInvoiceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "clientId" | "contactId" | "total" | "status" | "ocNumber" | "hesNumber" | "invoiceNumber" | "month" | "year" | "value" | "rejectNote" | "ocAmount" | "edpNumber" | "completedBy" | "completedAt" | "ufValueUsed" | "ufDateUsed" | "createdAt" | "updatedAt", ExtArgs["result"]["preInvoice"]>
  export type PreInvoiceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | PreInvoice$clientArgs<ExtArgs>
    contact?: boolean | PreInvoice$contactArgs<ExtArgs>
    details?: boolean | PreInvoice$detailsArgs<ExtArgs>
    _count?: boolean | PreInvoiceCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PreInvoiceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | PreInvoice$clientArgs<ExtArgs>
    contact?: boolean | PreInvoice$contactArgs<ExtArgs>
  }
  export type PreInvoiceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | PreInvoice$clientArgs<ExtArgs>
    contact?: boolean | PreInvoice$contactArgs<ExtArgs>
  }

  export type $PreInvoicePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PreInvoice"
    objects: {
      client: Prisma.$ClientPayload<ExtArgs> | null
      contact: Prisma.$ContactPayload<ExtArgs> | null
      details: Prisma.$PreInvoiceDetailPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      clientId: number | null
      contactId: number | null
      total: Prisma.Decimal | null
      status: string
      ocNumber: string | null
      hesNumber: string | null
      invoiceNumber: string | null
      month: number
      year: number
      value: Prisma.Decimal
      rejectNote: string | null
      ocAmount: Prisma.Decimal | null
      edpNumber: string | null
      completedBy: string | null
      completedAt: Date | null
      ufValueUsed: Prisma.Decimal | null
      ufDateUsed: Date | null
      createdAt: Date | null
      updatedAt: Date | null
    }, ExtArgs["result"]["preInvoice"]>
    composites: {}
  }

  type PreInvoiceGetPayload<S extends boolean | null | undefined | PreInvoiceDefaultArgs> = $Result.GetResult<Prisma.$PreInvoicePayload, S>

  type PreInvoiceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PreInvoiceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PreInvoiceCountAggregateInputType | true
    }

  export interface PreInvoiceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PreInvoice'], meta: { name: 'PreInvoice' } }
    /**
     * Find zero or one PreInvoice that matches the filter.
     * @param {PreInvoiceFindUniqueArgs} args - Arguments to find a PreInvoice
     * @example
     * // Get one PreInvoice
     * const preInvoice = await prisma.preInvoice.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PreInvoiceFindUniqueArgs>(args: SelectSubset<T, PreInvoiceFindUniqueArgs<ExtArgs>>): Prisma__PreInvoiceClient<$Result.GetResult<Prisma.$PreInvoicePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PreInvoice that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PreInvoiceFindUniqueOrThrowArgs} args - Arguments to find a PreInvoice
     * @example
     * // Get one PreInvoice
     * const preInvoice = await prisma.preInvoice.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PreInvoiceFindUniqueOrThrowArgs>(args: SelectSubset<T, PreInvoiceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PreInvoiceClient<$Result.GetResult<Prisma.$PreInvoicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PreInvoice that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PreInvoiceFindFirstArgs} args - Arguments to find a PreInvoice
     * @example
     * // Get one PreInvoice
     * const preInvoice = await prisma.preInvoice.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PreInvoiceFindFirstArgs>(args?: SelectSubset<T, PreInvoiceFindFirstArgs<ExtArgs>>): Prisma__PreInvoiceClient<$Result.GetResult<Prisma.$PreInvoicePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PreInvoice that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PreInvoiceFindFirstOrThrowArgs} args - Arguments to find a PreInvoice
     * @example
     * // Get one PreInvoice
     * const preInvoice = await prisma.preInvoice.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PreInvoiceFindFirstOrThrowArgs>(args?: SelectSubset<T, PreInvoiceFindFirstOrThrowArgs<ExtArgs>>): Prisma__PreInvoiceClient<$Result.GetResult<Prisma.$PreInvoicePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PreInvoices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PreInvoiceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PreInvoices
     * const preInvoices = await prisma.preInvoice.findMany()
     * 
     * // Get first 10 PreInvoices
     * const preInvoices = await prisma.preInvoice.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const preInvoiceWithIdOnly = await prisma.preInvoice.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PreInvoiceFindManyArgs>(args?: SelectSubset<T, PreInvoiceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PreInvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PreInvoice.
     * @param {PreInvoiceCreateArgs} args - Arguments to create a PreInvoice.
     * @example
     * // Create one PreInvoice
     * const PreInvoice = await prisma.preInvoice.create({
     *   data: {
     *     // ... data to create a PreInvoice
     *   }
     * })
     * 
     */
    create<T extends PreInvoiceCreateArgs>(args: SelectSubset<T, PreInvoiceCreateArgs<ExtArgs>>): Prisma__PreInvoiceClient<$Result.GetResult<Prisma.$PreInvoicePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PreInvoices.
     * @param {PreInvoiceCreateManyArgs} args - Arguments to create many PreInvoices.
     * @example
     * // Create many PreInvoices
     * const preInvoice = await prisma.preInvoice.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PreInvoiceCreateManyArgs>(args?: SelectSubset<T, PreInvoiceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PreInvoices and returns the data saved in the database.
     * @param {PreInvoiceCreateManyAndReturnArgs} args - Arguments to create many PreInvoices.
     * @example
     * // Create many PreInvoices
     * const preInvoice = await prisma.preInvoice.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PreInvoices and only return the `id`
     * const preInvoiceWithIdOnly = await prisma.preInvoice.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PreInvoiceCreateManyAndReturnArgs>(args?: SelectSubset<T, PreInvoiceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PreInvoicePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PreInvoice.
     * @param {PreInvoiceDeleteArgs} args - Arguments to delete one PreInvoice.
     * @example
     * // Delete one PreInvoice
     * const PreInvoice = await prisma.preInvoice.delete({
     *   where: {
     *     // ... filter to delete one PreInvoice
     *   }
     * })
     * 
     */
    delete<T extends PreInvoiceDeleteArgs>(args: SelectSubset<T, PreInvoiceDeleteArgs<ExtArgs>>): Prisma__PreInvoiceClient<$Result.GetResult<Prisma.$PreInvoicePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PreInvoice.
     * @param {PreInvoiceUpdateArgs} args - Arguments to update one PreInvoice.
     * @example
     * // Update one PreInvoice
     * const preInvoice = await prisma.preInvoice.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PreInvoiceUpdateArgs>(args: SelectSubset<T, PreInvoiceUpdateArgs<ExtArgs>>): Prisma__PreInvoiceClient<$Result.GetResult<Prisma.$PreInvoicePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PreInvoices.
     * @param {PreInvoiceDeleteManyArgs} args - Arguments to filter PreInvoices to delete.
     * @example
     * // Delete a few PreInvoices
     * const { count } = await prisma.preInvoice.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PreInvoiceDeleteManyArgs>(args?: SelectSubset<T, PreInvoiceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PreInvoices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PreInvoiceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PreInvoices
     * const preInvoice = await prisma.preInvoice.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PreInvoiceUpdateManyArgs>(args: SelectSubset<T, PreInvoiceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PreInvoices and returns the data updated in the database.
     * @param {PreInvoiceUpdateManyAndReturnArgs} args - Arguments to update many PreInvoices.
     * @example
     * // Update many PreInvoices
     * const preInvoice = await prisma.preInvoice.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PreInvoices and only return the `id`
     * const preInvoiceWithIdOnly = await prisma.preInvoice.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PreInvoiceUpdateManyAndReturnArgs>(args: SelectSubset<T, PreInvoiceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PreInvoicePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PreInvoice.
     * @param {PreInvoiceUpsertArgs} args - Arguments to update or create a PreInvoice.
     * @example
     * // Update or create a PreInvoice
     * const preInvoice = await prisma.preInvoice.upsert({
     *   create: {
     *     // ... data to create a PreInvoice
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PreInvoice we want to update
     *   }
     * })
     */
    upsert<T extends PreInvoiceUpsertArgs>(args: SelectSubset<T, PreInvoiceUpsertArgs<ExtArgs>>): Prisma__PreInvoiceClient<$Result.GetResult<Prisma.$PreInvoicePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PreInvoices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PreInvoiceCountArgs} args - Arguments to filter PreInvoices to count.
     * @example
     * // Count the number of PreInvoices
     * const count = await prisma.preInvoice.count({
     *   where: {
     *     // ... the filter for the PreInvoices we want to count
     *   }
     * })
    **/
    count<T extends PreInvoiceCountArgs>(
      args?: Subset<T, PreInvoiceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PreInvoiceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PreInvoice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PreInvoiceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PreInvoiceAggregateArgs>(args: Subset<T, PreInvoiceAggregateArgs>): Prisma.PrismaPromise<GetPreInvoiceAggregateType<T>>

    /**
     * Group by PreInvoice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PreInvoiceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PreInvoiceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PreInvoiceGroupByArgs['orderBy'] }
        : { orderBy?: PreInvoiceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PreInvoiceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPreInvoiceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PreInvoice model
   */
  readonly fields: PreInvoiceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PreInvoice.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PreInvoiceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends PreInvoice$clientArgs<ExtArgs> = {}>(args?: Subset<T, PreInvoice$clientArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    contact<T extends PreInvoice$contactArgs<ExtArgs> = {}>(args?: Subset<T, PreInvoice$contactArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    details<T extends PreInvoice$detailsArgs<ExtArgs> = {}>(args?: Subset<T, PreInvoice$detailsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PreInvoiceDetailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PreInvoice model
   */
  interface PreInvoiceFieldRefs {
    readonly id: FieldRef<"PreInvoice", 'Int'>
    readonly clientId: FieldRef<"PreInvoice", 'Int'>
    readonly contactId: FieldRef<"PreInvoice", 'Int'>
    readonly total: FieldRef<"PreInvoice", 'Decimal'>
    readonly status: FieldRef<"PreInvoice", 'String'>
    readonly ocNumber: FieldRef<"PreInvoice", 'String'>
    readonly hesNumber: FieldRef<"PreInvoice", 'String'>
    readonly invoiceNumber: FieldRef<"PreInvoice", 'String'>
    readonly month: FieldRef<"PreInvoice", 'Int'>
    readonly year: FieldRef<"PreInvoice", 'Int'>
    readonly value: FieldRef<"PreInvoice", 'Decimal'>
    readonly rejectNote: FieldRef<"PreInvoice", 'String'>
    readonly ocAmount: FieldRef<"PreInvoice", 'Decimal'>
    readonly edpNumber: FieldRef<"PreInvoice", 'String'>
    readonly completedBy: FieldRef<"PreInvoice", 'String'>
    readonly completedAt: FieldRef<"PreInvoice", 'DateTime'>
    readonly ufValueUsed: FieldRef<"PreInvoice", 'Decimal'>
    readonly ufDateUsed: FieldRef<"PreInvoice", 'DateTime'>
    readonly createdAt: FieldRef<"PreInvoice", 'DateTime'>
    readonly updatedAt: FieldRef<"PreInvoice", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PreInvoice findUnique
   */
  export type PreInvoiceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoice
     */
    select?: PreInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoice
     */
    omit?: PreInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceInclude<ExtArgs> | null
    /**
     * Filter, which PreInvoice to fetch.
     */
    where: PreInvoiceWhereUniqueInput
  }

  /**
   * PreInvoice findUniqueOrThrow
   */
  export type PreInvoiceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoice
     */
    select?: PreInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoice
     */
    omit?: PreInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceInclude<ExtArgs> | null
    /**
     * Filter, which PreInvoice to fetch.
     */
    where: PreInvoiceWhereUniqueInput
  }

  /**
   * PreInvoice findFirst
   */
  export type PreInvoiceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoice
     */
    select?: PreInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoice
     */
    omit?: PreInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceInclude<ExtArgs> | null
    /**
     * Filter, which PreInvoice to fetch.
     */
    where?: PreInvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PreInvoices to fetch.
     */
    orderBy?: PreInvoiceOrderByWithRelationInput | PreInvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PreInvoices.
     */
    cursor?: PreInvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PreInvoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PreInvoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PreInvoices.
     */
    distinct?: PreInvoiceScalarFieldEnum | PreInvoiceScalarFieldEnum[]
  }

  /**
   * PreInvoice findFirstOrThrow
   */
  export type PreInvoiceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoice
     */
    select?: PreInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoice
     */
    omit?: PreInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceInclude<ExtArgs> | null
    /**
     * Filter, which PreInvoice to fetch.
     */
    where?: PreInvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PreInvoices to fetch.
     */
    orderBy?: PreInvoiceOrderByWithRelationInput | PreInvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PreInvoices.
     */
    cursor?: PreInvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PreInvoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PreInvoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PreInvoices.
     */
    distinct?: PreInvoiceScalarFieldEnum | PreInvoiceScalarFieldEnum[]
  }

  /**
   * PreInvoice findMany
   */
  export type PreInvoiceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoice
     */
    select?: PreInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoice
     */
    omit?: PreInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceInclude<ExtArgs> | null
    /**
     * Filter, which PreInvoices to fetch.
     */
    where?: PreInvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PreInvoices to fetch.
     */
    orderBy?: PreInvoiceOrderByWithRelationInput | PreInvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PreInvoices.
     */
    cursor?: PreInvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PreInvoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PreInvoices.
     */
    skip?: number
    distinct?: PreInvoiceScalarFieldEnum | PreInvoiceScalarFieldEnum[]
  }

  /**
   * PreInvoice create
   */
  export type PreInvoiceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoice
     */
    select?: PreInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoice
     */
    omit?: PreInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceInclude<ExtArgs> | null
    /**
     * The data needed to create a PreInvoice.
     */
    data: XOR<PreInvoiceCreateInput, PreInvoiceUncheckedCreateInput>
  }

  /**
   * PreInvoice createMany
   */
  export type PreInvoiceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PreInvoices.
     */
    data: PreInvoiceCreateManyInput | PreInvoiceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PreInvoice createManyAndReturn
   */
  export type PreInvoiceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoice
     */
    select?: PreInvoiceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoice
     */
    omit?: PreInvoiceOmit<ExtArgs> | null
    /**
     * The data used to create many PreInvoices.
     */
    data: PreInvoiceCreateManyInput | PreInvoiceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PreInvoice update
   */
  export type PreInvoiceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoice
     */
    select?: PreInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoice
     */
    omit?: PreInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceInclude<ExtArgs> | null
    /**
     * The data needed to update a PreInvoice.
     */
    data: XOR<PreInvoiceUpdateInput, PreInvoiceUncheckedUpdateInput>
    /**
     * Choose, which PreInvoice to update.
     */
    where: PreInvoiceWhereUniqueInput
  }

  /**
   * PreInvoice updateMany
   */
  export type PreInvoiceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PreInvoices.
     */
    data: XOR<PreInvoiceUpdateManyMutationInput, PreInvoiceUncheckedUpdateManyInput>
    /**
     * Filter which PreInvoices to update
     */
    where?: PreInvoiceWhereInput
    /**
     * Limit how many PreInvoices to update.
     */
    limit?: number
  }

  /**
   * PreInvoice updateManyAndReturn
   */
  export type PreInvoiceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoice
     */
    select?: PreInvoiceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoice
     */
    omit?: PreInvoiceOmit<ExtArgs> | null
    /**
     * The data used to update PreInvoices.
     */
    data: XOR<PreInvoiceUpdateManyMutationInput, PreInvoiceUncheckedUpdateManyInput>
    /**
     * Filter which PreInvoices to update
     */
    where?: PreInvoiceWhereInput
    /**
     * Limit how many PreInvoices to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PreInvoice upsert
   */
  export type PreInvoiceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoice
     */
    select?: PreInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoice
     */
    omit?: PreInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceInclude<ExtArgs> | null
    /**
     * The filter to search for the PreInvoice to update in case it exists.
     */
    where: PreInvoiceWhereUniqueInput
    /**
     * In case the PreInvoice found by the `where` argument doesn't exist, create a new PreInvoice with this data.
     */
    create: XOR<PreInvoiceCreateInput, PreInvoiceUncheckedCreateInput>
    /**
     * In case the PreInvoice was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PreInvoiceUpdateInput, PreInvoiceUncheckedUpdateInput>
  }

  /**
   * PreInvoice delete
   */
  export type PreInvoiceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoice
     */
    select?: PreInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoice
     */
    omit?: PreInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceInclude<ExtArgs> | null
    /**
     * Filter which PreInvoice to delete.
     */
    where: PreInvoiceWhereUniqueInput
  }

  /**
   * PreInvoice deleteMany
   */
  export type PreInvoiceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PreInvoices to delete
     */
    where?: PreInvoiceWhereInput
    /**
     * Limit how many PreInvoices to delete.
     */
    limit?: number
  }

  /**
   * PreInvoice.client
   */
  export type PreInvoice$clientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    where?: ClientWhereInput
  }

  /**
   * PreInvoice.contact
   */
  export type PreInvoice$contactArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    where?: ContactWhereInput
  }

  /**
   * PreInvoice.details
   */
  export type PreInvoice$detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoiceDetail
     */
    select?: PreInvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoiceDetail
     */
    omit?: PreInvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceDetailInclude<ExtArgs> | null
    where?: PreInvoiceDetailWhereInput
    orderBy?: PreInvoiceDetailOrderByWithRelationInput | PreInvoiceDetailOrderByWithRelationInput[]
    cursor?: PreInvoiceDetailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PreInvoiceDetailScalarFieldEnum | PreInvoiceDetailScalarFieldEnum[]
  }

  /**
   * PreInvoice without action
   */
  export type PreInvoiceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoice
     */
    select?: PreInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoice
     */
    omit?: PreInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceInclude<ExtArgs> | null
  }


  /**
   * Model PreInvoiceDetail
   */

  export type AggregatePreInvoiceDetail = {
    _count: PreInvoiceDetailCountAggregateOutputType | null
    _avg: PreInvoiceDetailAvgAggregateOutputType | null
    _sum: PreInvoiceDetailSumAggregateOutputType | null
    _min: PreInvoiceDetailMinAggregateOutputType | null
    _max: PreInvoiceDetailMaxAggregateOutputType | null
  }

  export type PreInvoiceDetailAvgAggregateOutputType = {
    id: number | null
    preInvoiceId: number | null
    personId: number | null
    value: Decimal | null
    currency_type: number | null
    billableDays: Decimal | null
    leaveDays: Decimal | null
    totalConsumeDays: Decimal | null
  }

  export type PreInvoiceDetailSumAggregateOutputType = {
    id: number | null
    preInvoiceId: number | null
    personId: number | null
    value: Decimal | null
    currency_type: number | null
    billableDays: Decimal | null
    leaveDays: Decimal | null
    totalConsumeDays: Decimal | null
  }

  export type PreInvoiceDetailMinAggregateOutputType = {
    id: number | null
    preInvoiceId: number | null
    personId: number | null
    status: string | null
    value: Decimal | null
    currency_type: number | null
    billableDays: Decimal | null
    leaveDays: Decimal | null
    totalConsumeDays: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PreInvoiceDetailMaxAggregateOutputType = {
    id: number | null
    preInvoiceId: number | null
    personId: number | null
    status: string | null
    value: Decimal | null
    currency_type: number | null
    billableDays: Decimal | null
    leaveDays: Decimal | null
    totalConsumeDays: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PreInvoiceDetailCountAggregateOutputType = {
    id: number
    preInvoiceId: number
    personId: number
    status: number
    value: number
    currency_type: number
    billableDays: number
    leaveDays: number
    totalConsumeDays: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PreInvoiceDetailAvgAggregateInputType = {
    id?: true
    preInvoiceId?: true
    personId?: true
    value?: true
    currency_type?: true
    billableDays?: true
    leaveDays?: true
    totalConsumeDays?: true
  }

  export type PreInvoiceDetailSumAggregateInputType = {
    id?: true
    preInvoiceId?: true
    personId?: true
    value?: true
    currency_type?: true
    billableDays?: true
    leaveDays?: true
    totalConsumeDays?: true
  }

  export type PreInvoiceDetailMinAggregateInputType = {
    id?: true
    preInvoiceId?: true
    personId?: true
    status?: true
    value?: true
    currency_type?: true
    billableDays?: true
    leaveDays?: true
    totalConsumeDays?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PreInvoiceDetailMaxAggregateInputType = {
    id?: true
    preInvoiceId?: true
    personId?: true
    status?: true
    value?: true
    currency_type?: true
    billableDays?: true
    leaveDays?: true
    totalConsumeDays?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PreInvoiceDetailCountAggregateInputType = {
    id?: true
    preInvoiceId?: true
    personId?: true
    status?: true
    value?: true
    currency_type?: true
    billableDays?: true
    leaveDays?: true
    totalConsumeDays?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PreInvoiceDetailAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PreInvoiceDetail to aggregate.
     */
    where?: PreInvoiceDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PreInvoiceDetails to fetch.
     */
    orderBy?: PreInvoiceDetailOrderByWithRelationInput | PreInvoiceDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PreInvoiceDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PreInvoiceDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PreInvoiceDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PreInvoiceDetails
    **/
    _count?: true | PreInvoiceDetailCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PreInvoiceDetailAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PreInvoiceDetailSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PreInvoiceDetailMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PreInvoiceDetailMaxAggregateInputType
  }

  export type GetPreInvoiceDetailAggregateType<T extends PreInvoiceDetailAggregateArgs> = {
        [P in keyof T & keyof AggregatePreInvoiceDetail]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePreInvoiceDetail[P]>
      : GetScalarType<T[P], AggregatePreInvoiceDetail[P]>
  }




  export type PreInvoiceDetailGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PreInvoiceDetailWhereInput
    orderBy?: PreInvoiceDetailOrderByWithAggregationInput | PreInvoiceDetailOrderByWithAggregationInput[]
    by: PreInvoiceDetailScalarFieldEnum[] | PreInvoiceDetailScalarFieldEnum
    having?: PreInvoiceDetailScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PreInvoiceDetailCountAggregateInputType | true
    _avg?: PreInvoiceDetailAvgAggregateInputType
    _sum?: PreInvoiceDetailSumAggregateInputType
    _min?: PreInvoiceDetailMinAggregateInputType
    _max?: PreInvoiceDetailMaxAggregateInputType
  }

  export type PreInvoiceDetailGroupByOutputType = {
    id: number
    preInvoiceId: number | null
    personId: number | null
    status: string
    value: Decimal
    currency_type: number | null
    billableDays: Decimal
    leaveDays: Decimal
    totalConsumeDays: Decimal
    createdAt: Date | null
    updatedAt: Date | null
    _count: PreInvoiceDetailCountAggregateOutputType | null
    _avg: PreInvoiceDetailAvgAggregateOutputType | null
    _sum: PreInvoiceDetailSumAggregateOutputType | null
    _min: PreInvoiceDetailMinAggregateOutputType | null
    _max: PreInvoiceDetailMaxAggregateOutputType | null
  }

  type GetPreInvoiceDetailGroupByPayload<T extends PreInvoiceDetailGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PreInvoiceDetailGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PreInvoiceDetailGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PreInvoiceDetailGroupByOutputType[P]>
            : GetScalarType<T[P], PreInvoiceDetailGroupByOutputType[P]>
        }
      >
    >


  export type PreInvoiceDetailSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    preInvoiceId?: boolean
    personId?: boolean
    status?: boolean
    value?: boolean
    currency_type?: boolean
    billableDays?: boolean
    leaveDays?: boolean
    totalConsumeDays?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    CurrencyType?: boolean | PreInvoiceDetail$CurrencyTypeArgs<ExtArgs>
    person?: boolean | PreInvoiceDetail$personArgs<ExtArgs>
    preInvoice?: boolean | PreInvoiceDetail$preInvoiceArgs<ExtArgs>
  }, ExtArgs["result"]["preInvoiceDetail"]>

  export type PreInvoiceDetailSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    preInvoiceId?: boolean
    personId?: boolean
    status?: boolean
    value?: boolean
    currency_type?: boolean
    billableDays?: boolean
    leaveDays?: boolean
    totalConsumeDays?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    CurrencyType?: boolean | PreInvoiceDetail$CurrencyTypeArgs<ExtArgs>
    person?: boolean | PreInvoiceDetail$personArgs<ExtArgs>
    preInvoice?: boolean | PreInvoiceDetail$preInvoiceArgs<ExtArgs>
  }, ExtArgs["result"]["preInvoiceDetail"]>

  export type PreInvoiceDetailSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    preInvoiceId?: boolean
    personId?: boolean
    status?: boolean
    value?: boolean
    currency_type?: boolean
    billableDays?: boolean
    leaveDays?: boolean
    totalConsumeDays?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    CurrencyType?: boolean | PreInvoiceDetail$CurrencyTypeArgs<ExtArgs>
    person?: boolean | PreInvoiceDetail$personArgs<ExtArgs>
    preInvoice?: boolean | PreInvoiceDetail$preInvoiceArgs<ExtArgs>
  }, ExtArgs["result"]["preInvoiceDetail"]>

  export type PreInvoiceDetailSelectScalar = {
    id?: boolean
    preInvoiceId?: boolean
    personId?: boolean
    status?: boolean
    value?: boolean
    currency_type?: boolean
    billableDays?: boolean
    leaveDays?: boolean
    totalConsumeDays?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PreInvoiceDetailOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "preInvoiceId" | "personId" | "status" | "value" | "currency_type" | "billableDays" | "leaveDays" | "totalConsumeDays" | "createdAt" | "updatedAt", ExtArgs["result"]["preInvoiceDetail"]>
  export type PreInvoiceDetailInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CurrencyType?: boolean | PreInvoiceDetail$CurrencyTypeArgs<ExtArgs>
    person?: boolean | PreInvoiceDetail$personArgs<ExtArgs>
    preInvoice?: boolean | PreInvoiceDetail$preInvoiceArgs<ExtArgs>
  }
  export type PreInvoiceDetailIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CurrencyType?: boolean | PreInvoiceDetail$CurrencyTypeArgs<ExtArgs>
    person?: boolean | PreInvoiceDetail$personArgs<ExtArgs>
    preInvoice?: boolean | PreInvoiceDetail$preInvoiceArgs<ExtArgs>
  }
  export type PreInvoiceDetailIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CurrencyType?: boolean | PreInvoiceDetail$CurrencyTypeArgs<ExtArgs>
    person?: boolean | PreInvoiceDetail$personArgs<ExtArgs>
    preInvoice?: boolean | PreInvoiceDetail$preInvoiceArgs<ExtArgs>
  }

  export type $PreInvoiceDetailPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PreInvoiceDetail"
    objects: {
      CurrencyType: Prisma.$CurrencyTypePayload<ExtArgs> | null
      person: Prisma.$PeoplePayload<ExtArgs> | null
      preInvoice: Prisma.$PreInvoicePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      preInvoiceId: number | null
      personId: number | null
      status: string
      value: Prisma.Decimal
      currency_type: number | null
      billableDays: Prisma.Decimal
      leaveDays: Prisma.Decimal
      totalConsumeDays: Prisma.Decimal
      createdAt: Date | null
      updatedAt: Date | null
    }, ExtArgs["result"]["preInvoiceDetail"]>
    composites: {}
  }

  type PreInvoiceDetailGetPayload<S extends boolean | null | undefined | PreInvoiceDetailDefaultArgs> = $Result.GetResult<Prisma.$PreInvoiceDetailPayload, S>

  type PreInvoiceDetailCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PreInvoiceDetailFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PreInvoiceDetailCountAggregateInputType | true
    }

  export interface PreInvoiceDetailDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PreInvoiceDetail'], meta: { name: 'PreInvoiceDetail' } }
    /**
     * Find zero or one PreInvoiceDetail that matches the filter.
     * @param {PreInvoiceDetailFindUniqueArgs} args - Arguments to find a PreInvoiceDetail
     * @example
     * // Get one PreInvoiceDetail
     * const preInvoiceDetail = await prisma.preInvoiceDetail.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PreInvoiceDetailFindUniqueArgs>(args: SelectSubset<T, PreInvoiceDetailFindUniqueArgs<ExtArgs>>): Prisma__PreInvoiceDetailClient<$Result.GetResult<Prisma.$PreInvoiceDetailPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PreInvoiceDetail that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PreInvoiceDetailFindUniqueOrThrowArgs} args - Arguments to find a PreInvoiceDetail
     * @example
     * // Get one PreInvoiceDetail
     * const preInvoiceDetail = await prisma.preInvoiceDetail.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PreInvoiceDetailFindUniqueOrThrowArgs>(args: SelectSubset<T, PreInvoiceDetailFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PreInvoiceDetailClient<$Result.GetResult<Prisma.$PreInvoiceDetailPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PreInvoiceDetail that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PreInvoiceDetailFindFirstArgs} args - Arguments to find a PreInvoiceDetail
     * @example
     * // Get one PreInvoiceDetail
     * const preInvoiceDetail = await prisma.preInvoiceDetail.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PreInvoiceDetailFindFirstArgs>(args?: SelectSubset<T, PreInvoiceDetailFindFirstArgs<ExtArgs>>): Prisma__PreInvoiceDetailClient<$Result.GetResult<Prisma.$PreInvoiceDetailPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PreInvoiceDetail that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PreInvoiceDetailFindFirstOrThrowArgs} args - Arguments to find a PreInvoiceDetail
     * @example
     * // Get one PreInvoiceDetail
     * const preInvoiceDetail = await prisma.preInvoiceDetail.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PreInvoiceDetailFindFirstOrThrowArgs>(args?: SelectSubset<T, PreInvoiceDetailFindFirstOrThrowArgs<ExtArgs>>): Prisma__PreInvoiceDetailClient<$Result.GetResult<Prisma.$PreInvoiceDetailPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PreInvoiceDetails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PreInvoiceDetailFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PreInvoiceDetails
     * const preInvoiceDetails = await prisma.preInvoiceDetail.findMany()
     * 
     * // Get first 10 PreInvoiceDetails
     * const preInvoiceDetails = await prisma.preInvoiceDetail.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const preInvoiceDetailWithIdOnly = await prisma.preInvoiceDetail.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PreInvoiceDetailFindManyArgs>(args?: SelectSubset<T, PreInvoiceDetailFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PreInvoiceDetailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PreInvoiceDetail.
     * @param {PreInvoiceDetailCreateArgs} args - Arguments to create a PreInvoiceDetail.
     * @example
     * // Create one PreInvoiceDetail
     * const PreInvoiceDetail = await prisma.preInvoiceDetail.create({
     *   data: {
     *     // ... data to create a PreInvoiceDetail
     *   }
     * })
     * 
     */
    create<T extends PreInvoiceDetailCreateArgs>(args: SelectSubset<T, PreInvoiceDetailCreateArgs<ExtArgs>>): Prisma__PreInvoiceDetailClient<$Result.GetResult<Prisma.$PreInvoiceDetailPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PreInvoiceDetails.
     * @param {PreInvoiceDetailCreateManyArgs} args - Arguments to create many PreInvoiceDetails.
     * @example
     * // Create many PreInvoiceDetails
     * const preInvoiceDetail = await prisma.preInvoiceDetail.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PreInvoiceDetailCreateManyArgs>(args?: SelectSubset<T, PreInvoiceDetailCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PreInvoiceDetails and returns the data saved in the database.
     * @param {PreInvoiceDetailCreateManyAndReturnArgs} args - Arguments to create many PreInvoiceDetails.
     * @example
     * // Create many PreInvoiceDetails
     * const preInvoiceDetail = await prisma.preInvoiceDetail.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PreInvoiceDetails and only return the `id`
     * const preInvoiceDetailWithIdOnly = await prisma.preInvoiceDetail.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PreInvoiceDetailCreateManyAndReturnArgs>(args?: SelectSubset<T, PreInvoiceDetailCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PreInvoiceDetailPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PreInvoiceDetail.
     * @param {PreInvoiceDetailDeleteArgs} args - Arguments to delete one PreInvoiceDetail.
     * @example
     * // Delete one PreInvoiceDetail
     * const PreInvoiceDetail = await prisma.preInvoiceDetail.delete({
     *   where: {
     *     // ... filter to delete one PreInvoiceDetail
     *   }
     * })
     * 
     */
    delete<T extends PreInvoiceDetailDeleteArgs>(args: SelectSubset<T, PreInvoiceDetailDeleteArgs<ExtArgs>>): Prisma__PreInvoiceDetailClient<$Result.GetResult<Prisma.$PreInvoiceDetailPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PreInvoiceDetail.
     * @param {PreInvoiceDetailUpdateArgs} args - Arguments to update one PreInvoiceDetail.
     * @example
     * // Update one PreInvoiceDetail
     * const preInvoiceDetail = await prisma.preInvoiceDetail.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PreInvoiceDetailUpdateArgs>(args: SelectSubset<T, PreInvoiceDetailUpdateArgs<ExtArgs>>): Prisma__PreInvoiceDetailClient<$Result.GetResult<Prisma.$PreInvoiceDetailPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PreInvoiceDetails.
     * @param {PreInvoiceDetailDeleteManyArgs} args - Arguments to filter PreInvoiceDetails to delete.
     * @example
     * // Delete a few PreInvoiceDetails
     * const { count } = await prisma.preInvoiceDetail.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PreInvoiceDetailDeleteManyArgs>(args?: SelectSubset<T, PreInvoiceDetailDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PreInvoiceDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PreInvoiceDetailUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PreInvoiceDetails
     * const preInvoiceDetail = await prisma.preInvoiceDetail.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PreInvoiceDetailUpdateManyArgs>(args: SelectSubset<T, PreInvoiceDetailUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PreInvoiceDetails and returns the data updated in the database.
     * @param {PreInvoiceDetailUpdateManyAndReturnArgs} args - Arguments to update many PreInvoiceDetails.
     * @example
     * // Update many PreInvoiceDetails
     * const preInvoiceDetail = await prisma.preInvoiceDetail.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PreInvoiceDetails and only return the `id`
     * const preInvoiceDetailWithIdOnly = await prisma.preInvoiceDetail.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PreInvoiceDetailUpdateManyAndReturnArgs>(args: SelectSubset<T, PreInvoiceDetailUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PreInvoiceDetailPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PreInvoiceDetail.
     * @param {PreInvoiceDetailUpsertArgs} args - Arguments to update or create a PreInvoiceDetail.
     * @example
     * // Update or create a PreInvoiceDetail
     * const preInvoiceDetail = await prisma.preInvoiceDetail.upsert({
     *   create: {
     *     // ... data to create a PreInvoiceDetail
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PreInvoiceDetail we want to update
     *   }
     * })
     */
    upsert<T extends PreInvoiceDetailUpsertArgs>(args: SelectSubset<T, PreInvoiceDetailUpsertArgs<ExtArgs>>): Prisma__PreInvoiceDetailClient<$Result.GetResult<Prisma.$PreInvoiceDetailPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PreInvoiceDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PreInvoiceDetailCountArgs} args - Arguments to filter PreInvoiceDetails to count.
     * @example
     * // Count the number of PreInvoiceDetails
     * const count = await prisma.preInvoiceDetail.count({
     *   where: {
     *     // ... the filter for the PreInvoiceDetails we want to count
     *   }
     * })
    **/
    count<T extends PreInvoiceDetailCountArgs>(
      args?: Subset<T, PreInvoiceDetailCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PreInvoiceDetailCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PreInvoiceDetail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PreInvoiceDetailAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PreInvoiceDetailAggregateArgs>(args: Subset<T, PreInvoiceDetailAggregateArgs>): Prisma.PrismaPromise<GetPreInvoiceDetailAggregateType<T>>

    /**
     * Group by PreInvoiceDetail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PreInvoiceDetailGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PreInvoiceDetailGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PreInvoiceDetailGroupByArgs['orderBy'] }
        : { orderBy?: PreInvoiceDetailGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PreInvoiceDetailGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPreInvoiceDetailGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PreInvoiceDetail model
   */
  readonly fields: PreInvoiceDetailFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PreInvoiceDetail.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PreInvoiceDetailClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    CurrencyType<T extends PreInvoiceDetail$CurrencyTypeArgs<ExtArgs> = {}>(args?: Subset<T, PreInvoiceDetail$CurrencyTypeArgs<ExtArgs>>): Prisma__CurrencyTypeClient<$Result.GetResult<Prisma.$CurrencyTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    person<T extends PreInvoiceDetail$personArgs<ExtArgs> = {}>(args?: Subset<T, PreInvoiceDetail$personArgs<ExtArgs>>): Prisma__PeopleClient<$Result.GetResult<Prisma.$PeoplePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    preInvoice<T extends PreInvoiceDetail$preInvoiceArgs<ExtArgs> = {}>(args?: Subset<T, PreInvoiceDetail$preInvoiceArgs<ExtArgs>>): Prisma__PreInvoiceClient<$Result.GetResult<Prisma.$PreInvoicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PreInvoiceDetail model
   */
  interface PreInvoiceDetailFieldRefs {
    readonly id: FieldRef<"PreInvoiceDetail", 'Int'>
    readonly preInvoiceId: FieldRef<"PreInvoiceDetail", 'Int'>
    readonly personId: FieldRef<"PreInvoiceDetail", 'Int'>
    readonly status: FieldRef<"PreInvoiceDetail", 'String'>
    readonly value: FieldRef<"PreInvoiceDetail", 'Decimal'>
    readonly currency_type: FieldRef<"PreInvoiceDetail", 'Int'>
    readonly billableDays: FieldRef<"PreInvoiceDetail", 'Decimal'>
    readonly leaveDays: FieldRef<"PreInvoiceDetail", 'Decimal'>
    readonly totalConsumeDays: FieldRef<"PreInvoiceDetail", 'Decimal'>
    readonly createdAt: FieldRef<"PreInvoiceDetail", 'DateTime'>
    readonly updatedAt: FieldRef<"PreInvoiceDetail", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PreInvoiceDetail findUnique
   */
  export type PreInvoiceDetailFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoiceDetail
     */
    select?: PreInvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoiceDetail
     */
    omit?: PreInvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceDetailInclude<ExtArgs> | null
    /**
     * Filter, which PreInvoiceDetail to fetch.
     */
    where: PreInvoiceDetailWhereUniqueInput
  }

  /**
   * PreInvoiceDetail findUniqueOrThrow
   */
  export type PreInvoiceDetailFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoiceDetail
     */
    select?: PreInvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoiceDetail
     */
    omit?: PreInvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceDetailInclude<ExtArgs> | null
    /**
     * Filter, which PreInvoiceDetail to fetch.
     */
    where: PreInvoiceDetailWhereUniqueInput
  }

  /**
   * PreInvoiceDetail findFirst
   */
  export type PreInvoiceDetailFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoiceDetail
     */
    select?: PreInvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoiceDetail
     */
    omit?: PreInvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceDetailInclude<ExtArgs> | null
    /**
     * Filter, which PreInvoiceDetail to fetch.
     */
    where?: PreInvoiceDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PreInvoiceDetails to fetch.
     */
    orderBy?: PreInvoiceDetailOrderByWithRelationInput | PreInvoiceDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PreInvoiceDetails.
     */
    cursor?: PreInvoiceDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PreInvoiceDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PreInvoiceDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PreInvoiceDetails.
     */
    distinct?: PreInvoiceDetailScalarFieldEnum | PreInvoiceDetailScalarFieldEnum[]
  }

  /**
   * PreInvoiceDetail findFirstOrThrow
   */
  export type PreInvoiceDetailFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoiceDetail
     */
    select?: PreInvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoiceDetail
     */
    omit?: PreInvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceDetailInclude<ExtArgs> | null
    /**
     * Filter, which PreInvoiceDetail to fetch.
     */
    where?: PreInvoiceDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PreInvoiceDetails to fetch.
     */
    orderBy?: PreInvoiceDetailOrderByWithRelationInput | PreInvoiceDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PreInvoiceDetails.
     */
    cursor?: PreInvoiceDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PreInvoiceDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PreInvoiceDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PreInvoiceDetails.
     */
    distinct?: PreInvoiceDetailScalarFieldEnum | PreInvoiceDetailScalarFieldEnum[]
  }

  /**
   * PreInvoiceDetail findMany
   */
  export type PreInvoiceDetailFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoiceDetail
     */
    select?: PreInvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoiceDetail
     */
    omit?: PreInvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceDetailInclude<ExtArgs> | null
    /**
     * Filter, which PreInvoiceDetails to fetch.
     */
    where?: PreInvoiceDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PreInvoiceDetails to fetch.
     */
    orderBy?: PreInvoiceDetailOrderByWithRelationInput | PreInvoiceDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PreInvoiceDetails.
     */
    cursor?: PreInvoiceDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PreInvoiceDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PreInvoiceDetails.
     */
    skip?: number
    distinct?: PreInvoiceDetailScalarFieldEnum | PreInvoiceDetailScalarFieldEnum[]
  }

  /**
   * PreInvoiceDetail create
   */
  export type PreInvoiceDetailCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoiceDetail
     */
    select?: PreInvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoiceDetail
     */
    omit?: PreInvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceDetailInclude<ExtArgs> | null
    /**
     * The data needed to create a PreInvoiceDetail.
     */
    data: XOR<PreInvoiceDetailCreateInput, PreInvoiceDetailUncheckedCreateInput>
  }

  /**
   * PreInvoiceDetail createMany
   */
  export type PreInvoiceDetailCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PreInvoiceDetails.
     */
    data: PreInvoiceDetailCreateManyInput | PreInvoiceDetailCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PreInvoiceDetail createManyAndReturn
   */
  export type PreInvoiceDetailCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoiceDetail
     */
    select?: PreInvoiceDetailSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoiceDetail
     */
    omit?: PreInvoiceDetailOmit<ExtArgs> | null
    /**
     * The data used to create many PreInvoiceDetails.
     */
    data: PreInvoiceDetailCreateManyInput | PreInvoiceDetailCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceDetailIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PreInvoiceDetail update
   */
  export type PreInvoiceDetailUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoiceDetail
     */
    select?: PreInvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoiceDetail
     */
    omit?: PreInvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceDetailInclude<ExtArgs> | null
    /**
     * The data needed to update a PreInvoiceDetail.
     */
    data: XOR<PreInvoiceDetailUpdateInput, PreInvoiceDetailUncheckedUpdateInput>
    /**
     * Choose, which PreInvoiceDetail to update.
     */
    where: PreInvoiceDetailWhereUniqueInput
  }

  /**
   * PreInvoiceDetail updateMany
   */
  export type PreInvoiceDetailUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PreInvoiceDetails.
     */
    data: XOR<PreInvoiceDetailUpdateManyMutationInput, PreInvoiceDetailUncheckedUpdateManyInput>
    /**
     * Filter which PreInvoiceDetails to update
     */
    where?: PreInvoiceDetailWhereInput
    /**
     * Limit how many PreInvoiceDetails to update.
     */
    limit?: number
  }

  /**
   * PreInvoiceDetail updateManyAndReturn
   */
  export type PreInvoiceDetailUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoiceDetail
     */
    select?: PreInvoiceDetailSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoiceDetail
     */
    omit?: PreInvoiceDetailOmit<ExtArgs> | null
    /**
     * The data used to update PreInvoiceDetails.
     */
    data: XOR<PreInvoiceDetailUpdateManyMutationInput, PreInvoiceDetailUncheckedUpdateManyInput>
    /**
     * Filter which PreInvoiceDetails to update
     */
    where?: PreInvoiceDetailWhereInput
    /**
     * Limit how many PreInvoiceDetails to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceDetailIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PreInvoiceDetail upsert
   */
  export type PreInvoiceDetailUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoiceDetail
     */
    select?: PreInvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoiceDetail
     */
    omit?: PreInvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceDetailInclude<ExtArgs> | null
    /**
     * The filter to search for the PreInvoiceDetail to update in case it exists.
     */
    where: PreInvoiceDetailWhereUniqueInput
    /**
     * In case the PreInvoiceDetail found by the `where` argument doesn't exist, create a new PreInvoiceDetail with this data.
     */
    create: XOR<PreInvoiceDetailCreateInput, PreInvoiceDetailUncheckedCreateInput>
    /**
     * In case the PreInvoiceDetail was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PreInvoiceDetailUpdateInput, PreInvoiceDetailUncheckedUpdateInput>
  }

  /**
   * PreInvoiceDetail delete
   */
  export type PreInvoiceDetailDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoiceDetail
     */
    select?: PreInvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoiceDetail
     */
    omit?: PreInvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceDetailInclude<ExtArgs> | null
    /**
     * Filter which PreInvoiceDetail to delete.
     */
    where: PreInvoiceDetailWhereUniqueInput
  }

  /**
   * PreInvoiceDetail deleteMany
   */
  export type PreInvoiceDetailDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PreInvoiceDetails to delete
     */
    where?: PreInvoiceDetailWhereInput
    /**
     * Limit how many PreInvoiceDetails to delete.
     */
    limit?: number
  }

  /**
   * PreInvoiceDetail.CurrencyType
   */
  export type PreInvoiceDetail$CurrencyTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyType
     */
    select?: CurrencyTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyType
     */
    omit?: CurrencyTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyTypeInclude<ExtArgs> | null
    where?: CurrencyTypeWhereInput
  }

  /**
   * PreInvoiceDetail.person
   */
  export type PreInvoiceDetail$personArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the People
     */
    select?: PeopleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the People
     */
    omit?: PeopleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeopleInclude<ExtArgs> | null
    where?: PeopleWhereInput
  }

  /**
   * PreInvoiceDetail.preInvoice
   */
  export type PreInvoiceDetail$preInvoiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoice
     */
    select?: PreInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoice
     */
    omit?: PreInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceInclude<ExtArgs> | null
    where?: PreInvoiceWhereInput
  }

  /**
   * PreInvoiceDetail without action
   */
  export type PreInvoiceDetailDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreInvoiceDetail
     */
    select?: PreInvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PreInvoiceDetail
     */
    omit?: PreInvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreInvoiceDetailInclude<ExtArgs> | null
  }


  /**
   * Model Project
   */

  export type AggregateProject = {
    _count: ProjectCountAggregateOutputType | null
    _avg: ProjectAvgAggregateOutputType | null
    _sum: ProjectSumAggregateOutputType | null
    _min: ProjectMinAggregateOutputType | null
    _max: ProjectMaxAggregateOutputType | null
  }

  export type ProjectAvgAggregateOutputType = {
    id: number | null
    clientId: number | null
  }

  export type ProjectSumAggregateOutputType = {
    id: number | null
    clientId: number | null
  }

  export type ProjectMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    clientId: number | null
    startDate: Date | null
    endDate: Date | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProjectMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    clientId: number | null
    startDate: Date | null
    endDate: Date | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProjectCountAggregateOutputType = {
    id: number
    name: number
    description: number
    clientId: number
    startDate: number
    endDate: number
    status: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProjectAvgAggregateInputType = {
    id?: true
    clientId?: true
  }

  export type ProjectSumAggregateInputType = {
    id?: true
    clientId?: true
  }

  export type ProjectMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    clientId?: true
    startDate?: true
    endDate?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProjectMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    clientId?: true
    startDate?: true
    endDate?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProjectCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    clientId?: true
    startDate?: true
    endDate?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProjectAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Project to aggregate.
     */
    where?: ProjectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     */
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProjectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Projects
    **/
    _count?: true | ProjectCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProjectAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProjectSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProjectMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProjectMaxAggregateInputType
  }

  export type GetProjectAggregateType<T extends ProjectAggregateArgs> = {
        [P in keyof T & keyof AggregateProject]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProject[P]>
      : GetScalarType<T[P], AggregateProject[P]>
  }




  export type ProjectGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProjectWhereInput
    orderBy?: ProjectOrderByWithAggregationInput | ProjectOrderByWithAggregationInput[]
    by: ProjectScalarFieldEnum[] | ProjectScalarFieldEnum
    having?: ProjectScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProjectCountAggregateInputType | true
    _avg?: ProjectAvgAggregateInputType
    _sum?: ProjectSumAggregateInputType
    _min?: ProjectMinAggregateInputType
    _max?: ProjectMaxAggregateInputType
  }

  export type ProjectGroupByOutputType = {
    id: number
    name: string
    description: string | null
    clientId: number | null
    startDate: Date | null
    endDate: Date | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
    _count: ProjectCountAggregateOutputType | null
    _avg: ProjectAvgAggregateOutputType | null
    _sum: ProjectSumAggregateOutputType | null
    _min: ProjectMinAggregateOutputType | null
    _max: ProjectMaxAggregateOutputType | null
  }

  type GetProjectGroupByPayload<T extends ProjectGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProjectGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProjectGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProjectGroupByOutputType[P]>
            : GetScalarType<T[P], ProjectGroupByOutputType[P]>
        }
      >
    >


  export type ProjectSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    clientId?: boolean
    startDate?: boolean
    endDate?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | Project$clientArgs<ExtArgs>
  }, ExtArgs["result"]["project"]>

  export type ProjectSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    clientId?: boolean
    startDate?: boolean
    endDate?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | Project$clientArgs<ExtArgs>
  }, ExtArgs["result"]["project"]>

  export type ProjectSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    clientId?: boolean
    startDate?: boolean
    endDate?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | Project$clientArgs<ExtArgs>
  }, ExtArgs["result"]["project"]>

  export type ProjectSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    clientId?: boolean
    startDate?: boolean
    endDate?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProjectOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "clientId" | "startDate" | "endDate" | "status" | "createdAt" | "updatedAt", ExtArgs["result"]["project"]>
  export type ProjectInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | Project$clientArgs<ExtArgs>
  }
  export type ProjectIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | Project$clientArgs<ExtArgs>
  }
  export type ProjectIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | Project$clientArgs<ExtArgs>
  }

  export type $ProjectPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Project"
    objects: {
      client: Prisma.$ClientPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string | null
      clientId: number | null
      startDate: Date | null
      endDate: Date | null
      status: string | null
      createdAt: Date | null
      updatedAt: Date | null
    }, ExtArgs["result"]["project"]>
    composites: {}
  }

  type ProjectGetPayload<S extends boolean | null | undefined | ProjectDefaultArgs> = $Result.GetResult<Prisma.$ProjectPayload, S>

  type ProjectCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProjectFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProjectCountAggregateInputType | true
    }

  export interface ProjectDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Project'], meta: { name: 'Project' } }
    /**
     * Find zero or one Project that matches the filter.
     * @param {ProjectFindUniqueArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProjectFindUniqueArgs>(args: SelectSubset<T, ProjectFindUniqueArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Project that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProjectFindUniqueOrThrowArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProjectFindUniqueOrThrowArgs>(args: SelectSubset<T, ProjectFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Project that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectFindFirstArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProjectFindFirstArgs>(args?: SelectSubset<T, ProjectFindFirstArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Project that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectFindFirstOrThrowArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProjectFindFirstOrThrowArgs>(args?: SelectSubset<T, ProjectFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Projects that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Projects
     * const projects = await prisma.project.findMany()
     * 
     * // Get first 10 Projects
     * const projects = await prisma.project.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const projectWithIdOnly = await prisma.project.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProjectFindManyArgs>(args?: SelectSubset<T, ProjectFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Project.
     * @param {ProjectCreateArgs} args - Arguments to create a Project.
     * @example
     * // Create one Project
     * const Project = await prisma.project.create({
     *   data: {
     *     // ... data to create a Project
     *   }
     * })
     * 
     */
    create<T extends ProjectCreateArgs>(args: SelectSubset<T, ProjectCreateArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Projects.
     * @param {ProjectCreateManyArgs} args - Arguments to create many Projects.
     * @example
     * // Create many Projects
     * const project = await prisma.project.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProjectCreateManyArgs>(args?: SelectSubset<T, ProjectCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Projects and returns the data saved in the database.
     * @param {ProjectCreateManyAndReturnArgs} args - Arguments to create many Projects.
     * @example
     * // Create many Projects
     * const project = await prisma.project.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Projects and only return the `id`
     * const projectWithIdOnly = await prisma.project.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProjectCreateManyAndReturnArgs>(args?: SelectSubset<T, ProjectCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Project.
     * @param {ProjectDeleteArgs} args - Arguments to delete one Project.
     * @example
     * // Delete one Project
     * const Project = await prisma.project.delete({
     *   where: {
     *     // ... filter to delete one Project
     *   }
     * })
     * 
     */
    delete<T extends ProjectDeleteArgs>(args: SelectSubset<T, ProjectDeleteArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Project.
     * @param {ProjectUpdateArgs} args - Arguments to update one Project.
     * @example
     * // Update one Project
     * const project = await prisma.project.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProjectUpdateArgs>(args: SelectSubset<T, ProjectUpdateArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Projects.
     * @param {ProjectDeleteManyArgs} args - Arguments to filter Projects to delete.
     * @example
     * // Delete a few Projects
     * const { count } = await prisma.project.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProjectDeleteManyArgs>(args?: SelectSubset<T, ProjectDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Projects
     * const project = await prisma.project.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProjectUpdateManyArgs>(args: SelectSubset<T, ProjectUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Projects and returns the data updated in the database.
     * @param {ProjectUpdateManyAndReturnArgs} args - Arguments to update many Projects.
     * @example
     * // Update many Projects
     * const project = await prisma.project.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Projects and only return the `id`
     * const projectWithIdOnly = await prisma.project.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProjectUpdateManyAndReturnArgs>(args: SelectSubset<T, ProjectUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Project.
     * @param {ProjectUpsertArgs} args - Arguments to update or create a Project.
     * @example
     * // Update or create a Project
     * const project = await prisma.project.upsert({
     *   create: {
     *     // ... data to create a Project
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Project we want to update
     *   }
     * })
     */
    upsert<T extends ProjectUpsertArgs>(args: SelectSubset<T, ProjectUpsertArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectCountArgs} args - Arguments to filter Projects to count.
     * @example
     * // Count the number of Projects
     * const count = await prisma.project.count({
     *   where: {
     *     // ... the filter for the Projects we want to count
     *   }
     * })
    **/
    count<T extends ProjectCountArgs>(
      args?: Subset<T, ProjectCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProjectCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Project.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProjectAggregateArgs>(args: Subset<T, ProjectAggregateArgs>): Prisma.PrismaPromise<GetProjectAggregateType<T>>

    /**
     * Group by Project.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProjectGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProjectGroupByArgs['orderBy'] }
        : { orderBy?: ProjectGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProjectGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProjectGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Project model
   */
  readonly fields: ProjectFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Project.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProjectClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends Project$clientArgs<ExtArgs> = {}>(args?: Subset<T, Project$clientArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Project model
   */
  interface ProjectFieldRefs {
    readonly id: FieldRef<"Project", 'Int'>
    readonly name: FieldRef<"Project", 'String'>
    readonly description: FieldRef<"Project", 'String'>
    readonly clientId: FieldRef<"Project", 'Int'>
    readonly startDate: FieldRef<"Project", 'DateTime'>
    readonly endDate: FieldRef<"Project", 'DateTime'>
    readonly status: FieldRef<"Project", 'String'>
    readonly createdAt: FieldRef<"Project", 'DateTime'>
    readonly updatedAt: FieldRef<"Project", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Project findUnique
   */
  export type ProjectFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter, which Project to fetch.
     */
    where: ProjectWhereUniqueInput
  }

  /**
   * Project findUniqueOrThrow
   */
  export type ProjectFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter, which Project to fetch.
     */
    where: ProjectWhereUniqueInput
  }

  /**
   * Project findFirst
   */
  export type ProjectFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter, which Project to fetch.
     */
    where?: ProjectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     */
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Projects.
     */
    cursor?: ProjectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Projects.
     */
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * Project findFirstOrThrow
   */
  export type ProjectFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter, which Project to fetch.
     */
    where?: ProjectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     */
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Projects.
     */
    cursor?: ProjectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Projects.
     */
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * Project findMany
   */
  export type ProjectFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter, which Projects to fetch.
     */
    where?: ProjectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     */
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Projects.
     */
    cursor?: ProjectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     */
    skip?: number
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * Project create
   */
  export type ProjectCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * The data needed to create a Project.
     */
    data: XOR<ProjectCreateInput, ProjectUncheckedCreateInput>
  }

  /**
   * Project createMany
   */
  export type ProjectCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Projects.
     */
    data: ProjectCreateManyInput | ProjectCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Project createManyAndReturn
   */
  export type ProjectCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * The data used to create many Projects.
     */
    data: ProjectCreateManyInput | ProjectCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Project update
   */
  export type ProjectUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * The data needed to update a Project.
     */
    data: XOR<ProjectUpdateInput, ProjectUncheckedUpdateInput>
    /**
     * Choose, which Project to update.
     */
    where: ProjectWhereUniqueInput
  }

  /**
   * Project updateMany
   */
  export type ProjectUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Projects.
     */
    data: XOR<ProjectUpdateManyMutationInput, ProjectUncheckedUpdateManyInput>
    /**
     * Filter which Projects to update
     */
    where?: ProjectWhereInput
    /**
     * Limit how many Projects to update.
     */
    limit?: number
  }

  /**
   * Project updateManyAndReturn
   */
  export type ProjectUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * The data used to update Projects.
     */
    data: XOR<ProjectUpdateManyMutationInput, ProjectUncheckedUpdateManyInput>
    /**
     * Filter which Projects to update
     */
    where?: ProjectWhereInput
    /**
     * Limit how many Projects to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Project upsert
   */
  export type ProjectUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * The filter to search for the Project to update in case it exists.
     */
    where: ProjectWhereUniqueInput
    /**
     * In case the Project found by the `where` argument doesn't exist, create a new Project with this data.
     */
    create: XOR<ProjectCreateInput, ProjectUncheckedCreateInput>
    /**
     * In case the Project was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProjectUpdateInput, ProjectUncheckedUpdateInput>
  }

  /**
   * Project delete
   */
  export type ProjectDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter which Project to delete.
     */
    where: ProjectWhereUniqueInput
  }

  /**
   * Project deleteMany
   */
  export type ProjectDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Projects to delete
     */
    where?: ProjectWhereInput
    /**
     * Limit how many Projects to delete.
     */
    limit?: number
  }

  /**
   * Project.client
   */
  export type Project$clientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    where?: ClientWhereInput
  }

  /**
   * Project without action
   */
  export type ProjectDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
  }


  /**
   * Model CurrencyHistory
   */

  export type AggregateCurrencyHistory = {
    _count: CurrencyHistoryCountAggregateOutputType | null
    _avg: CurrencyHistoryAvgAggregateOutputType | null
    _sum: CurrencyHistorySumAggregateOutputType | null
    _min: CurrencyHistoryMinAggregateOutputType | null
    _max: CurrencyHistoryMaxAggregateOutputType | null
  }

  export type CurrencyHistoryAvgAggregateOutputType = {
    id: number | null
    usd: number | null
    uf: number | null
  }

  export type CurrencyHistorySumAggregateOutputType = {
    id: number | null
    usd: number | null
    uf: number | null
  }

  export type CurrencyHistoryMinAggregateOutputType = {
    id: number | null
    date: Date | null
    usd: number | null
    uf: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CurrencyHistoryMaxAggregateOutputType = {
    id: number | null
    date: Date | null
    usd: number | null
    uf: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CurrencyHistoryCountAggregateOutputType = {
    id: number
    date: number
    usd: number
    uf: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type CurrencyHistoryAvgAggregateInputType = {
    id?: true
    usd?: true
    uf?: true
  }

  export type CurrencyHistorySumAggregateInputType = {
    id?: true
    usd?: true
    uf?: true
  }

  export type CurrencyHistoryMinAggregateInputType = {
    id?: true
    date?: true
    usd?: true
    uf?: true
    created_at?: true
    updated_at?: true
  }

  export type CurrencyHistoryMaxAggregateInputType = {
    id?: true
    date?: true
    usd?: true
    uf?: true
    created_at?: true
    updated_at?: true
  }

  export type CurrencyHistoryCountAggregateInputType = {
    id?: true
    date?: true
    usd?: true
    uf?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type CurrencyHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CurrencyHistory to aggregate.
     */
    where?: CurrencyHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CurrencyHistories to fetch.
     */
    orderBy?: CurrencyHistoryOrderByWithRelationInput | CurrencyHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CurrencyHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CurrencyHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CurrencyHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CurrencyHistories
    **/
    _count?: true | CurrencyHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CurrencyHistoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CurrencyHistorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CurrencyHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CurrencyHistoryMaxAggregateInputType
  }

  export type GetCurrencyHistoryAggregateType<T extends CurrencyHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateCurrencyHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCurrencyHistory[P]>
      : GetScalarType<T[P], AggregateCurrencyHistory[P]>
  }




  export type CurrencyHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CurrencyHistoryWhereInput
    orderBy?: CurrencyHistoryOrderByWithAggregationInput | CurrencyHistoryOrderByWithAggregationInput[]
    by: CurrencyHistoryScalarFieldEnum[] | CurrencyHistoryScalarFieldEnum
    having?: CurrencyHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CurrencyHistoryCountAggregateInputType | true
    _avg?: CurrencyHistoryAvgAggregateInputType
    _sum?: CurrencyHistorySumAggregateInputType
    _min?: CurrencyHistoryMinAggregateInputType
    _max?: CurrencyHistoryMaxAggregateInputType
  }

  export type CurrencyHistoryGroupByOutputType = {
    id: number
    date: Date
    usd: number
    uf: number
    created_at: Date
    updated_at: Date
    _count: CurrencyHistoryCountAggregateOutputType | null
    _avg: CurrencyHistoryAvgAggregateOutputType | null
    _sum: CurrencyHistorySumAggregateOutputType | null
    _min: CurrencyHistoryMinAggregateOutputType | null
    _max: CurrencyHistoryMaxAggregateOutputType | null
  }

  type GetCurrencyHistoryGroupByPayload<T extends CurrencyHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CurrencyHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CurrencyHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CurrencyHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], CurrencyHistoryGroupByOutputType[P]>
        }
      >
    >


  export type CurrencyHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    date?: boolean
    usd?: boolean
    uf?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["currencyHistory"]>

  export type CurrencyHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    date?: boolean
    usd?: boolean
    uf?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["currencyHistory"]>

  export type CurrencyHistorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    date?: boolean
    usd?: boolean
    uf?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["currencyHistory"]>

  export type CurrencyHistorySelectScalar = {
    id?: boolean
    date?: boolean
    usd?: boolean
    uf?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type CurrencyHistoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "date" | "usd" | "uf" | "created_at" | "updated_at", ExtArgs["result"]["currencyHistory"]>

  export type $CurrencyHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CurrencyHistory"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      date: Date
      usd: number
      uf: number
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["currencyHistory"]>
    composites: {}
  }

  type CurrencyHistoryGetPayload<S extends boolean | null | undefined | CurrencyHistoryDefaultArgs> = $Result.GetResult<Prisma.$CurrencyHistoryPayload, S>

  type CurrencyHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CurrencyHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CurrencyHistoryCountAggregateInputType | true
    }

  export interface CurrencyHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CurrencyHistory'], meta: { name: 'CurrencyHistory' } }
    /**
     * Find zero or one CurrencyHistory that matches the filter.
     * @param {CurrencyHistoryFindUniqueArgs} args - Arguments to find a CurrencyHistory
     * @example
     * // Get one CurrencyHistory
     * const currencyHistory = await prisma.currencyHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CurrencyHistoryFindUniqueArgs>(args: SelectSubset<T, CurrencyHistoryFindUniqueArgs<ExtArgs>>): Prisma__CurrencyHistoryClient<$Result.GetResult<Prisma.$CurrencyHistoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CurrencyHistory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CurrencyHistoryFindUniqueOrThrowArgs} args - Arguments to find a CurrencyHistory
     * @example
     * // Get one CurrencyHistory
     * const currencyHistory = await prisma.currencyHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CurrencyHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, CurrencyHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CurrencyHistoryClient<$Result.GetResult<Prisma.$CurrencyHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CurrencyHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CurrencyHistoryFindFirstArgs} args - Arguments to find a CurrencyHistory
     * @example
     * // Get one CurrencyHistory
     * const currencyHistory = await prisma.currencyHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CurrencyHistoryFindFirstArgs>(args?: SelectSubset<T, CurrencyHistoryFindFirstArgs<ExtArgs>>): Prisma__CurrencyHistoryClient<$Result.GetResult<Prisma.$CurrencyHistoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CurrencyHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CurrencyHistoryFindFirstOrThrowArgs} args - Arguments to find a CurrencyHistory
     * @example
     * // Get one CurrencyHistory
     * const currencyHistory = await prisma.currencyHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CurrencyHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, CurrencyHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__CurrencyHistoryClient<$Result.GetResult<Prisma.$CurrencyHistoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CurrencyHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CurrencyHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CurrencyHistories
     * const currencyHistories = await prisma.currencyHistory.findMany()
     * 
     * // Get first 10 CurrencyHistories
     * const currencyHistories = await prisma.currencyHistory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const currencyHistoryWithIdOnly = await prisma.currencyHistory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CurrencyHistoryFindManyArgs>(args?: SelectSubset<T, CurrencyHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CurrencyHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CurrencyHistory.
     * @param {CurrencyHistoryCreateArgs} args - Arguments to create a CurrencyHistory.
     * @example
     * // Create one CurrencyHistory
     * const CurrencyHistory = await prisma.currencyHistory.create({
     *   data: {
     *     // ... data to create a CurrencyHistory
     *   }
     * })
     * 
     */
    create<T extends CurrencyHistoryCreateArgs>(args: SelectSubset<T, CurrencyHistoryCreateArgs<ExtArgs>>): Prisma__CurrencyHistoryClient<$Result.GetResult<Prisma.$CurrencyHistoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CurrencyHistories.
     * @param {CurrencyHistoryCreateManyArgs} args - Arguments to create many CurrencyHistories.
     * @example
     * // Create many CurrencyHistories
     * const currencyHistory = await prisma.currencyHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CurrencyHistoryCreateManyArgs>(args?: SelectSubset<T, CurrencyHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CurrencyHistories and returns the data saved in the database.
     * @param {CurrencyHistoryCreateManyAndReturnArgs} args - Arguments to create many CurrencyHistories.
     * @example
     * // Create many CurrencyHistories
     * const currencyHistory = await prisma.currencyHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CurrencyHistories and only return the `id`
     * const currencyHistoryWithIdOnly = await prisma.currencyHistory.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CurrencyHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, CurrencyHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CurrencyHistoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CurrencyHistory.
     * @param {CurrencyHistoryDeleteArgs} args - Arguments to delete one CurrencyHistory.
     * @example
     * // Delete one CurrencyHistory
     * const CurrencyHistory = await prisma.currencyHistory.delete({
     *   where: {
     *     // ... filter to delete one CurrencyHistory
     *   }
     * })
     * 
     */
    delete<T extends CurrencyHistoryDeleteArgs>(args: SelectSubset<T, CurrencyHistoryDeleteArgs<ExtArgs>>): Prisma__CurrencyHistoryClient<$Result.GetResult<Prisma.$CurrencyHistoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CurrencyHistory.
     * @param {CurrencyHistoryUpdateArgs} args - Arguments to update one CurrencyHistory.
     * @example
     * // Update one CurrencyHistory
     * const currencyHistory = await prisma.currencyHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CurrencyHistoryUpdateArgs>(args: SelectSubset<T, CurrencyHistoryUpdateArgs<ExtArgs>>): Prisma__CurrencyHistoryClient<$Result.GetResult<Prisma.$CurrencyHistoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CurrencyHistories.
     * @param {CurrencyHistoryDeleteManyArgs} args - Arguments to filter CurrencyHistories to delete.
     * @example
     * // Delete a few CurrencyHistories
     * const { count } = await prisma.currencyHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CurrencyHistoryDeleteManyArgs>(args?: SelectSubset<T, CurrencyHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CurrencyHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CurrencyHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CurrencyHistories
     * const currencyHistory = await prisma.currencyHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CurrencyHistoryUpdateManyArgs>(args: SelectSubset<T, CurrencyHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CurrencyHistories and returns the data updated in the database.
     * @param {CurrencyHistoryUpdateManyAndReturnArgs} args - Arguments to update many CurrencyHistories.
     * @example
     * // Update many CurrencyHistories
     * const currencyHistory = await prisma.currencyHistory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CurrencyHistories and only return the `id`
     * const currencyHistoryWithIdOnly = await prisma.currencyHistory.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CurrencyHistoryUpdateManyAndReturnArgs>(args: SelectSubset<T, CurrencyHistoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CurrencyHistoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CurrencyHistory.
     * @param {CurrencyHistoryUpsertArgs} args - Arguments to update or create a CurrencyHistory.
     * @example
     * // Update or create a CurrencyHistory
     * const currencyHistory = await prisma.currencyHistory.upsert({
     *   create: {
     *     // ... data to create a CurrencyHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CurrencyHistory we want to update
     *   }
     * })
     */
    upsert<T extends CurrencyHistoryUpsertArgs>(args: SelectSubset<T, CurrencyHistoryUpsertArgs<ExtArgs>>): Prisma__CurrencyHistoryClient<$Result.GetResult<Prisma.$CurrencyHistoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CurrencyHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CurrencyHistoryCountArgs} args - Arguments to filter CurrencyHistories to count.
     * @example
     * // Count the number of CurrencyHistories
     * const count = await prisma.currencyHistory.count({
     *   where: {
     *     // ... the filter for the CurrencyHistories we want to count
     *   }
     * })
    **/
    count<T extends CurrencyHistoryCountArgs>(
      args?: Subset<T, CurrencyHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CurrencyHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CurrencyHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CurrencyHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CurrencyHistoryAggregateArgs>(args: Subset<T, CurrencyHistoryAggregateArgs>): Prisma.PrismaPromise<GetCurrencyHistoryAggregateType<T>>

    /**
     * Group by CurrencyHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CurrencyHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CurrencyHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CurrencyHistoryGroupByArgs['orderBy'] }
        : { orderBy?: CurrencyHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CurrencyHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCurrencyHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CurrencyHistory model
   */
  readonly fields: CurrencyHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CurrencyHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CurrencyHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CurrencyHistory model
   */
  interface CurrencyHistoryFieldRefs {
    readonly id: FieldRef<"CurrencyHistory", 'Int'>
    readonly date: FieldRef<"CurrencyHistory", 'DateTime'>
    readonly usd: FieldRef<"CurrencyHistory", 'Float'>
    readonly uf: FieldRef<"CurrencyHistory", 'Float'>
    readonly created_at: FieldRef<"CurrencyHistory", 'DateTime'>
    readonly updated_at: FieldRef<"CurrencyHistory", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CurrencyHistory findUnique
   */
  export type CurrencyHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyHistory
     */
    select?: CurrencyHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyHistory
     */
    omit?: CurrencyHistoryOmit<ExtArgs> | null
    /**
     * Filter, which CurrencyHistory to fetch.
     */
    where: CurrencyHistoryWhereUniqueInput
  }

  /**
   * CurrencyHistory findUniqueOrThrow
   */
  export type CurrencyHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyHistory
     */
    select?: CurrencyHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyHistory
     */
    omit?: CurrencyHistoryOmit<ExtArgs> | null
    /**
     * Filter, which CurrencyHistory to fetch.
     */
    where: CurrencyHistoryWhereUniqueInput
  }

  /**
   * CurrencyHistory findFirst
   */
  export type CurrencyHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyHistory
     */
    select?: CurrencyHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyHistory
     */
    omit?: CurrencyHistoryOmit<ExtArgs> | null
    /**
     * Filter, which CurrencyHistory to fetch.
     */
    where?: CurrencyHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CurrencyHistories to fetch.
     */
    orderBy?: CurrencyHistoryOrderByWithRelationInput | CurrencyHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CurrencyHistories.
     */
    cursor?: CurrencyHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CurrencyHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CurrencyHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CurrencyHistories.
     */
    distinct?: CurrencyHistoryScalarFieldEnum | CurrencyHistoryScalarFieldEnum[]
  }

  /**
   * CurrencyHistory findFirstOrThrow
   */
  export type CurrencyHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyHistory
     */
    select?: CurrencyHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyHistory
     */
    omit?: CurrencyHistoryOmit<ExtArgs> | null
    /**
     * Filter, which CurrencyHistory to fetch.
     */
    where?: CurrencyHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CurrencyHistories to fetch.
     */
    orderBy?: CurrencyHistoryOrderByWithRelationInput | CurrencyHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CurrencyHistories.
     */
    cursor?: CurrencyHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CurrencyHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CurrencyHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CurrencyHistories.
     */
    distinct?: CurrencyHistoryScalarFieldEnum | CurrencyHistoryScalarFieldEnum[]
  }

  /**
   * CurrencyHistory findMany
   */
  export type CurrencyHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyHistory
     */
    select?: CurrencyHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyHistory
     */
    omit?: CurrencyHistoryOmit<ExtArgs> | null
    /**
     * Filter, which CurrencyHistories to fetch.
     */
    where?: CurrencyHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CurrencyHistories to fetch.
     */
    orderBy?: CurrencyHistoryOrderByWithRelationInput | CurrencyHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CurrencyHistories.
     */
    cursor?: CurrencyHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CurrencyHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CurrencyHistories.
     */
    skip?: number
    distinct?: CurrencyHistoryScalarFieldEnum | CurrencyHistoryScalarFieldEnum[]
  }

  /**
   * CurrencyHistory create
   */
  export type CurrencyHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyHistory
     */
    select?: CurrencyHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyHistory
     */
    omit?: CurrencyHistoryOmit<ExtArgs> | null
    /**
     * The data needed to create a CurrencyHistory.
     */
    data: XOR<CurrencyHistoryCreateInput, CurrencyHistoryUncheckedCreateInput>
  }

  /**
   * CurrencyHistory createMany
   */
  export type CurrencyHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CurrencyHistories.
     */
    data: CurrencyHistoryCreateManyInput | CurrencyHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CurrencyHistory createManyAndReturn
   */
  export type CurrencyHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyHistory
     */
    select?: CurrencyHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyHistory
     */
    omit?: CurrencyHistoryOmit<ExtArgs> | null
    /**
     * The data used to create many CurrencyHistories.
     */
    data: CurrencyHistoryCreateManyInput | CurrencyHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CurrencyHistory update
   */
  export type CurrencyHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyHistory
     */
    select?: CurrencyHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyHistory
     */
    omit?: CurrencyHistoryOmit<ExtArgs> | null
    /**
     * The data needed to update a CurrencyHistory.
     */
    data: XOR<CurrencyHistoryUpdateInput, CurrencyHistoryUncheckedUpdateInput>
    /**
     * Choose, which CurrencyHistory to update.
     */
    where: CurrencyHistoryWhereUniqueInput
  }

  /**
   * CurrencyHistory updateMany
   */
  export type CurrencyHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CurrencyHistories.
     */
    data: XOR<CurrencyHistoryUpdateManyMutationInput, CurrencyHistoryUncheckedUpdateManyInput>
    /**
     * Filter which CurrencyHistories to update
     */
    where?: CurrencyHistoryWhereInput
    /**
     * Limit how many CurrencyHistories to update.
     */
    limit?: number
  }

  /**
   * CurrencyHistory updateManyAndReturn
   */
  export type CurrencyHistoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyHistory
     */
    select?: CurrencyHistorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyHistory
     */
    omit?: CurrencyHistoryOmit<ExtArgs> | null
    /**
     * The data used to update CurrencyHistories.
     */
    data: XOR<CurrencyHistoryUpdateManyMutationInput, CurrencyHistoryUncheckedUpdateManyInput>
    /**
     * Filter which CurrencyHistories to update
     */
    where?: CurrencyHistoryWhereInput
    /**
     * Limit how many CurrencyHistories to update.
     */
    limit?: number
  }

  /**
   * CurrencyHistory upsert
   */
  export type CurrencyHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyHistory
     */
    select?: CurrencyHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyHistory
     */
    omit?: CurrencyHistoryOmit<ExtArgs> | null
    /**
     * The filter to search for the CurrencyHistory to update in case it exists.
     */
    where: CurrencyHistoryWhereUniqueInput
    /**
     * In case the CurrencyHistory found by the `where` argument doesn't exist, create a new CurrencyHistory with this data.
     */
    create: XOR<CurrencyHistoryCreateInput, CurrencyHistoryUncheckedCreateInput>
    /**
     * In case the CurrencyHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CurrencyHistoryUpdateInput, CurrencyHistoryUncheckedUpdateInput>
  }

  /**
   * CurrencyHistory delete
   */
  export type CurrencyHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyHistory
     */
    select?: CurrencyHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyHistory
     */
    omit?: CurrencyHistoryOmit<ExtArgs> | null
    /**
     * Filter which CurrencyHistory to delete.
     */
    where: CurrencyHistoryWhereUniqueInput
  }

  /**
   * CurrencyHistory deleteMany
   */
  export type CurrencyHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CurrencyHistories to delete
     */
    where?: CurrencyHistoryWhereInput
    /**
     * Limit how many CurrencyHistories to delete.
     */
    limit?: number
  }

  /**
   * CurrencyHistory without action
   */
  export type CurrencyHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyHistory
     */
    select?: CurrencyHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the CurrencyHistory
     */
    omit?: CurrencyHistoryOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AFPInstitutionScalarFieldEnum: {
    id: 'id',
    name: 'name',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AFPInstitutionScalarFieldEnum = (typeof AFPInstitutionScalarFieldEnum)[keyof typeof AFPInstitutionScalarFieldEnum]


  export const CurrencyTypeScalarFieldEnum: {
    id: 'id',
    name: 'name',
    symbol: 'symbol',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CurrencyTypeScalarFieldEnum = (typeof CurrencyTypeScalarFieldEnum)[keyof typeof CurrencyTypeScalarFieldEnum]


  export const ClientScalarFieldEnum: {
    id: 'id',
    name: 'name',
    currencyTypeId: 'currencyTypeId',
    billableDay: 'billableDay',
    rut: 'rut',
    address: 'address',
    companyName: 'companyName',
    marginPercentage: 'marginPercentage',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ClientScalarFieldEnum = (typeof ClientScalarFieldEnum)[keyof typeof ClientScalarFieldEnum]


  export const ContactScalarFieldEnum: {
    id: 'id',
    name: 'name',
    lastName: 'lastName',
    email: 'email',
    phone: 'phone',
    clientId: 'clientId',
    technicalStacksId: 'technicalStacksId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ContactScalarFieldEnum = (typeof ContactScalarFieldEnum)[keyof typeof ContactScalarFieldEnum]


  export const HealthInstitutionScalarFieldEnum: {
    id: 'id',
    name: 'name',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type HealthInstitutionScalarFieldEnum = (typeof HealthInstitutionScalarFieldEnum)[keyof typeof HealthInstitutionScalarFieldEnum]


  export const HolidaysScalarFieldEnum: {
    id: 'id',
    date: 'date',
    name: 'name',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type HolidaysScalarFieldEnum = (typeof HolidaysScalarFieldEnum)[keyof typeof HolidaysScalarFieldEnum]


  export const JobTitleScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type JobTitleScalarFieldEnum = (typeof JobTitleScalarFieldEnum)[keyof typeof JobTitleScalarFieldEnum]


  export const RoleScalarFieldEnum: {
    id: 'id',
    name: 'name',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RoleScalarFieldEnum = (typeof RoleScalarFieldEnum)[keyof typeof RoleScalarFieldEnum]


  export const SeniorityScalarFieldEnum: {
    id: 'id',
    name: 'name',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SeniorityScalarFieldEnum = (typeof SeniorityScalarFieldEnum)[keyof typeof SeniorityScalarFieldEnum]


  export const SkillLevelScalarFieldEnum: {
    id: 'id',
    name: 'name',
    level: 'level',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SkillLevelScalarFieldEnum = (typeof SkillLevelScalarFieldEnum)[keyof typeof SkillLevelScalarFieldEnum]


  export const TechnicalsStacksScalarFieldEnum: {
    id: 'id',
    name: 'name',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type TechnicalsStacksScalarFieldEnum = (typeof TechnicalsStacksScalarFieldEnum)[keyof typeof TechnicalsStacksScalarFieldEnum]


  export const PriceScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    value: 'value',
    currency_type: 'currency_type',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PriceScalarFieldEnum = (typeof PriceScalarFieldEnum)[keyof typeof PriceScalarFieldEnum]


  export const PeopleScalarFieldEnum: {
    id: 'id',
    name: 'name',
    lastName: 'lastName',
    dni: 'dni',
    corporateName: 'corporateName',
    corporateEmail: 'corporateEmail',
    contractType: 'contractType',
    contractStart: 'contractStart',
    contractEnd: 'contractEnd',
    contractClientEnd: 'contractClientEnd',
    roleId: 'roleId',
    isActive: 'isActive',
    causal: 'causal',
    reason: 'reason',
    clientId: 'clientId',
    remote: 'remote',
    jobTitleId: 'jobTitleId',
    seniorityId: 'seniorityId',
    technicalStacksId: 'technicalStacksId',
    salesManager: 'salesManager',
    searchManager: 'searchManager',
    deliveryManager: 'deliveryManager',
    administrativeArea: 'administrativeArea',
    leader: 'leader',
    leaderMail: 'leaderMail',
    leaderPhone: 'leaderPhone',
    birth: 'birth',
    phone: 'phone',
    email: 'email',
    address: 'address',
    sublocality: 'sublocality',
    locality: 'locality',
    country: 'country',
    nationality: 'nationality',
    afpInstitutionId: 'afpInstitutionId',
    healthInstitutionId: 'healthInstitutionId',
    bank: 'bank',
    accountNumber: 'accountNumber',
    salaryCurrencyTypeId: 'salaryCurrencyTypeId',
    netSalary: 'netSalary',
    feeCurrencyTypeId: 'feeCurrencyTypeId',
    serviceFee: 'serviceFee',
    fee: 'fee',
    billableDay: 'billableDay',
    laptopCurrencyTypeId: 'laptopCurrencyTypeId',
    laptopBonus: 'laptopBonus',
    comment: 'comment',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PeopleScalarFieldEnum = (typeof PeopleScalarFieldEnum)[keyof typeof PeopleScalarFieldEnum]


  export const LeaveDaysScalarFieldEnum: {
    id: 'id',
    personId: 'personId',
    startDate: 'startDate',
    endDate: 'endDate',
    reason: 'reason',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type LeaveDaysScalarFieldEnum = (typeof LeaveDaysScalarFieldEnum)[keyof typeof LeaveDaysScalarFieldEnum]


  export const PreInvoiceScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    contactId: 'contactId',
    total: 'total',
    status: 'status',
    ocNumber: 'ocNumber',
    hesNumber: 'hesNumber',
    invoiceNumber: 'invoiceNumber',
    month: 'month',
    year: 'year',
    value: 'value',
    rejectNote: 'rejectNote',
    ocAmount: 'ocAmount',
    edpNumber: 'edpNumber',
    completedBy: 'completedBy',
    completedAt: 'completedAt',
    ufValueUsed: 'ufValueUsed',
    ufDateUsed: 'ufDateUsed',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PreInvoiceScalarFieldEnum = (typeof PreInvoiceScalarFieldEnum)[keyof typeof PreInvoiceScalarFieldEnum]


  export const PreInvoiceDetailScalarFieldEnum: {
    id: 'id',
    preInvoiceId: 'preInvoiceId',
    personId: 'personId',
    status: 'status',
    value: 'value',
    currency_type: 'currency_type',
    billableDays: 'billableDays',
    leaveDays: 'leaveDays',
    totalConsumeDays: 'totalConsumeDays',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PreInvoiceDetailScalarFieldEnum = (typeof PreInvoiceDetailScalarFieldEnum)[keyof typeof PreInvoiceDetailScalarFieldEnum]


  export const ProjectScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    clientId: 'clientId',
    startDate: 'startDate',
    endDate: 'endDate',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProjectScalarFieldEnum = (typeof ProjectScalarFieldEnum)[keyof typeof ProjectScalarFieldEnum]


  export const CurrencyHistoryScalarFieldEnum: {
    id: 'id',
    date: 'date',
    usd: 'usd',
    uf: 'uf',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type CurrencyHistoryScalarFieldEnum = (typeof CurrencyHistoryScalarFieldEnum)[keyof typeof CurrencyHistoryScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type AFPInstitutionWhereInput = {
    AND?: AFPInstitutionWhereInput | AFPInstitutionWhereInput[]
    OR?: AFPInstitutionWhereInput[]
    NOT?: AFPInstitutionWhereInput | AFPInstitutionWhereInput[]
    id?: IntFilter<"AFPInstitution"> | number
    name?: StringFilter<"AFPInstitution"> | string
    createdAt?: DateTimeNullableFilter<"AFPInstitution"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"AFPInstitution"> | Date | string | null
    people?: PeopleListRelationFilter
  }

  export type AFPInstitutionOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    people?: PeopleOrderByRelationAggregateInput
  }

  export type AFPInstitutionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: AFPInstitutionWhereInput | AFPInstitutionWhereInput[]
    OR?: AFPInstitutionWhereInput[]
    NOT?: AFPInstitutionWhereInput | AFPInstitutionWhereInput[]
    name?: StringFilter<"AFPInstitution"> | string
    createdAt?: DateTimeNullableFilter<"AFPInstitution"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"AFPInstitution"> | Date | string | null
    people?: PeopleListRelationFilter
  }, "id">

  export type AFPInstitutionOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: AFPInstitutionCountOrderByAggregateInput
    _avg?: AFPInstitutionAvgOrderByAggregateInput
    _max?: AFPInstitutionMaxOrderByAggregateInput
    _min?: AFPInstitutionMinOrderByAggregateInput
    _sum?: AFPInstitutionSumOrderByAggregateInput
  }

  export type AFPInstitutionScalarWhereWithAggregatesInput = {
    AND?: AFPInstitutionScalarWhereWithAggregatesInput | AFPInstitutionScalarWhereWithAggregatesInput[]
    OR?: AFPInstitutionScalarWhereWithAggregatesInput[]
    NOT?: AFPInstitutionScalarWhereWithAggregatesInput | AFPInstitutionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"AFPInstitution"> | number
    name?: StringWithAggregatesFilter<"AFPInstitution"> | string
    createdAt?: DateTimeNullableWithAggregatesFilter<"AFPInstitution"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"AFPInstitution"> | Date | string | null
  }

  export type CurrencyTypeWhereInput = {
    AND?: CurrencyTypeWhereInput | CurrencyTypeWhereInput[]
    OR?: CurrencyTypeWhereInput[]
    NOT?: CurrencyTypeWhereInput | CurrencyTypeWhereInput[]
    id?: IntFilter<"CurrencyType"> | number
    name?: StringFilter<"CurrencyType"> | string
    symbol?: StringFilter<"CurrencyType"> | string
    createdAt?: DateTimeNullableFilter<"CurrencyType"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"CurrencyType"> | Date | string | null
    clients?: ClientListRelationFilter
    peopleSalary?: PeopleListRelationFilter
    peopleFee?: PeopleListRelationFilter
    peopleLaptop?: PeopleListRelationFilter
    PreInvoiceDetail?: PreInvoiceDetailListRelationFilter
    Price?: PriceListRelationFilter
  }

  export type CurrencyTypeOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    symbol?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    clients?: ClientOrderByRelationAggregateInput
    peopleSalary?: PeopleOrderByRelationAggregateInput
    peopleFee?: PeopleOrderByRelationAggregateInput
    peopleLaptop?: PeopleOrderByRelationAggregateInput
    PreInvoiceDetail?: PreInvoiceDetailOrderByRelationAggregateInput
    Price?: PriceOrderByRelationAggregateInput
  }

  export type CurrencyTypeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CurrencyTypeWhereInput | CurrencyTypeWhereInput[]
    OR?: CurrencyTypeWhereInput[]
    NOT?: CurrencyTypeWhereInput | CurrencyTypeWhereInput[]
    name?: StringFilter<"CurrencyType"> | string
    symbol?: StringFilter<"CurrencyType"> | string
    createdAt?: DateTimeNullableFilter<"CurrencyType"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"CurrencyType"> | Date | string | null
    clients?: ClientListRelationFilter
    peopleSalary?: PeopleListRelationFilter
    peopleFee?: PeopleListRelationFilter
    peopleLaptop?: PeopleListRelationFilter
    PreInvoiceDetail?: PreInvoiceDetailListRelationFilter
    Price?: PriceListRelationFilter
  }, "id">

  export type CurrencyTypeOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    symbol?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: CurrencyTypeCountOrderByAggregateInput
    _avg?: CurrencyTypeAvgOrderByAggregateInput
    _max?: CurrencyTypeMaxOrderByAggregateInput
    _min?: CurrencyTypeMinOrderByAggregateInput
    _sum?: CurrencyTypeSumOrderByAggregateInput
  }

  export type CurrencyTypeScalarWhereWithAggregatesInput = {
    AND?: CurrencyTypeScalarWhereWithAggregatesInput | CurrencyTypeScalarWhereWithAggregatesInput[]
    OR?: CurrencyTypeScalarWhereWithAggregatesInput[]
    NOT?: CurrencyTypeScalarWhereWithAggregatesInput | CurrencyTypeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CurrencyType"> | number
    name?: StringWithAggregatesFilter<"CurrencyType"> | string
    symbol?: StringWithAggregatesFilter<"CurrencyType"> | string
    createdAt?: DateTimeNullableWithAggregatesFilter<"CurrencyType"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"CurrencyType"> | Date | string | null
  }

  export type ClientWhereInput = {
    AND?: ClientWhereInput | ClientWhereInput[]
    OR?: ClientWhereInput[]
    NOT?: ClientWhereInput | ClientWhereInput[]
    id?: IntFilter<"Client"> | number
    name?: StringFilter<"Client"> | string
    currencyTypeId?: IntNullableFilter<"Client"> | number | null
    billableDay?: DecimalNullableFilter<"Client"> | Decimal | DecimalJsLike | number | string | null
    rut?: StringNullableFilter<"Client"> | string | null
    address?: StringNullableFilter<"Client"> | string | null
    companyName?: StringNullableFilter<"Client"> | string | null
    marginPercentage?: DecimalNullableFilter<"Client"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeNullableFilter<"Client"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Client"> | Date | string | null
    currencyType?: XOR<CurrencyTypeNullableScalarRelationFilter, CurrencyTypeWhereInput> | null
    contacts?: ContactListRelationFilter
    people?: PeopleListRelationFilter
    preInvoices?: PreInvoiceListRelationFilter
    projects?: ProjectListRelationFilter
  }

  export type ClientOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    currencyTypeId?: SortOrderInput | SortOrder
    billableDay?: SortOrderInput | SortOrder
    rut?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    companyName?: SortOrderInput | SortOrder
    marginPercentage?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    currencyType?: CurrencyTypeOrderByWithRelationInput
    contacts?: ContactOrderByRelationAggregateInput
    people?: PeopleOrderByRelationAggregateInput
    preInvoices?: PreInvoiceOrderByRelationAggregateInput
    projects?: ProjectOrderByRelationAggregateInput
  }

  export type ClientWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ClientWhereInput | ClientWhereInput[]
    OR?: ClientWhereInput[]
    NOT?: ClientWhereInput | ClientWhereInput[]
    name?: StringFilter<"Client"> | string
    currencyTypeId?: IntNullableFilter<"Client"> | number | null
    billableDay?: DecimalNullableFilter<"Client"> | Decimal | DecimalJsLike | number | string | null
    rut?: StringNullableFilter<"Client"> | string | null
    address?: StringNullableFilter<"Client"> | string | null
    companyName?: StringNullableFilter<"Client"> | string | null
    marginPercentage?: DecimalNullableFilter<"Client"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeNullableFilter<"Client"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Client"> | Date | string | null
    currencyType?: XOR<CurrencyTypeNullableScalarRelationFilter, CurrencyTypeWhereInput> | null
    contacts?: ContactListRelationFilter
    people?: PeopleListRelationFilter
    preInvoices?: PreInvoiceListRelationFilter
    projects?: ProjectListRelationFilter
  }, "id">

  export type ClientOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    currencyTypeId?: SortOrderInput | SortOrder
    billableDay?: SortOrderInput | SortOrder
    rut?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    companyName?: SortOrderInput | SortOrder
    marginPercentage?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: ClientCountOrderByAggregateInput
    _avg?: ClientAvgOrderByAggregateInput
    _max?: ClientMaxOrderByAggregateInput
    _min?: ClientMinOrderByAggregateInput
    _sum?: ClientSumOrderByAggregateInput
  }

  export type ClientScalarWhereWithAggregatesInput = {
    AND?: ClientScalarWhereWithAggregatesInput | ClientScalarWhereWithAggregatesInput[]
    OR?: ClientScalarWhereWithAggregatesInput[]
    NOT?: ClientScalarWhereWithAggregatesInput | ClientScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Client"> | number
    name?: StringWithAggregatesFilter<"Client"> | string
    currencyTypeId?: IntNullableWithAggregatesFilter<"Client"> | number | null
    billableDay?: DecimalNullableWithAggregatesFilter<"Client"> | Decimal | DecimalJsLike | number | string | null
    rut?: StringNullableWithAggregatesFilter<"Client"> | string | null
    address?: StringNullableWithAggregatesFilter<"Client"> | string | null
    companyName?: StringNullableWithAggregatesFilter<"Client"> | string | null
    marginPercentage?: DecimalNullableWithAggregatesFilter<"Client"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Client"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Client"> | Date | string | null
  }

  export type ContactWhereInput = {
    AND?: ContactWhereInput | ContactWhereInput[]
    OR?: ContactWhereInput[]
    NOT?: ContactWhereInput | ContactWhereInput[]
    id?: IntFilter<"Contact"> | number
    name?: StringFilter<"Contact"> | string
    lastName?: StringNullableFilter<"Contact"> | string | null
    email?: StringNullableFilter<"Contact"> | string | null
    phone?: StringNullableFilter<"Contact"> | string | null
    clientId?: IntNullableFilter<"Contact"> | number | null
    technicalStacksId?: IntNullableFilter<"Contact"> | number | null
    createdAt?: DateTimeNullableFilter<"Contact"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Contact"> | Date | string | null
    client?: XOR<ClientNullableScalarRelationFilter, ClientWhereInput> | null
    technicalStacks?: XOR<TechnicalsStacksNullableScalarRelationFilter, TechnicalsStacksWhereInput> | null
    preInvoices?: PreInvoiceListRelationFilter
  }

  export type ContactOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    lastName?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    clientId?: SortOrderInput | SortOrder
    technicalStacksId?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    client?: ClientOrderByWithRelationInput
    technicalStacks?: TechnicalsStacksOrderByWithRelationInput
    preInvoices?: PreInvoiceOrderByRelationAggregateInput
  }

  export type ContactWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ContactWhereInput | ContactWhereInput[]
    OR?: ContactWhereInput[]
    NOT?: ContactWhereInput | ContactWhereInput[]
    name?: StringFilter<"Contact"> | string
    lastName?: StringNullableFilter<"Contact"> | string | null
    email?: StringNullableFilter<"Contact"> | string | null
    phone?: StringNullableFilter<"Contact"> | string | null
    clientId?: IntNullableFilter<"Contact"> | number | null
    technicalStacksId?: IntNullableFilter<"Contact"> | number | null
    createdAt?: DateTimeNullableFilter<"Contact"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Contact"> | Date | string | null
    client?: XOR<ClientNullableScalarRelationFilter, ClientWhereInput> | null
    technicalStacks?: XOR<TechnicalsStacksNullableScalarRelationFilter, TechnicalsStacksWhereInput> | null
    preInvoices?: PreInvoiceListRelationFilter
  }, "id">

  export type ContactOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    lastName?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    clientId?: SortOrderInput | SortOrder
    technicalStacksId?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: ContactCountOrderByAggregateInput
    _avg?: ContactAvgOrderByAggregateInput
    _max?: ContactMaxOrderByAggregateInput
    _min?: ContactMinOrderByAggregateInput
    _sum?: ContactSumOrderByAggregateInput
  }

  export type ContactScalarWhereWithAggregatesInput = {
    AND?: ContactScalarWhereWithAggregatesInput | ContactScalarWhereWithAggregatesInput[]
    OR?: ContactScalarWhereWithAggregatesInput[]
    NOT?: ContactScalarWhereWithAggregatesInput | ContactScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Contact"> | number
    name?: StringWithAggregatesFilter<"Contact"> | string
    lastName?: StringNullableWithAggregatesFilter<"Contact"> | string | null
    email?: StringNullableWithAggregatesFilter<"Contact"> | string | null
    phone?: StringNullableWithAggregatesFilter<"Contact"> | string | null
    clientId?: IntNullableWithAggregatesFilter<"Contact"> | number | null
    technicalStacksId?: IntNullableWithAggregatesFilter<"Contact"> | number | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Contact"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Contact"> | Date | string | null
  }

  export type HealthInstitutionWhereInput = {
    AND?: HealthInstitutionWhereInput | HealthInstitutionWhereInput[]
    OR?: HealthInstitutionWhereInput[]
    NOT?: HealthInstitutionWhereInput | HealthInstitutionWhereInput[]
    id?: IntFilter<"HealthInstitution"> | number
    name?: StringFilter<"HealthInstitution"> | string
    createdAt?: DateTimeNullableFilter<"HealthInstitution"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"HealthInstitution"> | Date | string | null
    people?: PeopleListRelationFilter
  }

  export type HealthInstitutionOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    people?: PeopleOrderByRelationAggregateInput
  }

  export type HealthInstitutionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: HealthInstitutionWhereInput | HealthInstitutionWhereInput[]
    OR?: HealthInstitutionWhereInput[]
    NOT?: HealthInstitutionWhereInput | HealthInstitutionWhereInput[]
    name?: StringFilter<"HealthInstitution"> | string
    createdAt?: DateTimeNullableFilter<"HealthInstitution"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"HealthInstitution"> | Date | string | null
    people?: PeopleListRelationFilter
  }, "id">

  export type HealthInstitutionOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: HealthInstitutionCountOrderByAggregateInput
    _avg?: HealthInstitutionAvgOrderByAggregateInput
    _max?: HealthInstitutionMaxOrderByAggregateInput
    _min?: HealthInstitutionMinOrderByAggregateInput
    _sum?: HealthInstitutionSumOrderByAggregateInput
  }

  export type HealthInstitutionScalarWhereWithAggregatesInput = {
    AND?: HealthInstitutionScalarWhereWithAggregatesInput | HealthInstitutionScalarWhereWithAggregatesInput[]
    OR?: HealthInstitutionScalarWhereWithAggregatesInput[]
    NOT?: HealthInstitutionScalarWhereWithAggregatesInput | HealthInstitutionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"HealthInstitution"> | number
    name?: StringWithAggregatesFilter<"HealthInstitution"> | string
    createdAt?: DateTimeNullableWithAggregatesFilter<"HealthInstitution"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"HealthInstitution"> | Date | string | null
  }

  export type HolidaysWhereInput = {
    AND?: HolidaysWhereInput | HolidaysWhereInput[]
    OR?: HolidaysWhereInput[]
    NOT?: HolidaysWhereInput | HolidaysWhereInput[]
    id?: IntFilter<"Holidays"> | number
    date?: DateTimeFilter<"Holidays"> | Date | string
    name?: StringFilter<"Holidays"> | string
    createdAt?: DateTimeNullableFilter<"Holidays"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Holidays"> | Date | string | null
  }

  export type HolidaysOrderByWithRelationInput = {
    id?: SortOrder
    date?: SortOrder
    name?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
  }

  export type HolidaysWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: HolidaysWhereInput | HolidaysWhereInput[]
    OR?: HolidaysWhereInput[]
    NOT?: HolidaysWhereInput | HolidaysWhereInput[]
    date?: DateTimeFilter<"Holidays"> | Date | string
    name?: StringFilter<"Holidays"> | string
    createdAt?: DateTimeNullableFilter<"Holidays"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Holidays"> | Date | string | null
  }, "id">

  export type HolidaysOrderByWithAggregationInput = {
    id?: SortOrder
    date?: SortOrder
    name?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: HolidaysCountOrderByAggregateInput
    _avg?: HolidaysAvgOrderByAggregateInput
    _max?: HolidaysMaxOrderByAggregateInput
    _min?: HolidaysMinOrderByAggregateInput
    _sum?: HolidaysSumOrderByAggregateInput
  }

  export type HolidaysScalarWhereWithAggregatesInput = {
    AND?: HolidaysScalarWhereWithAggregatesInput | HolidaysScalarWhereWithAggregatesInput[]
    OR?: HolidaysScalarWhereWithAggregatesInput[]
    NOT?: HolidaysScalarWhereWithAggregatesInput | HolidaysScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Holidays"> | number
    date?: DateTimeWithAggregatesFilter<"Holidays"> | Date | string
    name?: StringWithAggregatesFilter<"Holidays"> | string
    createdAt?: DateTimeNullableWithAggregatesFilter<"Holidays"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Holidays"> | Date | string | null
  }

  export type JobTitleWhereInput = {
    AND?: JobTitleWhereInput | JobTitleWhereInput[]
    OR?: JobTitleWhereInput[]
    NOT?: JobTitleWhereInput | JobTitleWhereInput[]
    id?: IntFilter<"JobTitle"> | number
    name?: StringFilter<"JobTitle"> | string
    description?: StringNullableFilter<"JobTitle"> | string | null
    createdAt?: DateTimeNullableFilter<"JobTitle"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"JobTitle"> | Date | string | null
    people?: PeopleListRelationFilter
  }

  export type JobTitleOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    people?: PeopleOrderByRelationAggregateInput
  }

  export type JobTitleWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: JobTitleWhereInput | JobTitleWhereInput[]
    OR?: JobTitleWhereInput[]
    NOT?: JobTitleWhereInput | JobTitleWhereInput[]
    name?: StringFilter<"JobTitle"> | string
    description?: StringNullableFilter<"JobTitle"> | string | null
    createdAt?: DateTimeNullableFilter<"JobTitle"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"JobTitle"> | Date | string | null
    people?: PeopleListRelationFilter
  }, "id">

  export type JobTitleOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: JobTitleCountOrderByAggregateInput
    _avg?: JobTitleAvgOrderByAggregateInput
    _max?: JobTitleMaxOrderByAggregateInput
    _min?: JobTitleMinOrderByAggregateInput
    _sum?: JobTitleSumOrderByAggregateInput
  }

  export type JobTitleScalarWhereWithAggregatesInput = {
    AND?: JobTitleScalarWhereWithAggregatesInput | JobTitleScalarWhereWithAggregatesInput[]
    OR?: JobTitleScalarWhereWithAggregatesInput[]
    NOT?: JobTitleScalarWhereWithAggregatesInput | JobTitleScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"JobTitle"> | number
    name?: StringWithAggregatesFilter<"JobTitle"> | string
    description?: StringNullableWithAggregatesFilter<"JobTitle"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"JobTitle"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"JobTitle"> | Date | string | null
  }

  export type RoleWhereInput = {
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    id?: IntFilter<"Role"> | number
    name?: StringFilter<"Role"> | string
    createdAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    people?: PeopleListRelationFilter
  }

  export type RoleOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    people?: PeopleOrderByRelationAggregateInput
  }

  export type RoleWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    name?: StringFilter<"Role"> | string
    createdAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    people?: PeopleListRelationFilter
  }, "id">

  export type RoleOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: RoleCountOrderByAggregateInput
    _avg?: RoleAvgOrderByAggregateInput
    _max?: RoleMaxOrderByAggregateInput
    _min?: RoleMinOrderByAggregateInput
    _sum?: RoleSumOrderByAggregateInput
  }

  export type RoleScalarWhereWithAggregatesInput = {
    AND?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    OR?: RoleScalarWhereWithAggregatesInput[]
    NOT?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Role"> | number
    name?: StringWithAggregatesFilter<"Role"> | string
    createdAt?: DateTimeNullableWithAggregatesFilter<"Role"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Role"> | Date | string | null
  }

  export type SeniorityWhereInput = {
    AND?: SeniorityWhereInput | SeniorityWhereInput[]
    OR?: SeniorityWhereInput[]
    NOT?: SeniorityWhereInput | SeniorityWhereInput[]
    id?: IntFilter<"Seniority"> | number
    name?: StringFilter<"Seniority"> | string
    createdAt?: DateTimeNullableFilter<"Seniority"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Seniority"> | Date | string | null
    people?: PeopleListRelationFilter
  }

  export type SeniorityOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    people?: PeopleOrderByRelationAggregateInput
  }

  export type SeniorityWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SeniorityWhereInput | SeniorityWhereInput[]
    OR?: SeniorityWhereInput[]
    NOT?: SeniorityWhereInput | SeniorityWhereInput[]
    name?: StringFilter<"Seniority"> | string
    createdAt?: DateTimeNullableFilter<"Seniority"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Seniority"> | Date | string | null
    people?: PeopleListRelationFilter
  }, "id">

  export type SeniorityOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: SeniorityCountOrderByAggregateInput
    _avg?: SeniorityAvgOrderByAggregateInput
    _max?: SeniorityMaxOrderByAggregateInput
    _min?: SeniorityMinOrderByAggregateInput
    _sum?: SenioritySumOrderByAggregateInput
  }

  export type SeniorityScalarWhereWithAggregatesInput = {
    AND?: SeniorityScalarWhereWithAggregatesInput | SeniorityScalarWhereWithAggregatesInput[]
    OR?: SeniorityScalarWhereWithAggregatesInput[]
    NOT?: SeniorityScalarWhereWithAggregatesInput | SeniorityScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Seniority"> | number
    name?: StringWithAggregatesFilter<"Seniority"> | string
    createdAt?: DateTimeNullableWithAggregatesFilter<"Seniority"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Seniority"> | Date | string | null
  }

  export type SkillLevelWhereInput = {
    AND?: SkillLevelWhereInput | SkillLevelWhereInput[]
    OR?: SkillLevelWhereInput[]
    NOT?: SkillLevelWhereInput | SkillLevelWhereInput[]
    id?: IntFilter<"SkillLevel"> | number
    name?: StringFilter<"SkillLevel"> | string
    level?: StringFilter<"SkillLevel"> | string
    createdAt?: DateTimeNullableFilter<"SkillLevel"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"SkillLevel"> | Date | string | null
  }

  export type SkillLevelOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    level?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
  }

  export type SkillLevelWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SkillLevelWhereInput | SkillLevelWhereInput[]
    OR?: SkillLevelWhereInput[]
    NOT?: SkillLevelWhereInput | SkillLevelWhereInput[]
    name?: StringFilter<"SkillLevel"> | string
    level?: StringFilter<"SkillLevel"> | string
    createdAt?: DateTimeNullableFilter<"SkillLevel"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"SkillLevel"> | Date | string | null
  }, "id">

  export type SkillLevelOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    level?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: SkillLevelCountOrderByAggregateInput
    _avg?: SkillLevelAvgOrderByAggregateInput
    _max?: SkillLevelMaxOrderByAggregateInput
    _min?: SkillLevelMinOrderByAggregateInput
    _sum?: SkillLevelSumOrderByAggregateInput
  }

  export type SkillLevelScalarWhereWithAggregatesInput = {
    AND?: SkillLevelScalarWhereWithAggregatesInput | SkillLevelScalarWhereWithAggregatesInput[]
    OR?: SkillLevelScalarWhereWithAggregatesInput[]
    NOT?: SkillLevelScalarWhereWithAggregatesInput | SkillLevelScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"SkillLevel"> | number
    name?: StringWithAggregatesFilter<"SkillLevel"> | string
    level?: StringWithAggregatesFilter<"SkillLevel"> | string
    createdAt?: DateTimeNullableWithAggregatesFilter<"SkillLevel"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"SkillLevel"> | Date | string | null
  }

  export type TechnicalsStacksWhereInput = {
    AND?: TechnicalsStacksWhereInput | TechnicalsStacksWhereInput[]
    OR?: TechnicalsStacksWhereInput[]
    NOT?: TechnicalsStacksWhereInput | TechnicalsStacksWhereInput[]
    id?: IntFilter<"TechnicalsStacks"> | number
    name?: StringFilter<"TechnicalsStacks"> | string
    createdAt?: DateTimeNullableFilter<"TechnicalsStacks"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"TechnicalsStacks"> | Date | string | null
    people?: PeopleListRelationFilter
    contacts?: ContactListRelationFilter
  }

  export type TechnicalsStacksOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    people?: PeopleOrderByRelationAggregateInput
    contacts?: ContactOrderByRelationAggregateInput
  }

  export type TechnicalsStacksWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TechnicalsStacksWhereInput | TechnicalsStacksWhereInput[]
    OR?: TechnicalsStacksWhereInput[]
    NOT?: TechnicalsStacksWhereInput | TechnicalsStacksWhereInput[]
    name?: StringFilter<"TechnicalsStacks"> | string
    createdAt?: DateTimeNullableFilter<"TechnicalsStacks"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"TechnicalsStacks"> | Date | string | null
    people?: PeopleListRelationFilter
    contacts?: ContactListRelationFilter
  }, "id">

  export type TechnicalsStacksOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: TechnicalsStacksCountOrderByAggregateInput
    _avg?: TechnicalsStacksAvgOrderByAggregateInput
    _max?: TechnicalsStacksMaxOrderByAggregateInput
    _min?: TechnicalsStacksMinOrderByAggregateInput
    _sum?: TechnicalsStacksSumOrderByAggregateInput
  }

  export type TechnicalsStacksScalarWhereWithAggregatesInput = {
    AND?: TechnicalsStacksScalarWhereWithAggregatesInput | TechnicalsStacksScalarWhereWithAggregatesInput[]
    OR?: TechnicalsStacksScalarWhereWithAggregatesInput[]
    NOT?: TechnicalsStacksScalarWhereWithAggregatesInput | TechnicalsStacksScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TechnicalsStacks"> | number
    name?: StringWithAggregatesFilter<"TechnicalsStacks"> | string
    createdAt?: DateTimeNullableWithAggregatesFilter<"TechnicalsStacks"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"TechnicalsStacks"> | Date | string | null
  }

  export type PriceWhereInput = {
    AND?: PriceWhereInput | PriceWhereInput[]
    OR?: PriceWhereInput[]
    NOT?: PriceWhereInput | PriceWhereInput[]
    id?: IntFilter<"Price"> | number
    name?: StringFilter<"Price"> | string
    description?: StringNullableFilter<"Price"> | string | null
    value?: DecimalFilter<"Price"> | Decimal | DecimalJsLike | number | string
    currency_type?: IntNullableFilter<"Price"> | number | null
    createdAt?: DateTimeNullableFilter<"Price"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Price"> | Date | string | null
    CurrencyType?: XOR<CurrencyTypeNullableScalarRelationFilter, CurrencyTypeWhereInput> | null
  }

  export type PriceOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    value?: SortOrder
    currency_type?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    CurrencyType?: CurrencyTypeOrderByWithRelationInput
  }

  export type PriceWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PriceWhereInput | PriceWhereInput[]
    OR?: PriceWhereInput[]
    NOT?: PriceWhereInput | PriceWhereInput[]
    name?: StringFilter<"Price"> | string
    description?: StringNullableFilter<"Price"> | string | null
    value?: DecimalFilter<"Price"> | Decimal | DecimalJsLike | number | string
    currency_type?: IntNullableFilter<"Price"> | number | null
    createdAt?: DateTimeNullableFilter<"Price"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Price"> | Date | string | null
    CurrencyType?: XOR<CurrencyTypeNullableScalarRelationFilter, CurrencyTypeWhereInput> | null
  }, "id">

  export type PriceOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    value?: SortOrder
    currency_type?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: PriceCountOrderByAggregateInput
    _avg?: PriceAvgOrderByAggregateInput
    _max?: PriceMaxOrderByAggregateInput
    _min?: PriceMinOrderByAggregateInput
    _sum?: PriceSumOrderByAggregateInput
  }

  export type PriceScalarWhereWithAggregatesInput = {
    AND?: PriceScalarWhereWithAggregatesInput | PriceScalarWhereWithAggregatesInput[]
    OR?: PriceScalarWhereWithAggregatesInput[]
    NOT?: PriceScalarWhereWithAggregatesInput | PriceScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Price"> | number
    name?: StringWithAggregatesFilter<"Price"> | string
    description?: StringNullableWithAggregatesFilter<"Price"> | string | null
    value?: DecimalWithAggregatesFilter<"Price"> | Decimal | DecimalJsLike | number | string
    currency_type?: IntNullableWithAggregatesFilter<"Price"> | number | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Price"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Price"> | Date | string | null
  }

  export type PeopleWhereInput = {
    AND?: PeopleWhereInput | PeopleWhereInput[]
    OR?: PeopleWhereInput[]
    NOT?: PeopleWhereInput | PeopleWhereInput[]
    id?: IntFilter<"People"> | number
    name?: StringFilter<"People"> | string
    lastName?: StringFilter<"People"> | string
    dni?: StringNullableFilter<"People"> | string | null
    corporateName?: StringNullableFilter<"People"> | string | null
    corporateEmail?: StringNullableFilter<"People"> | string | null
    contractType?: StringNullableFilter<"People"> | string | null
    contractStart?: DateTimeNullableFilter<"People"> | Date | string | null
    contractEnd?: DateTimeNullableFilter<"People"> | Date | string | null
    contractClientEnd?: DateTimeNullableFilter<"People"> | Date | string | null
    roleId?: IntNullableFilter<"People"> | number | null
    isActive?: BoolNullableFilter<"People"> | boolean | null
    causal?: StringNullableFilter<"People"> | string | null
    reason?: StringNullableFilter<"People"> | string | null
    clientId?: IntNullableFilter<"People"> | number | null
    remote?: StringNullableFilter<"People"> | string | null
    jobTitleId?: IntNullableFilter<"People"> | number | null
    seniorityId?: IntNullableFilter<"People"> | number | null
    technicalStacksId?: IntNullableFilter<"People"> | number | null
    salesManager?: StringNullableFilter<"People"> | string | null
    searchManager?: StringNullableFilter<"People"> | string | null
    deliveryManager?: StringNullableFilter<"People"> | string | null
    administrativeArea?: StringNullableFilter<"People"> | string | null
    leader?: StringNullableFilter<"People"> | string | null
    leaderMail?: StringNullableFilter<"People"> | string | null
    leaderPhone?: StringNullableFilter<"People"> | string | null
    birth?: DateTimeNullableFilter<"People"> | Date | string | null
    phone?: StringNullableFilter<"People"> | string | null
    email?: StringNullableFilter<"People"> | string | null
    address?: StringNullableFilter<"People"> | string | null
    sublocality?: StringNullableFilter<"People"> | string | null
    locality?: StringNullableFilter<"People"> | string | null
    country?: StringNullableFilter<"People"> | string | null
    nationality?: StringNullableFilter<"People"> | string | null
    afpInstitutionId?: IntNullableFilter<"People"> | number | null
    healthInstitutionId?: IntNullableFilter<"People"> | number | null
    bank?: StringNullableFilter<"People"> | string | null
    accountNumber?: StringNullableFilter<"People"> | string | null
    salaryCurrencyTypeId?: IntNullableFilter<"People"> | number | null
    netSalary?: DecimalNullableFilter<"People"> | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: IntNullableFilter<"People"> | number | null
    serviceFee?: DecimalNullableFilter<"People"> | Decimal | DecimalJsLike | number | string | null
    fee?: BoolNullableFilter<"People"> | boolean | null
    billableDay?: IntNullableFilter<"People"> | number | null
    laptopCurrencyTypeId?: IntNullableFilter<"People"> | number | null
    laptopBonus?: DecimalNullableFilter<"People"> | Decimal | DecimalJsLike | number | string | null
    comment?: StringNullableFilter<"People"> | string | null
    createdAt?: DateTimeNullableFilter<"People"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"People"> | Date | string | null
    leaveDays?: LeaveDaysListRelationFilter
    afpInstitution?: XOR<AFPInstitutionNullableScalarRelationFilter, AFPInstitutionWhereInput> | null
    client?: XOR<ClientNullableScalarRelationFilter, ClientWhereInput> | null
    salaryCurrencyType?: XOR<CurrencyTypeNullableScalarRelationFilter, CurrencyTypeWhereInput> | null
    feeCurrencyType?: XOR<CurrencyTypeNullableScalarRelationFilter, CurrencyTypeWhereInput> | null
    laptopCurrencyType?: XOR<CurrencyTypeNullableScalarRelationFilter, CurrencyTypeWhereInput> | null
    healthInstitution?: XOR<HealthInstitutionNullableScalarRelationFilter, HealthInstitutionWhereInput> | null
    jobTitle?: XOR<JobTitleNullableScalarRelationFilter, JobTitleWhereInput> | null
    role?: XOR<RoleNullableScalarRelationFilter, RoleWhereInput> | null
    seniority?: XOR<SeniorityNullableScalarRelationFilter, SeniorityWhereInput> | null
    technicalStacks?: XOR<TechnicalsStacksNullableScalarRelationFilter, TechnicalsStacksWhereInput> | null
    preInvoiceDetails?: PreInvoiceDetailListRelationFilter
  }

  export type PeopleOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    lastName?: SortOrder
    dni?: SortOrderInput | SortOrder
    corporateName?: SortOrderInput | SortOrder
    corporateEmail?: SortOrderInput | SortOrder
    contractType?: SortOrderInput | SortOrder
    contractStart?: SortOrderInput | SortOrder
    contractEnd?: SortOrderInput | SortOrder
    contractClientEnd?: SortOrderInput | SortOrder
    roleId?: SortOrderInput | SortOrder
    isActive?: SortOrderInput | SortOrder
    causal?: SortOrderInput | SortOrder
    reason?: SortOrderInput | SortOrder
    clientId?: SortOrderInput | SortOrder
    remote?: SortOrderInput | SortOrder
    jobTitleId?: SortOrderInput | SortOrder
    seniorityId?: SortOrderInput | SortOrder
    technicalStacksId?: SortOrderInput | SortOrder
    salesManager?: SortOrderInput | SortOrder
    searchManager?: SortOrderInput | SortOrder
    deliveryManager?: SortOrderInput | SortOrder
    administrativeArea?: SortOrderInput | SortOrder
    leader?: SortOrderInput | SortOrder
    leaderMail?: SortOrderInput | SortOrder
    leaderPhone?: SortOrderInput | SortOrder
    birth?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    sublocality?: SortOrderInput | SortOrder
    locality?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    nationality?: SortOrderInput | SortOrder
    afpInstitutionId?: SortOrderInput | SortOrder
    healthInstitutionId?: SortOrderInput | SortOrder
    bank?: SortOrderInput | SortOrder
    accountNumber?: SortOrderInput | SortOrder
    salaryCurrencyTypeId?: SortOrderInput | SortOrder
    netSalary?: SortOrderInput | SortOrder
    feeCurrencyTypeId?: SortOrderInput | SortOrder
    serviceFee?: SortOrderInput | SortOrder
    fee?: SortOrderInput | SortOrder
    billableDay?: SortOrderInput | SortOrder
    laptopCurrencyTypeId?: SortOrderInput | SortOrder
    laptopBonus?: SortOrderInput | SortOrder
    comment?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    leaveDays?: LeaveDaysOrderByRelationAggregateInput
    afpInstitution?: AFPInstitutionOrderByWithRelationInput
    client?: ClientOrderByWithRelationInput
    salaryCurrencyType?: CurrencyTypeOrderByWithRelationInput
    feeCurrencyType?: CurrencyTypeOrderByWithRelationInput
    laptopCurrencyType?: CurrencyTypeOrderByWithRelationInput
    healthInstitution?: HealthInstitutionOrderByWithRelationInput
    jobTitle?: JobTitleOrderByWithRelationInput
    role?: RoleOrderByWithRelationInput
    seniority?: SeniorityOrderByWithRelationInput
    technicalStacks?: TechnicalsStacksOrderByWithRelationInput
    preInvoiceDetails?: PreInvoiceDetailOrderByRelationAggregateInput
  }

  export type PeopleWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PeopleWhereInput | PeopleWhereInput[]
    OR?: PeopleWhereInput[]
    NOT?: PeopleWhereInput | PeopleWhereInput[]
    name?: StringFilter<"People"> | string
    lastName?: StringFilter<"People"> | string
    dni?: StringNullableFilter<"People"> | string | null
    corporateName?: StringNullableFilter<"People"> | string | null
    corporateEmail?: StringNullableFilter<"People"> | string | null
    contractType?: StringNullableFilter<"People"> | string | null
    contractStart?: DateTimeNullableFilter<"People"> | Date | string | null
    contractEnd?: DateTimeNullableFilter<"People"> | Date | string | null
    contractClientEnd?: DateTimeNullableFilter<"People"> | Date | string | null
    roleId?: IntNullableFilter<"People"> | number | null
    isActive?: BoolNullableFilter<"People"> | boolean | null
    causal?: StringNullableFilter<"People"> | string | null
    reason?: StringNullableFilter<"People"> | string | null
    clientId?: IntNullableFilter<"People"> | number | null
    remote?: StringNullableFilter<"People"> | string | null
    jobTitleId?: IntNullableFilter<"People"> | number | null
    seniorityId?: IntNullableFilter<"People"> | number | null
    technicalStacksId?: IntNullableFilter<"People"> | number | null
    salesManager?: StringNullableFilter<"People"> | string | null
    searchManager?: StringNullableFilter<"People"> | string | null
    deliveryManager?: StringNullableFilter<"People"> | string | null
    administrativeArea?: StringNullableFilter<"People"> | string | null
    leader?: StringNullableFilter<"People"> | string | null
    leaderMail?: StringNullableFilter<"People"> | string | null
    leaderPhone?: StringNullableFilter<"People"> | string | null
    birth?: DateTimeNullableFilter<"People"> | Date | string | null
    phone?: StringNullableFilter<"People"> | string | null
    email?: StringNullableFilter<"People"> | string | null
    address?: StringNullableFilter<"People"> | string | null
    sublocality?: StringNullableFilter<"People"> | string | null
    locality?: StringNullableFilter<"People"> | string | null
    country?: StringNullableFilter<"People"> | string | null
    nationality?: StringNullableFilter<"People"> | string | null
    afpInstitutionId?: IntNullableFilter<"People"> | number | null
    healthInstitutionId?: IntNullableFilter<"People"> | number | null
    bank?: StringNullableFilter<"People"> | string | null
    accountNumber?: StringNullableFilter<"People"> | string | null
    salaryCurrencyTypeId?: IntNullableFilter<"People"> | number | null
    netSalary?: DecimalNullableFilter<"People"> | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: IntNullableFilter<"People"> | number | null
    serviceFee?: DecimalNullableFilter<"People"> | Decimal | DecimalJsLike | number | string | null
    fee?: BoolNullableFilter<"People"> | boolean | null
    billableDay?: IntNullableFilter<"People"> | number | null
    laptopCurrencyTypeId?: IntNullableFilter<"People"> | number | null
    laptopBonus?: DecimalNullableFilter<"People"> | Decimal | DecimalJsLike | number | string | null
    comment?: StringNullableFilter<"People"> | string | null
    createdAt?: DateTimeNullableFilter<"People"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"People"> | Date | string | null
    leaveDays?: LeaveDaysListRelationFilter
    afpInstitution?: XOR<AFPInstitutionNullableScalarRelationFilter, AFPInstitutionWhereInput> | null
    client?: XOR<ClientNullableScalarRelationFilter, ClientWhereInput> | null
    salaryCurrencyType?: XOR<CurrencyTypeNullableScalarRelationFilter, CurrencyTypeWhereInput> | null
    feeCurrencyType?: XOR<CurrencyTypeNullableScalarRelationFilter, CurrencyTypeWhereInput> | null
    laptopCurrencyType?: XOR<CurrencyTypeNullableScalarRelationFilter, CurrencyTypeWhereInput> | null
    healthInstitution?: XOR<HealthInstitutionNullableScalarRelationFilter, HealthInstitutionWhereInput> | null
    jobTitle?: XOR<JobTitleNullableScalarRelationFilter, JobTitleWhereInput> | null
    role?: XOR<RoleNullableScalarRelationFilter, RoleWhereInput> | null
    seniority?: XOR<SeniorityNullableScalarRelationFilter, SeniorityWhereInput> | null
    technicalStacks?: XOR<TechnicalsStacksNullableScalarRelationFilter, TechnicalsStacksWhereInput> | null
    preInvoiceDetails?: PreInvoiceDetailListRelationFilter
  }, "id">

  export type PeopleOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    lastName?: SortOrder
    dni?: SortOrderInput | SortOrder
    corporateName?: SortOrderInput | SortOrder
    corporateEmail?: SortOrderInput | SortOrder
    contractType?: SortOrderInput | SortOrder
    contractStart?: SortOrderInput | SortOrder
    contractEnd?: SortOrderInput | SortOrder
    contractClientEnd?: SortOrderInput | SortOrder
    roleId?: SortOrderInput | SortOrder
    isActive?: SortOrderInput | SortOrder
    causal?: SortOrderInput | SortOrder
    reason?: SortOrderInput | SortOrder
    clientId?: SortOrderInput | SortOrder
    remote?: SortOrderInput | SortOrder
    jobTitleId?: SortOrderInput | SortOrder
    seniorityId?: SortOrderInput | SortOrder
    technicalStacksId?: SortOrderInput | SortOrder
    salesManager?: SortOrderInput | SortOrder
    searchManager?: SortOrderInput | SortOrder
    deliveryManager?: SortOrderInput | SortOrder
    administrativeArea?: SortOrderInput | SortOrder
    leader?: SortOrderInput | SortOrder
    leaderMail?: SortOrderInput | SortOrder
    leaderPhone?: SortOrderInput | SortOrder
    birth?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    sublocality?: SortOrderInput | SortOrder
    locality?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    nationality?: SortOrderInput | SortOrder
    afpInstitutionId?: SortOrderInput | SortOrder
    healthInstitutionId?: SortOrderInput | SortOrder
    bank?: SortOrderInput | SortOrder
    accountNumber?: SortOrderInput | SortOrder
    salaryCurrencyTypeId?: SortOrderInput | SortOrder
    netSalary?: SortOrderInput | SortOrder
    feeCurrencyTypeId?: SortOrderInput | SortOrder
    serviceFee?: SortOrderInput | SortOrder
    fee?: SortOrderInput | SortOrder
    billableDay?: SortOrderInput | SortOrder
    laptopCurrencyTypeId?: SortOrderInput | SortOrder
    laptopBonus?: SortOrderInput | SortOrder
    comment?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: PeopleCountOrderByAggregateInput
    _avg?: PeopleAvgOrderByAggregateInput
    _max?: PeopleMaxOrderByAggregateInput
    _min?: PeopleMinOrderByAggregateInput
    _sum?: PeopleSumOrderByAggregateInput
  }

  export type PeopleScalarWhereWithAggregatesInput = {
    AND?: PeopleScalarWhereWithAggregatesInput | PeopleScalarWhereWithAggregatesInput[]
    OR?: PeopleScalarWhereWithAggregatesInput[]
    NOT?: PeopleScalarWhereWithAggregatesInput | PeopleScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"People"> | number
    name?: StringWithAggregatesFilter<"People"> | string
    lastName?: StringWithAggregatesFilter<"People"> | string
    dni?: StringNullableWithAggregatesFilter<"People"> | string | null
    corporateName?: StringNullableWithAggregatesFilter<"People"> | string | null
    corporateEmail?: StringNullableWithAggregatesFilter<"People"> | string | null
    contractType?: StringNullableWithAggregatesFilter<"People"> | string | null
    contractStart?: DateTimeNullableWithAggregatesFilter<"People"> | Date | string | null
    contractEnd?: DateTimeNullableWithAggregatesFilter<"People"> | Date | string | null
    contractClientEnd?: DateTimeNullableWithAggregatesFilter<"People"> | Date | string | null
    roleId?: IntNullableWithAggregatesFilter<"People"> | number | null
    isActive?: BoolNullableWithAggregatesFilter<"People"> | boolean | null
    causal?: StringNullableWithAggregatesFilter<"People"> | string | null
    reason?: StringNullableWithAggregatesFilter<"People"> | string | null
    clientId?: IntNullableWithAggregatesFilter<"People"> | number | null
    remote?: StringNullableWithAggregatesFilter<"People"> | string | null
    jobTitleId?: IntNullableWithAggregatesFilter<"People"> | number | null
    seniorityId?: IntNullableWithAggregatesFilter<"People"> | number | null
    technicalStacksId?: IntNullableWithAggregatesFilter<"People"> | number | null
    salesManager?: StringNullableWithAggregatesFilter<"People"> | string | null
    searchManager?: StringNullableWithAggregatesFilter<"People"> | string | null
    deliveryManager?: StringNullableWithAggregatesFilter<"People"> | string | null
    administrativeArea?: StringNullableWithAggregatesFilter<"People"> | string | null
    leader?: StringNullableWithAggregatesFilter<"People"> | string | null
    leaderMail?: StringNullableWithAggregatesFilter<"People"> | string | null
    leaderPhone?: StringNullableWithAggregatesFilter<"People"> | string | null
    birth?: DateTimeNullableWithAggregatesFilter<"People"> | Date | string | null
    phone?: StringNullableWithAggregatesFilter<"People"> | string | null
    email?: StringNullableWithAggregatesFilter<"People"> | string | null
    address?: StringNullableWithAggregatesFilter<"People"> | string | null
    sublocality?: StringNullableWithAggregatesFilter<"People"> | string | null
    locality?: StringNullableWithAggregatesFilter<"People"> | string | null
    country?: StringNullableWithAggregatesFilter<"People"> | string | null
    nationality?: StringNullableWithAggregatesFilter<"People"> | string | null
    afpInstitutionId?: IntNullableWithAggregatesFilter<"People"> | number | null
    healthInstitutionId?: IntNullableWithAggregatesFilter<"People"> | number | null
    bank?: StringNullableWithAggregatesFilter<"People"> | string | null
    accountNumber?: StringNullableWithAggregatesFilter<"People"> | string | null
    salaryCurrencyTypeId?: IntNullableWithAggregatesFilter<"People"> | number | null
    netSalary?: DecimalNullableWithAggregatesFilter<"People"> | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: IntNullableWithAggregatesFilter<"People"> | number | null
    serviceFee?: DecimalNullableWithAggregatesFilter<"People"> | Decimal | DecimalJsLike | number | string | null
    fee?: BoolNullableWithAggregatesFilter<"People"> | boolean | null
    billableDay?: IntNullableWithAggregatesFilter<"People"> | number | null
    laptopCurrencyTypeId?: IntNullableWithAggregatesFilter<"People"> | number | null
    laptopBonus?: DecimalNullableWithAggregatesFilter<"People"> | Decimal | DecimalJsLike | number | string | null
    comment?: StringNullableWithAggregatesFilter<"People"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"People"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"People"> | Date | string | null
  }

  export type LeaveDaysWhereInput = {
    AND?: LeaveDaysWhereInput | LeaveDaysWhereInput[]
    OR?: LeaveDaysWhereInput[]
    NOT?: LeaveDaysWhereInput | LeaveDaysWhereInput[]
    id?: IntFilter<"LeaveDays"> | number
    personId?: IntNullableFilter<"LeaveDays"> | number | null
    startDate?: DateTimeFilter<"LeaveDays"> | Date | string
    endDate?: DateTimeFilter<"LeaveDays"> | Date | string
    reason?: StringNullableFilter<"LeaveDays"> | string | null
    createdAt?: DateTimeNullableFilter<"LeaveDays"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"LeaveDays"> | Date | string | null
    person?: XOR<PeopleNullableScalarRelationFilter, PeopleWhereInput> | null
  }

  export type LeaveDaysOrderByWithRelationInput = {
    id?: SortOrder
    personId?: SortOrderInput | SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    reason?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    person?: PeopleOrderByWithRelationInput
  }

  export type LeaveDaysWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: LeaveDaysWhereInput | LeaveDaysWhereInput[]
    OR?: LeaveDaysWhereInput[]
    NOT?: LeaveDaysWhereInput | LeaveDaysWhereInput[]
    personId?: IntNullableFilter<"LeaveDays"> | number | null
    startDate?: DateTimeFilter<"LeaveDays"> | Date | string
    endDate?: DateTimeFilter<"LeaveDays"> | Date | string
    reason?: StringNullableFilter<"LeaveDays"> | string | null
    createdAt?: DateTimeNullableFilter<"LeaveDays"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"LeaveDays"> | Date | string | null
    person?: XOR<PeopleNullableScalarRelationFilter, PeopleWhereInput> | null
  }, "id">

  export type LeaveDaysOrderByWithAggregationInput = {
    id?: SortOrder
    personId?: SortOrderInput | SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    reason?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: LeaveDaysCountOrderByAggregateInput
    _avg?: LeaveDaysAvgOrderByAggregateInput
    _max?: LeaveDaysMaxOrderByAggregateInput
    _min?: LeaveDaysMinOrderByAggregateInput
    _sum?: LeaveDaysSumOrderByAggregateInput
  }

  export type LeaveDaysScalarWhereWithAggregatesInput = {
    AND?: LeaveDaysScalarWhereWithAggregatesInput | LeaveDaysScalarWhereWithAggregatesInput[]
    OR?: LeaveDaysScalarWhereWithAggregatesInput[]
    NOT?: LeaveDaysScalarWhereWithAggregatesInput | LeaveDaysScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"LeaveDays"> | number
    personId?: IntNullableWithAggregatesFilter<"LeaveDays"> | number | null
    startDate?: DateTimeWithAggregatesFilter<"LeaveDays"> | Date | string
    endDate?: DateTimeWithAggregatesFilter<"LeaveDays"> | Date | string
    reason?: StringNullableWithAggregatesFilter<"LeaveDays"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"LeaveDays"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"LeaveDays"> | Date | string | null
  }

  export type PreInvoiceWhereInput = {
    AND?: PreInvoiceWhereInput | PreInvoiceWhereInput[]
    OR?: PreInvoiceWhereInput[]
    NOT?: PreInvoiceWhereInput | PreInvoiceWhereInput[]
    id?: IntFilter<"PreInvoice"> | number
    clientId?: IntNullableFilter<"PreInvoice"> | number | null
    contactId?: IntNullableFilter<"PreInvoice"> | number | null
    total?: DecimalNullableFilter<"PreInvoice"> | Decimal | DecimalJsLike | number | string | null
    status?: StringFilter<"PreInvoice"> | string
    ocNumber?: StringNullableFilter<"PreInvoice"> | string | null
    hesNumber?: StringNullableFilter<"PreInvoice"> | string | null
    invoiceNumber?: StringNullableFilter<"PreInvoice"> | string | null
    month?: IntFilter<"PreInvoice"> | number
    year?: IntFilter<"PreInvoice"> | number
    value?: DecimalFilter<"PreInvoice"> | Decimal | DecimalJsLike | number | string
    rejectNote?: StringNullableFilter<"PreInvoice"> | string | null
    ocAmount?: DecimalNullableFilter<"PreInvoice"> | Decimal | DecimalJsLike | number | string | null
    edpNumber?: StringNullableFilter<"PreInvoice"> | string | null
    completedBy?: StringNullableFilter<"PreInvoice"> | string | null
    completedAt?: DateTimeNullableFilter<"PreInvoice"> | Date | string | null
    ufValueUsed?: DecimalNullableFilter<"PreInvoice"> | Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: DateTimeNullableFilter<"PreInvoice"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"PreInvoice"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"PreInvoice"> | Date | string | null
    client?: XOR<ClientNullableScalarRelationFilter, ClientWhereInput> | null
    contact?: XOR<ContactNullableScalarRelationFilter, ContactWhereInput> | null
    details?: PreInvoiceDetailListRelationFilter
  }

  export type PreInvoiceOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrderInput | SortOrder
    contactId?: SortOrderInput | SortOrder
    total?: SortOrderInput | SortOrder
    status?: SortOrder
    ocNumber?: SortOrderInput | SortOrder
    hesNumber?: SortOrderInput | SortOrder
    invoiceNumber?: SortOrderInput | SortOrder
    month?: SortOrder
    year?: SortOrder
    value?: SortOrder
    rejectNote?: SortOrderInput | SortOrder
    ocAmount?: SortOrderInput | SortOrder
    edpNumber?: SortOrderInput | SortOrder
    completedBy?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    ufValueUsed?: SortOrderInput | SortOrder
    ufDateUsed?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    client?: ClientOrderByWithRelationInput
    contact?: ContactOrderByWithRelationInput
    details?: PreInvoiceDetailOrderByRelationAggregateInput
  }

  export type PreInvoiceWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PreInvoiceWhereInput | PreInvoiceWhereInput[]
    OR?: PreInvoiceWhereInput[]
    NOT?: PreInvoiceWhereInput | PreInvoiceWhereInput[]
    clientId?: IntNullableFilter<"PreInvoice"> | number | null
    contactId?: IntNullableFilter<"PreInvoice"> | number | null
    total?: DecimalNullableFilter<"PreInvoice"> | Decimal | DecimalJsLike | number | string | null
    status?: StringFilter<"PreInvoice"> | string
    ocNumber?: StringNullableFilter<"PreInvoice"> | string | null
    hesNumber?: StringNullableFilter<"PreInvoice"> | string | null
    invoiceNumber?: StringNullableFilter<"PreInvoice"> | string | null
    month?: IntFilter<"PreInvoice"> | number
    year?: IntFilter<"PreInvoice"> | number
    value?: DecimalFilter<"PreInvoice"> | Decimal | DecimalJsLike | number | string
    rejectNote?: StringNullableFilter<"PreInvoice"> | string | null
    ocAmount?: DecimalNullableFilter<"PreInvoice"> | Decimal | DecimalJsLike | number | string | null
    edpNumber?: StringNullableFilter<"PreInvoice"> | string | null
    completedBy?: StringNullableFilter<"PreInvoice"> | string | null
    completedAt?: DateTimeNullableFilter<"PreInvoice"> | Date | string | null
    ufValueUsed?: DecimalNullableFilter<"PreInvoice"> | Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: DateTimeNullableFilter<"PreInvoice"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"PreInvoice"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"PreInvoice"> | Date | string | null
    client?: XOR<ClientNullableScalarRelationFilter, ClientWhereInput> | null
    contact?: XOR<ContactNullableScalarRelationFilter, ContactWhereInput> | null
    details?: PreInvoiceDetailListRelationFilter
  }, "id">

  export type PreInvoiceOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrderInput | SortOrder
    contactId?: SortOrderInput | SortOrder
    total?: SortOrderInput | SortOrder
    status?: SortOrder
    ocNumber?: SortOrderInput | SortOrder
    hesNumber?: SortOrderInput | SortOrder
    invoiceNumber?: SortOrderInput | SortOrder
    month?: SortOrder
    year?: SortOrder
    value?: SortOrder
    rejectNote?: SortOrderInput | SortOrder
    ocAmount?: SortOrderInput | SortOrder
    edpNumber?: SortOrderInput | SortOrder
    completedBy?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    ufValueUsed?: SortOrderInput | SortOrder
    ufDateUsed?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: PreInvoiceCountOrderByAggregateInput
    _avg?: PreInvoiceAvgOrderByAggregateInput
    _max?: PreInvoiceMaxOrderByAggregateInput
    _min?: PreInvoiceMinOrderByAggregateInput
    _sum?: PreInvoiceSumOrderByAggregateInput
  }

  export type PreInvoiceScalarWhereWithAggregatesInput = {
    AND?: PreInvoiceScalarWhereWithAggregatesInput | PreInvoiceScalarWhereWithAggregatesInput[]
    OR?: PreInvoiceScalarWhereWithAggregatesInput[]
    NOT?: PreInvoiceScalarWhereWithAggregatesInput | PreInvoiceScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PreInvoice"> | number
    clientId?: IntNullableWithAggregatesFilter<"PreInvoice"> | number | null
    contactId?: IntNullableWithAggregatesFilter<"PreInvoice"> | number | null
    total?: DecimalNullableWithAggregatesFilter<"PreInvoice"> | Decimal | DecimalJsLike | number | string | null
    status?: StringWithAggregatesFilter<"PreInvoice"> | string
    ocNumber?: StringNullableWithAggregatesFilter<"PreInvoice"> | string | null
    hesNumber?: StringNullableWithAggregatesFilter<"PreInvoice"> | string | null
    invoiceNumber?: StringNullableWithAggregatesFilter<"PreInvoice"> | string | null
    month?: IntWithAggregatesFilter<"PreInvoice"> | number
    year?: IntWithAggregatesFilter<"PreInvoice"> | number
    value?: DecimalWithAggregatesFilter<"PreInvoice"> | Decimal | DecimalJsLike | number | string
    rejectNote?: StringNullableWithAggregatesFilter<"PreInvoice"> | string | null
    ocAmount?: DecimalNullableWithAggregatesFilter<"PreInvoice"> | Decimal | DecimalJsLike | number | string | null
    edpNumber?: StringNullableWithAggregatesFilter<"PreInvoice"> | string | null
    completedBy?: StringNullableWithAggregatesFilter<"PreInvoice"> | string | null
    completedAt?: DateTimeNullableWithAggregatesFilter<"PreInvoice"> | Date | string | null
    ufValueUsed?: DecimalNullableWithAggregatesFilter<"PreInvoice"> | Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: DateTimeNullableWithAggregatesFilter<"PreInvoice"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"PreInvoice"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"PreInvoice"> | Date | string | null
  }

  export type PreInvoiceDetailWhereInput = {
    AND?: PreInvoiceDetailWhereInput | PreInvoiceDetailWhereInput[]
    OR?: PreInvoiceDetailWhereInput[]
    NOT?: PreInvoiceDetailWhereInput | PreInvoiceDetailWhereInput[]
    id?: IntFilter<"PreInvoiceDetail"> | number
    preInvoiceId?: IntNullableFilter<"PreInvoiceDetail"> | number | null
    personId?: IntNullableFilter<"PreInvoiceDetail"> | number | null
    status?: StringFilter<"PreInvoiceDetail"> | string
    value?: DecimalFilter<"PreInvoiceDetail"> | Decimal | DecimalJsLike | number | string
    currency_type?: IntNullableFilter<"PreInvoiceDetail"> | number | null
    billableDays?: DecimalFilter<"PreInvoiceDetail"> | Decimal | DecimalJsLike | number | string
    leaveDays?: DecimalFilter<"PreInvoiceDetail"> | Decimal | DecimalJsLike | number | string
    totalConsumeDays?: DecimalFilter<"PreInvoiceDetail"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeNullableFilter<"PreInvoiceDetail"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"PreInvoiceDetail"> | Date | string | null
    CurrencyType?: XOR<CurrencyTypeNullableScalarRelationFilter, CurrencyTypeWhereInput> | null
    person?: XOR<PeopleNullableScalarRelationFilter, PeopleWhereInput> | null
    preInvoice?: XOR<PreInvoiceNullableScalarRelationFilter, PreInvoiceWhereInput> | null
  }

  export type PreInvoiceDetailOrderByWithRelationInput = {
    id?: SortOrder
    preInvoiceId?: SortOrderInput | SortOrder
    personId?: SortOrderInput | SortOrder
    status?: SortOrder
    value?: SortOrder
    currency_type?: SortOrderInput | SortOrder
    billableDays?: SortOrder
    leaveDays?: SortOrder
    totalConsumeDays?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    CurrencyType?: CurrencyTypeOrderByWithRelationInput
    person?: PeopleOrderByWithRelationInput
    preInvoice?: PreInvoiceOrderByWithRelationInput
  }

  export type PreInvoiceDetailWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PreInvoiceDetailWhereInput | PreInvoiceDetailWhereInput[]
    OR?: PreInvoiceDetailWhereInput[]
    NOT?: PreInvoiceDetailWhereInput | PreInvoiceDetailWhereInput[]
    preInvoiceId?: IntNullableFilter<"PreInvoiceDetail"> | number | null
    personId?: IntNullableFilter<"PreInvoiceDetail"> | number | null
    status?: StringFilter<"PreInvoiceDetail"> | string
    value?: DecimalFilter<"PreInvoiceDetail"> | Decimal | DecimalJsLike | number | string
    currency_type?: IntNullableFilter<"PreInvoiceDetail"> | number | null
    billableDays?: DecimalFilter<"PreInvoiceDetail"> | Decimal | DecimalJsLike | number | string
    leaveDays?: DecimalFilter<"PreInvoiceDetail"> | Decimal | DecimalJsLike | number | string
    totalConsumeDays?: DecimalFilter<"PreInvoiceDetail"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeNullableFilter<"PreInvoiceDetail"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"PreInvoiceDetail"> | Date | string | null
    CurrencyType?: XOR<CurrencyTypeNullableScalarRelationFilter, CurrencyTypeWhereInput> | null
    person?: XOR<PeopleNullableScalarRelationFilter, PeopleWhereInput> | null
    preInvoice?: XOR<PreInvoiceNullableScalarRelationFilter, PreInvoiceWhereInput> | null
  }, "id">

  export type PreInvoiceDetailOrderByWithAggregationInput = {
    id?: SortOrder
    preInvoiceId?: SortOrderInput | SortOrder
    personId?: SortOrderInput | SortOrder
    status?: SortOrder
    value?: SortOrder
    currency_type?: SortOrderInput | SortOrder
    billableDays?: SortOrder
    leaveDays?: SortOrder
    totalConsumeDays?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: PreInvoiceDetailCountOrderByAggregateInput
    _avg?: PreInvoiceDetailAvgOrderByAggregateInput
    _max?: PreInvoiceDetailMaxOrderByAggregateInput
    _min?: PreInvoiceDetailMinOrderByAggregateInput
    _sum?: PreInvoiceDetailSumOrderByAggregateInput
  }

  export type PreInvoiceDetailScalarWhereWithAggregatesInput = {
    AND?: PreInvoiceDetailScalarWhereWithAggregatesInput | PreInvoiceDetailScalarWhereWithAggregatesInput[]
    OR?: PreInvoiceDetailScalarWhereWithAggregatesInput[]
    NOT?: PreInvoiceDetailScalarWhereWithAggregatesInput | PreInvoiceDetailScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PreInvoiceDetail"> | number
    preInvoiceId?: IntNullableWithAggregatesFilter<"PreInvoiceDetail"> | number | null
    personId?: IntNullableWithAggregatesFilter<"PreInvoiceDetail"> | number | null
    status?: StringWithAggregatesFilter<"PreInvoiceDetail"> | string
    value?: DecimalWithAggregatesFilter<"PreInvoiceDetail"> | Decimal | DecimalJsLike | number | string
    currency_type?: IntNullableWithAggregatesFilter<"PreInvoiceDetail"> | number | null
    billableDays?: DecimalWithAggregatesFilter<"PreInvoiceDetail"> | Decimal | DecimalJsLike | number | string
    leaveDays?: DecimalWithAggregatesFilter<"PreInvoiceDetail"> | Decimal | DecimalJsLike | number | string
    totalConsumeDays?: DecimalWithAggregatesFilter<"PreInvoiceDetail"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeNullableWithAggregatesFilter<"PreInvoiceDetail"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"PreInvoiceDetail"> | Date | string | null
  }

  export type ProjectWhereInput = {
    AND?: ProjectWhereInput | ProjectWhereInput[]
    OR?: ProjectWhereInput[]
    NOT?: ProjectWhereInput | ProjectWhereInput[]
    id?: IntFilter<"Project"> | number
    name?: StringFilter<"Project"> | string
    description?: StringNullableFilter<"Project"> | string | null
    clientId?: IntNullableFilter<"Project"> | number | null
    startDate?: DateTimeNullableFilter<"Project"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Project"> | Date | string | null
    status?: StringNullableFilter<"Project"> | string | null
    createdAt?: DateTimeNullableFilter<"Project"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Project"> | Date | string | null
    client?: XOR<ClientNullableScalarRelationFilter, ClientWhereInput> | null
  }

  export type ProjectOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    clientId?: SortOrderInput | SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    client?: ClientOrderByWithRelationInput
  }

  export type ProjectWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ProjectWhereInput | ProjectWhereInput[]
    OR?: ProjectWhereInput[]
    NOT?: ProjectWhereInput | ProjectWhereInput[]
    name?: StringFilter<"Project"> | string
    description?: StringNullableFilter<"Project"> | string | null
    clientId?: IntNullableFilter<"Project"> | number | null
    startDate?: DateTimeNullableFilter<"Project"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Project"> | Date | string | null
    status?: StringNullableFilter<"Project"> | string | null
    createdAt?: DateTimeNullableFilter<"Project"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Project"> | Date | string | null
    client?: XOR<ClientNullableScalarRelationFilter, ClientWhereInput> | null
  }, "id">

  export type ProjectOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    clientId?: SortOrderInput | SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: ProjectCountOrderByAggregateInput
    _avg?: ProjectAvgOrderByAggregateInput
    _max?: ProjectMaxOrderByAggregateInput
    _min?: ProjectMinOrderByAggregateInput
    _sum?: ProjectSumOrderByAggregateInput
  }

  export type ProjectScalarWhereWithAggregatesInput = {
    AND?: ProjectScalarWhereWithAggregatesInput | ProjectScalarWhereWithAggregatesInput[]
    OR?: ProjectScalarWhereWithAggregatesInput[]
    NOT?: ProjectScalarWhereWithAggregatesInput | ProjectScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Project"> | number
    name?: StringWithAggregatesFilter<"Project"> | string
    description?: StringNullableWithAggregatesFilter<"Project"> | string | null
    clientId?: IntNullableWithAggregatesFilter<"Project"> | number | null
    startDate?: DateTimeNullableWithAggregatesFilter<"Project"> | Date | string | null
    endDate?: DateTimeNullableWithAggregatesFilter<"Project"> | Date | string | null
    status?: StringNullableWithAggregatesFilter<"Project"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Project"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Project"> | Date | string | null
  }

  export type CurrencyHistoryWhereInput = {
    AND?: CurrencyHistoryWhereInput | CurrencyHistoryWhereInput[]
    OR?: CurrencyHistoryWhereInput[]
    NOT?: CurrencyHistoryWhereInput | CurrencyHistoryWhereInput[]
    id?: IntFilter<"CurrencyHistory"> | number
    date?: DateTimeFilter<"CurrencyHistory"> | Date | string
    usd?: FloatFilter<"CurrencyHistory"> | number
    uf?: FloatFilter<"CurrencyHistory"> | number
    created_at?: DateTimeFilter<"CurrencyHistory"> | Date | string
    updated_at?: DateTimeFilter<"CurrencyHistory"> | Date | string
  }

  export type CurrencyHistoryOrderByWithRelationInput = {
    id?: SortOrder
    date?: SortOrder
    usd?: SortOrder
    uf?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type CurrencyHistoryWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    date?: Date | string
    AND?: CurrencyHistoryWhereInput | CurrencyHistoryWhereInput[]
    OR?: CurrencyHistoryWhereInput[]
    NOT?: CurrencyHistoryWhereInput | CurrencyHistoryWhereInput[]
    usd?: FloatFilter<"CurrencyHistory"> | number
    uf?: FloatFilter<"CurrencyHistory"> | number
    created_at?: DateTimeFilter<"CurrencyHistory"> | Date | string
    updated_at?: DateTimeFilter<"CurrencyHistory"> | Date | string
  }, "id" | "date">

  export type CurrencyHistoryOrderByWithAggregationInput = {
    id?: SortOrder
    date?: SortOrder
    usd?: SortOrder
    uf?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: CurrencyHistoryCountOrderByAggregateInput
    _avg?: CurrencyHistoryAvgOrderByAggregateInput
    _max?: CurrencyHistoryMaxOrderByAggregateInput
    _min?: CurrencyHistoryMinOrderByAggregateInput
    _sum?: CurrencyHistorySumOrderByAggregateInput
  }

  export type CurrencyHistoryScalarWhereWithAggregatesInput = {
    AND?: CurrencyHistoryScalarWhereWithAggregatesInput | CurrencyHistoryScalarWhereWithAggregatesInput[]
    OR?: CurrencyHistoryScalarWhereWithAggregatesInput[]
    NOT?: CurrencyHistoryScalarWhereWithAggregatesInput | CurrencyHistoryScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CurrencyHistory"> | number
    date?: DateTimeWithAggregatesFilter<"CurrencyHistory"> | Date | string
    usd?: FloatWithAggregatesFilter<"CurrencyHistory"> | number
    uf?: FloatWithAggregatesFilter<"CurrencyHistory"> | number
    created_at?: DateTimeWithAggregatesFilter<"CurrencyHistory"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"CurrencyHistory"> | Date | string
  }

  export type AFPInstitutionCreateInput = {
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    people?: PeopleCreateNestedManyWithoutAfpInstitutionInput
  }

  export type AFPInstitutionUncheckedCreateInput = {
    id?: number
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    people?: PeopleUncheckedCreateNestedManyWithoutAfpInstitutionInput
  }

  export type AFPInstitutionUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    people?: PeopleUpdateManyWithoutAfpInstitutionNestedInput
  }

  export type AFPInstitutionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    people?: PeopleUncheckedUpdateManyWithoutAfpInstitutionNestedInput
  }

  export type AFPInstitutionCreateManyInput = {
    id?: number
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type AFPInstitutionUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AFPInstitutionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CurrencyTypeCreateInput = {
    name: string
    symbol: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clients?: ClientCreateNestedManyWithoutCurrencyTypeInput
    peopleSalary?: PeopleCreateNestedManyWithoutSalaryCurrencyTypeInput
    peopleFee?: PeopleCreateNestedManyWithoutFeeCurrencyTypeInput
    peopleLaptop?: PeopleCreateNestedManyWithoutLaptopCurrencyTypeInput
    PreInvoiceDetail?: PreInvoiceDetailCreateNestedManyWithoutCurrencyTypeInput
    Price?: PriceCreateNestedManyWithoutCurrencyTypeInput
  }

  export type CurrencyTypeUncheckedCreateInput = {
    id?: number
    name: string
    symbol: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clients?: ClientUncheckedCreateNestedManyWithoutCurrencyTypeInput
    peopleSalary?: PeopleUncheckedCreateNestedManyWithoutSalaryCurrencyTypeInput
    peopleFee?: PeopleUncheckedCreateNestedManyWithoutFeeCurrencyTypeInput
    peopleLaptop?: PeopleUncheckedCreateNestedManyWithoutLaptopCurrencyTypeInput
    PreInvoiceDetail?: PreInvoiceDetailUncheckedCreateNestedManyWithoutCurrencyTypeInput
    Price?: PriceUncheckedCreateNestedManyWithoutCurrencyTypeInput
  }

  export type CurrencyTypeUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: ClientUpdateManyWithoutCurrencyTypeNestedInput
    peopleSalary?: PeopleUpdateManyWithoutSalaryCurrencyTypeNestedInput
    peopleFee?: PeopleUpdateManyWithoutFeeCurrencyTypeNestedInput
    peopleLaptop?: PeopleUpdateManyWithoutLaptopCurrencyTypeNestedInput
    PreInvoiceDetail?: PreInvoiceDetailUpdateManyWithoutCurrencyTypeNestedInput
    Price?: PriceUpdateManyWithoutCurrencyTypeNestedInput
  }

  export type CurrencyTypeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: ClientUncheckedUpdateManyWithoutCurrencyTypeNestedInput
    peopleSalary?: PeopleUncheckedUpdateManyWithoutSalaryCurrencyTypeNestedInput
    peopleFee?: PeopleUncheckedUpdateManyWithoutFeeCurrencyTypeNestedInput
    peopleLaptop?: PeopleUncheckedUpdateManyWithoutLaptopCurrencyTypeNestedInput
    PreInvoiceDetail?: PreInvoiceDetailUncheckedUpdateManyWithoutCurrencyTypeNestedInput
    Price?: PriceUncheckedUpdateManyWithoutCurrencyTypeNestedInput
  }

  export type CurrencyTypeCreateManyInput = {
    id?: number
    name: string
    symbol: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type CurrencyTypeUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CurrencyTypeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ClientCreateInput = {
    name: string
    billableDay?: Decimal | DecimalJsLike | number | string | null
    rut?: string | null
    address?: string | null
    companyName?: string | null
    marginPercentage?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    currencyType?: CurrencyTypeCreateNestedOneWithoutClientsInput
    contacts?: ContactCreateNestedManyWithoutClientInput
    people?: PeopleCreateNestedManyWithoutClientInput
    preInvoices?: PreInvoiceCreateNestedManyWithoutClientInput
    projects?: ProjectCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateInput = {
    id?: number
    name: string
    currencyTypeId?: number | null
    billableDay?: Decimal | DecimalJsLike | number | string | null
    rut?: string | null
    address?: string | null
    companyName?: string | null
    marginPercentage?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutClientInput
    people?: PeopleUncheckedCreateNestedManyWithoutClientInput
    preInvoices?: PreInvoiceUncheckedCreateNestedManyWithoutClientInput
    projects?: ProjectUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    billableDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rut?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    marginPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currencyType?: CurrencyTypeUpdateOneWithoutClientsNestedInput
    contacts?: ContactUpdateManyWithoutClientNestedInput
    people?: PeopleUpdateManyWithoutClientNestedInput
    preInvoices?: PreInvoiceUpdateManyWithoutClientNestedInput
    projects?: ProjectUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    currencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    billableDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rut?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    marginPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contacts?: ContactUncheckedUpdateManyWithoutClientNestedInput
    people?: PeopleUncheckedUpdateManyWithoutClientNestedInput
    preInvoices?: PreInvoiceUncheckedUpdateManyWithoutClientNestedInput
    projects?: ProjectUncheckedUpdateManyWithoutClientNestedInput
  }

  export type ClientCreateManyInput = {
    id?: number
    name: string
    currencyTypeId?: number | null
    billableDay?: Decimal | DecimalJsLike | number | string | null
    rut?: string | null
    address?: string | null
    companyName?: string | null
    marginPercentage?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type ClientUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    billableDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rut?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    marginPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ClientUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    currencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    billableDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rut?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    marginPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ContactCreateInput = {
    name: string
    lastName?: string | null
    email?: string | null
    phone?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    client?: ClientCreateNestedOneWithoutContactsInput
    technicalStacks?: TechnicalsStacksCreateNestedOneWithoutContactsInput
    preInvoices?: PreInvoiceCreateNestedManyWithoutContactInput
  }

  export type ContactUncheckedCreateInput = {
    id?: number
    name: string
    lastName?: string | null
    email?: string | null
    phone?: string | null
    clientId?: number | null
    technicalStacksId?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    preInvoices?: PreInvoiceUncheckedCreateNestedManyWithoutContactInput
  }

  export type ContactUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneWithoutContactsNestedInput
    technicalStacks?: TechnicalsStacksUpdateOneWithoutContactsNestedInput
    preInvoices?: PreInvoiceUpdateManyWithoutContactNestedInput
  }

  export type ContactUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preInvoices?: PreInvoiceUncheckedUpdateManyWithoutContactNestedInput
  }

  export type ContactCreateManyInput = {
    id?: number
    name: string
    lastName?: string | null
    email?: string | null
    phone?: string | null
    clientId?: number | null
    technicalStacksId?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type ContactUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ContactUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HealthInstitutionCreateInput = {
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    people?: PeopleCreateNestedManyWithoutHealthInstitutionInput
  }

  export type HealthInstitutionUncheckedCreateInput = {
    id?: number
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    people?: PeopleUncheckedCreateNestedManyWithoutHealthInstitutionInput
  }

  export type HealthInstitutionUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    people?: PeopleUpdateManyWithoutHealthInstitutionNestedInput
  }

  export type HealthInstitutionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    people?: PeopleUncheckedUpdateManyWithoutHealthInstitutionNestedInput
  }

  export type HealthInstitutionCreateManyInput = {
    id?: number
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type HealthInstitutionUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HealthInstitutionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HolidaysCreateInput = {
    date: Date | string
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type HolidaysUncheckedCreateInput = {
    id?: number
    date: Date | string
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type HolidaysUpdateInput = {
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HolidaysUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HolidaysCreateManyInput = {
    id?: number
    date: Date | string
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type HolidaysUpdateManyMutationInput = {
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HolidaysUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type JobTitleCreateInput = {
    name: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    people?: PeopleCreateNestedManyWithoutJobTitleInput
  }

  export type JobTitleUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    people?: PeopleUncheckedCreateNestedManyWithoutJobTitleInput
  }

  export type JobTitleUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    people?: PeopleUpdateManyWithoutJobTitleNestedInput
  }

  export type JobTitleUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    people?: PeopleUncheckedUpdateManyWithoutJobTitleNestedInput
  }

  export type JobTitleCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type JobTitleUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type JobTitleUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RoleCreateInput = {
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    people?: PeopleCreateNestedManyWithoutRoleInput
  }

  export type RoleUncheckedCreateInput = {
    id?: number
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    people?: PeopleUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    people?: PeopleUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    people?: PeopleUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type RoleCreateManyInput = {
    id?: number
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type RoleUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RoleUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SeniorityCreateInput = {
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    people?: PeopleCreateNestedManyWithoutSeniorityInput
  }

  export type SeniorityUncheckedCreateInput = {
    id?: number
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    people?: PeopleUncheckedCreateNestedManyWithoutSeniorityInput
  }

  export type SeniorityUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    people?: PeopleUpdateManyWithoutSeniorityNestedInput
  }

  export type SeniorityUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    people?: PeopleUncheckedUpdateManyWithoutSeniorityNestedInput
  }

  export type SeniorityCreateManyInput = {
    id?: number
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type SeniorityUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SeniorityUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SkillLevelCreateInput = {
    name: string
    level: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type SkillLevelUncheckedCreateInput = {
    id?: number
    name: string
    level: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type SkillLevelUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SkillLevelUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SkillLevelCreateManyInput = {
    id?: number
    name: string
    level: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type SkillLevelUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SkillLevelUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TechnicalsStacksCreateInput = {
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    people?: PeopleCreateNestedManyWithoutTechnicalStacksInput
    contacts?: ContactCreateNestedManyWithoutTechnicalStacksInput
  }

  export type TechnicalsStacksUncheckedCreateInput = {
    id?: number
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    people?: PeopleUncheckedCreateNestedManyWithoutTechnicalStacksInput
    contacts?: ContactUncheckedCreateNestedManyWithoutTechnicalStacksInput
  }

  export type TechnicalsStacksUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    people?: PeopleUpdateManyWithoutTechnicalStacksNestedInput
    contacts?: ContactUpdateManyWithoutTechnicalStacksNestedInput
  }

  export type TechnicalsStacksUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    people?: PeopleUncheckedUpdateManyWithoutTechnicalStacksNestedInput
    contacts?: ContactUncheckedUpdateManyWithoutTechnicalStacksNestedInput
  }

  export type TechnicalsStacksCreateManyInput = {
    id?: number
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type TechnicalsStacksUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TechnicalsStacksUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PriceCreateInput = {
    name: string
    description?: string | null
    value: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    CurrencyType?: CurrencyTypeCreateNestedOneWithoutPriceInput
  }

  export type PriceUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    value: Decimal | DecimalJsLike | number | string
    currency_type?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PriceUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CurrencyType?: CurrencyTypeUpdateOneWithoutPriceNestedInput
  }

  export type PriceUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_type?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PriceCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    value: Decimal | DecimalJsLike | number | string
    currency_type?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PriceUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PriceUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_type?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PeopleCreateInput = {
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    remote?: string | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    bank?: string | null
    accountNumber?: string | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leaveDays?: LeaveDaysCreateNestedManyWithoutPersonInput
    afpInstitution?: AFPInstitutionCreateNestedOneWithoutPeopleInput
    client?: ClientCreateNestedOneWithoutPeopleInput
    salaryCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleSalaryInput
    feeCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleFeeInput
    laptopCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleLaptopInput
    healthInstitution?: HealthInstitutionCreateNestedOneWithoutPeopleInput
    jobTitle?: JobTitleCreateNestedOneWithoutPeopleInput
    role?: RoleCreateNestedOneWithoutPeopleInput
    seniority?: SeniorityCreateNestedOneWithoutPeopleInput
    technicalStacks?: TechnicalsStacksCreateNestedOneWithoutPeopleInput
    preInvoiceDetails?: PreInvoiceDetailCreateNestedManyWithoutPersonInput
  }

  export type PeopleUncheckedCreateInput = {
    id?: number
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    roleId?: number | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    clientId?: number | null
    remote?: string | null
    jobTitleId?: number | null
    seniorityId?: number | null
    technicalStacksId?: number | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    afpInstitutionId?: number | null
    healthInstitutionId?: number | null
    bank?: string | null
    accountNumber?: string | null
    salaryCurrencyTypeId?: number | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: number | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopCurrencyTypeId?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leaveDays?: LeaveDaysUncheckedCreateNestedManyWithoutPersonInput
    preInvoiceDetails?: PreInvoiceDetailUncheckedCreateNestedManyWithoutPersonInput
  }

  export type PeopleUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaveDays?: LeaveDaysUpdateManyWithoutPersonNestedInput
    afpInstitution?: AFPInstitutionUpdateOneWithoutPeopleNestedInput
    client?: ClientUpdateOneWithoutPeopleNestedInput
    salaryCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleSalaryNestedInput
    feeCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleFeeNestedInput
    laptopCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleLaptopNestedInput
    healthInstitution?: HealthInstitutionUpdateOneWithoutPeopleNestedInput
    jobTitle?: JobTitleUpdateOneWithoutPeopleNestedInput
    role?: RoleUpdateOneWithoutPeopleNestedInput
    seniority?: SeniorityUpdateOneWithoutPeopleNestedInput
    technicalStacks?: TechnicalsStacksUpdateOneWithoutPeopleNestedInput
    preInvoiceDetails?: PreInvoiceDetailUpdateManyWithoutPersonNestedInput
  }

  export type PeopleUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    jobTitleId?: NullableIntFieldUpdateOperationsInput | number | null
    seniorityId?: NullableIntFieldUpdateOperationsInput | number | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    afpInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    healthInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaveDays?: LeaveDaysUncheckedUpdateManyWithoutPersonNestedInput
    preInvoiceDetails?: PreInvoiceDetailUncheckedUpdateManyWithoutPersonNestedInput
  }

  export type PeopleCreateManyInput = {
    id?: number
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    roleId?: number | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    clientId?: number | null
    remote?: string | null
    jobTitleId?: number | null
    seniorityId?: number | null
    technicalStacksId?: number | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    afpInstitutionId?: number | null
    healthInstitutionId?: number | null
    bank?: string | null
    accountNumber?: string | null
    salaryCurrencyTypeId?: number | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: number | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopCurrencyTypeId?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PeopleUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PeopleUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    jobTitleId?: NullableIntFieldUpdateOperationsInput | number | null
    seniorityId?: NullableIntFieldUpdateOperationsInput | number | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    afpInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    healthInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type LeaveDaysCreateInput = {
    startDate: Date | string
    endDate: Date | string
    reason?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    person?: PeopleCreateNestedOneWithoutLeaveDaysInput
  }

  export type LeaveDaysUncheckedCreateInput = {
    id?: number
    personId?: number | null
    startDate: Date | string
    endDate: Date | string
    reason?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type LeaveDaysUpdateInput = {
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    person?: PeopleUpdateOneWithoutLeaveDaysNestedInput
  }

  export type LeaveDaysUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    personId?: NullableIntFieldUpdateOperationsInput | number | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type LeaveDaysCreateManyInput = {
    id?: number
    personId?: number | null
    startDate: Date | string
    endDate: Date | string
    reason?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type LeaveDaysUpdateManyMutationInput = {
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type LeaveDaysUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    personId?: NullableIntFieldUpdateOperationsInput | number | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PreInvoiceCreateInput = {
    total?: Decimal | DecimalJsLike | number | string | null
    status: string
    ocNumber?: string | null
    hesNumber?: string | null
    invoiceNumber?: string | null
    month: number
    year: number
    value: Decimal | DecimalJsLike | number | string
    rejectNote?: string | null
    ocAmount?: Decimal | DecimalJsLike | number | string | null
    edpNumber?: string | null
    completedBy?: string | null
    completedAt?: Date | string | null
    ufValueUsed?: Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    client?: ClientCreateNestedOneWithoutPreInvoicesInput
    contact?: ContactCreateNestedOneWithoutPreInvoicesInput
    details?: PreInvoiceDetailCreateNestedManyWithoutPreInvoiceInput
  }

  export type PreInvoiceUncheckedCreateInput = {
    id?: number
    clientId?: number | null
    contactId?: number | null
    total?: Decimal | DecimalJsLike | number | string | null
    status: string
    ocNumber?: string | null
    hesNumber?: string | null
    invoiceNumber?: string | null
    month: number
    year: number
    value: Decimal | DecimalJsLike | number | string
    rejectNote?: string | null
    ocAmount?: Decimal | DecimalJsLike | number | string | null
    edpNumber?: string | null
    completedBy?: string | null
    completedAt?: Date | string | null
    ufValueUsed?: Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    details?: PreInvoiceDetailUncheckedCreateNestedManyWithoutPreInvoiceInput
  }

  export type PreInvoiceUpdateInput = {
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    ocNumber?: NullableStringFieldUpdateOperationsInput | string | null
    hesNumber?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    month?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rejectNote?: NullableStringFieldUpdateOperationsInput | string | null
    ocAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    edpNumber?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: NullableStringFieldUpdateOperationsInput | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ufValueUsed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneWithoutPreInvoicesNestedInput
    contact?: ContactUpdateOneWithoutPreInvoicesNestedInput
    details?: PreInvoiceDetailUpdateManyWithoutPreInvoiceNestedInput
  }

  export type PreInvoiceUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    contactId?: NullableIntFieldUpdateOperationsInput | number | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    ocNumber?: NullableStringFieldUpdateOperationsInput | string | null
    hesNumber?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    month?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rejectNote?: NullableStringFieldUpdateOperationsInput | string | null
    ocAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    edpNumber?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: NullableStringFieldUpdateOperationsInput | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ufValueUsed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    details?: PreInvoiceDetailUncheckedUpdateManyWithoutPreInvoiceNestedInput
  }

  export type PreInvoiceCreateManyInput = {
    id?: number
    clientId?: number | null
    contactId?: number | null
    total?: Decimal | DecimalJsLike | number | string | null
    status: string
    ocNumber?: string | null
    hesNumber?: string | null
    invoiceNumber?: string | null
    month: number
    year: number
    value: Decimal | DecimalJsLike | number | string
    rejectNote?: string | null
    ocAmount?: Decimal | DecimalJsLike | number | string | null
    edpNumber?: string | null
    completedBy?: string | null
    completedAt?: Date | string | null
    ufValueUsed?: Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PreInvoiceUpdateManyMutationInput = {
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    ocNumber?: NullableStringFieldUpdateOperationsInput | string | null
    hesNumber?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    month?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rejectNote?: NullableStringFieldUpdateOperationsInput | string | null
    ocAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    edpNumber?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: NullableStringFieldUpdateOperationsInput | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ufValueUsed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PreInvoiceUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    contactId?: NullableIntFieldUpdateOperationsInput | number | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    ocNumber?: NullableStringFieldUpdateOperationsInput | string | null
    hesNumber?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    month?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rejectNote?: NullableStringFieldUpdateOperationsInput | string | null
    ocAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    edpNumber?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: NullableStringFieldUpdateOperationsInput | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ufValueUsed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PreInvoiceDetailCreateInput = {
    status: string
    value: Decimal | DecimalJsLike | number | string
    billableDays: Decimal | DecimalJsLike | number | string
    leaveDays: Decimal | DecimalJsLike | number | string
    totalConsumeDays: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    CurrencyType?: CurrencyTypeCreateNestedOneWithoutPreInvoiceDetailInput
    person?: PeopleCreateNestedOneWithoutPreInvoiceDetailsInput
    preInvoice?: PreInvoiceCreateNestedOneWithoutDetailsInput
  }

  export type PreInvoiceDetailUncheckedCreateInput = {
    id?: number
    preInvoiceId?: number | null
    personId?: number | null
    status: string
    value: Decimal | DecimalJsLike | number | string
    currency_type?: number | null
    billableDays: Decimal | DecimalJsLike | number | string
    leaveDays: Decimal | DecimalJsLike | number | string
    totalConsumeDays: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PreInvoiceDetailUpdateInput = {
    status?: StringFieldUpdateOperationsInput | string
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    billableDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    leaveDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalConsumeDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CurrencyType?: CurrencyTypeUpdateOneWithoutPreInvoiceDetailNestedInput
    person?: PeopleUpdateOneWithoutPreInvoiceDetailsNestedInput
    preInvoice?: PreInvoiceUpdateOneWithoutDetailsNestedInput
  }

  export type PreInvoiceDetailUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    preInvoiceId?: NullableIntFieldUpdateOperationsInput | number | null
    personId?: NullableIntFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_type?: NullableIntFieldUpdateOperationsInput | number | null
    billableDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    leaveDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalConsumeDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PreInvoiceDetailCreateManyInput = {
    id?: number
    preInvoiceId?: number | null
    personId?: number | null
    status: string
    value: Decimal | DecimalJsLike | number | string
    currency_type?: number | null
    billableDays: Decimal | DecimalJsLike | number | string
    leaveDays: Decimal | DecimalJsLike | number | string
    totalConsumeDays: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PreInvoiceDetailUpdateManyMutationInput = {
    status?: StringFieldUpdateOperationsInput | string
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    billableDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    leaveDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalConsumeDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PreInvoiceDetailUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    preInvoiceId?: NullableIntFieldUpdateOperationsInput | number | null
    personId?: NullableIntFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_type?: NullableIntFieldUpdateOperationsInput | number | null
    billableDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    leaveDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalConsumeDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProjectCreateInput = {
    name: string
    description?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    client?: ClientCreateNestedOneWithoutProjectsInput
  }

  export type ProjectUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    clientId?: number | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type ProjectUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneWithoutProjectsNestedInput
  }

  export type ProjectUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProjectCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    clientId?: number | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type ProjectUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProjectUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CurrencyHistoryCreateInput = {
    date: Date | string
    usd: number
    uf: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type CurrencyHistoryUncheckedCreateInput = {
    id?: number
    date: Date | string
    usd: number
    uf: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type CurrencyHistoryUpdateInput = {
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    usd?: FloatFieldUpdateOperationsInput | number
    uf?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CurrencyHistoryUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    usd?: FloatFieldUpdateOperationsInput | number
    uf?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CurrencyHistoryCreateManyInput = {
    id?: number
    date: Date | string
    usd: number
    uf: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type CurrencyHistoryUpdateManyMutationInput = {
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    usd?: FloatFieldUpdateOperationsInput | number
    uf?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CurrencyHistoryUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    usd?: FloatFieldUpdateOperationsInput | number
    uf?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type PeopleListRelationFilter = {
    every?: PeopleWhereInput
    some?: PeopleWhereInput
    none?: PeopleWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type PeopleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AFPInstitutionCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AFPInstitutionAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type AFPInstitutionMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AFPInstitutionMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AFPInstitutionSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type ClientListRelationFilter = {
    every?: ClientWhereInput
    some?: ClientWhereInput
    none?: ClientWhereInput
  }

  export type PreInvoiceDetailListRelationFilter = {
    every?: PreInvoiceDetailWhereInput
    some?: PreInvoiceDetailWhereInput
    none?: PreInvoiceDetailWhereInput
  }

  export type PriceListRelationFilter = {
    every?: PriceWhereInput
    some?: PriceWhereInput
    none?: PriceWhereInput
  }

  export type ClientOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PreInvoiceDetailOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PriceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CurrencyTypeCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    symbol?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CurrencyTypeAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CurrencyTypeMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    symbol?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CurrencyTypeMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    symbol?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CurrencyTypeSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type CurrencyTypeNullableScalarRelationFilter = {
    is?: CurrencyTypeWhereInput | null
    isNot?: CurrencyTypeWhereInput | null
  }

  export type ContactListRelationFilter = {
    every?: ContactWhereInput
    some?: ContactWhereInput
    none?: ContactWhereInput
  }

  export type PreInvoiceListRelationFilter = {
    every?: PreInvoiceWhereInput
    some?: PreInvoiceWhereInput
    none?: PreInvoiceWhereInput
  }

  export type ProjectListRelationFilter = {
    every?: ProjectWhereInput
    some?: ProjectWhereInput
    none?: ProjectWhereInput
  }

  export type ContactOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PreInvoiceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProjectOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ClientCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    currencyTypeId?: SortOrder
    billableDay?: SortOrder
    rut?: SortOrder
    address?: SortOrder
    companyName?: SortOrder
    marginPercentage?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ClientAvgOrderByAggregateInput = {
    id?: SortOrder
    currencyTypeId?: SortOrder
    billableDay?: SortOrder
    marginPercentage?: SortOrder
  }

  export type ClientMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    currencyTypeId?: SortOrder
    billableDay?: SortOrder
    rut?: SortOrder
    address?: SortOrder
    companyName?: SortOrder
    marginPercentage?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ClientMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    currencyTypeId?: SortOrder
    billableDay?: SortOrder
    rut?: SortOrder
    address?: SortOrder
    companyName?: SortOrder
    marginPercentage?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ClientSumOrderByAggregateInput = {
    id?: SortOrder
    currencyTypeId?: SortOrder
    billableDay?: SortOrder
    marginPercentage?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type ClientNullableScalarRelationFilter = {
    is?: ClientWhereInput | null
    isNot?: ClientWhereInput | null
  }

  export type TechnicalsStacksNullableScalarRelationFilter = {
    is?: TechnicalsStacksWhereInput | null
    isNot?: TechnicalsStacksWhereInput | null
  }

  export type ContactCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    clientId?: SortOrder
    technicalStacksId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ContactAvgOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    technicalStacksId?: SortOrder
  }

  export type ContactMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    clientId?: SortOrder
    technicalStacksId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ContactMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    clientId?: SortOrder
    technicalStacksId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ContactSumOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    technicalStacksId?: SortOrder
  }

  export type HealthInstitutionCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type HealthInstitutionAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type HealthInstitutionMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type HealthInstitutionMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type HealthInstitutionSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type HolidaysCountOrderByAggregateInput = {
    id?: SortOrder
    date?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type HolidaysAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type HolidaysMaxOrderByAggregateInput = {
    id?: SortOrder
    date?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type HolidaysMinOrderByAggregateInput = {
    id?: SortOrder
    date?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type HolidaysSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type JobTitleCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type JobTitleAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type JobTitleMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type JobTitleMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type JobTitleSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type RoleCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RoleAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type RoleMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RoleMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RoleSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type SeniorityCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SeniorityAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type SeniorityMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SeniorityMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SenioritySumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type SkillLevelCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    level?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SkillLevelAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type SkillLevelMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    level?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SkillLevelMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    level?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SkillLevelSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type TechnicalsStacksCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TechnicalsStacksAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type TechnicalsStacksMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TechnicalsStacksMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TechnicalsStacksSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type PriceCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    value?: SortOrder
    currency_type?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PriceAvgOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    currency_type?: SortOrder
  }

  export type PriceMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    value?: SortOrder
    currency_type?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PriceMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    value?: SortOrder
    currency_type?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PriceSumOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    currency_type?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type LeaveDaysListRelationFilter = {
    every?: LeaveDaysWhereInput
    some?: LeaveDaysWhereInput
    none?: LeaveDaysWhereInput
  }

  export type AFPInstitutionNullableScalarRelationFilter = {
    is?: AFPInstitutionWhereInput | null
    isNot?: AFPInstitutionWhereInput | null
  }

  export type HealthInstitutionNullableScalarRelationFilter = {
    is?: HealthInstitutionWhereInput | null
    isNot?: HealthInstitutionWhereInput | null
  }

  export type JobTitleNullableScalarRelationFilter = {
    is?: JobTitleWhereInput | null
    isNot?: JobTitleWhereInput | null
  }

  export type RoleNullableScalarRelationFilter = {
    is?: RoleWhereInput | null
    isNot?: RoleWhereInput | null
  }

  export type SeniorityNullableScalarRelationFilter = {
    is?: SeniorityWhereInput | null
    isNot?: SeniorityWhereInput | null
  }

  export type LeaveDaysOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PeopleCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    lastName?: SortOrder
    dni?: SortOrder
    corporateName?: SortOrder
    corporateEmail?: SortOrder
    contractType?: SortOrder
    contractStart?: SortOrder
    contractEnd?: SortOrder
    contractClientEnd?: SortOrder
    roleId?: SortOrder
    isActive?: SortOrder
    causal?: SortOrder
    reason?: SortOrder
    clientId?: SortOrder
    remote?: SortOrder
    jobTitleId?: SortOrder
    seniorityId?: SortOrder
    technicalStacksId?: SortOrder
    salesManager?: SortOrder
    searchManager?: SortOrder
    deliveryManager?: SortOrder
    administrativeArea?: SortOrder
    leader?: SortOrder
    leaderMail?: SortOrder
    leaderPhone?: SortOrder
    birth?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    address?: SortOrder
    sublocality?: SortOrder
    locality?: SortOrder
    country?: SortOrder
    nationality?: SortOrder
    afpInstitutionId?: SortOrder
    healthInstitutionId?: SortOrder
    bank?: SortOrder
    accountNumber?: SortOrder
    salaryCurrencyTypeId?: SortOrder
    netSalary?: SortOrder
    feeCurrencyTypeId?: SortOrder
    serviceFee?: SortOrder
    fee?: SortOrder
    billableDay?: SortOrder
    laptopCurrencyTypeId?: SortOrder
    laptopBonus?: SortOrder
    comment?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PeopleAvgOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
    clientId?: SortOrder
    jobTitleId?: SortOrder
    seniorityId?: SortOrder
    technicalStacksId?: SortOrder
    afpInstitutionId?: SortOrder
    healthInstitutionId?: SortOrder
    salaryCurrencyTypeId?: SortOrder
    netSalary?: SortOrder
    feeCurrencyTypeId?: SortOrder
    serviceFee?: SortOrder
    billableDay?: SortOrder
    laptopCurrencyTypeId?: SortOrder
    laptopBonus?: SortOrder
  }

  export type PeopleMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    lastName?: SortOrder
    dni?: SortOrder
    corporateName?: SortOrder
    corporateEmail?: SortOrder
    contractType?: SortOrder
    contractStart?: SortOrder
    contractEnd?: SortOrder
    contractClientEnd?: SortOrder
    roleId?: SortOrder
    isActive?: SortOrder
    causal?: SortOrder
    reason?: SortOrder
    clientId?: SortOrder
    remote?: SortOrder
    jobTitleId?: SortOrder
    seniorityId?: SortOrder
    technicalStacksId?: SortOrder
    salesManager?: SortOrder
    searchManager?: SortOrder
    deliveryManager?: SortOrder
    administrativeArea?: SortOrder
    leader?: SortOrder
    leaderMail?: SortOrder
    leaderPhone?: SortOrder
    birth?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    address?: SortOrder
    sublocality?: SortOrder
    locality?: SortOrder
    country?: SortOrder
    nationality?: SortOrder
    afpInstitutionId?: SortOrder
    healthInstitutionId?: SortOrder
    bank?: SortOrder
    accountNumber?: SortOrder
    salaryCurrencyTypeId?: SortOrder
    netSalary?: SortOrder
    feeCurrencyTypeId?: SortOrder
    serviceFee?: SortOrder
    fee?: SortOrder
    billableDay?: SortOrder
    laptopCurrencyTypeId?: SortOrder
    laptopBonus?: SortOrder
    comment?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PeopleMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    lastName?: SortOrder
    dni?: SortOrder
    corporateName?: SortOrder
    corporateEmail?: SortOrder
    contractType?: SortOrder
    contractStart?: SortOrder
    contractEnd?: SortOrder
    contractClientEnd?: SortOrder
    roleId?: SortOrder
    isActive?: SortOrder
    causal?: SortOrder
    reason?: SortOrder
    clientId?: SortOrder
    remote?: SortOrder
    jobTitleId?: SortOrder
    seniorityId?: SortOrder
    technicalStacksId?: SortOrder
    salesManager?: SortOrder
    searchManager?: SortOrder
    deliveryManager?: SortOrder
    administrativeArea?: SortOrder
    leader?: SortOrder
    leaderMail?: SortOrder
    leaderPhone?: SortOrder
    birth?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    address?: SortOrder
    sublocality?: SortOrder
    locality?: SortOrder
    country?: SortOrder
    nationality?: SortOrder
    afpInstitutionId?: SortOrder
    healthInstitutionId?: SortOrder
    bank?: SortOrder
    accountNumber?: SortOrder
    salaryCurrencyTypeId?: SortOrder
    netSalary?: SortOrder
    feeCurrencyTypeId?: SortOrder
    serviceFee?: SortOrder
    fee?: SortOrder
    billableDay?: SortOrder
    laptopCurrencyTypeId?: SortOrder
    laptopBonus?: SortOrder
    comment?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PeopleSumOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
    clientId?: SortOrder
    jobTitleId?: SortOrder
    seniorityId?: SortOrder
    technicalStacksId?: SortOrder
    afpInstitutionId?: SortOrder
    healthInstitutionId?: SortOrder
    salaryCurrencyTypeId?: SortOrder
    netSalary?: SortOrder
    feeCurrencyTypeId?: SortOrder
    serviceFee?: SortOrder
    billableDay?: SortOrder
    laptopCurrencyTypeId?: SortOrder
    laptopBonus?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type PeopleNullableScalarRelationFilter = {
    is?: PeopleWhereInput | null
    isNot?: PeopleWhereInput | null
  }

  export type LeaveDaysCountOrderByAggregateInput = {
    id?: SortOrder
    personId?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    reason?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type LeaveDaysAvgOrderByAggregateInput = {
    id?: SortOrder
    personId?: SortOrder
  }

  export type LeaveDaysMaxOrderByAggregateInput = {
    id?: SortOrder
    personId?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    reason?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type LeaveDaysMinOrderByAggregateInput = {
    id?: SortOrder
    personId?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    reason?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type LeaveDaysSumOrderByAggregateInput = {
    id?: SortOrder
    personId?: SortOrder
  }

  export type ContactNullableScalarRelationFilter = {
    is?: ContactWhereInput | null
    isNot?: ContactWhereInput | null
  }

  export type PreInvoiceCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    contactId?: SortOrder
    total?: SortOrder
    status?: SortOrder
    ocNumber?: SortOrder
    hesNumber?: SortOrder
    invoiceNumber?: SortOrder
    month?: SortOrder
    year?: SortOrder
    value?: SortOrder
    rejectNote?: SortOrder
    ocAmount?: SortOrder
    edpNumber?: SortOrder
    completedBy?: SortOrder
    completedAt?: SortOrder
    ufValueUsed?: SortOrder
    ufDateUsed?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PreInvoiceAvgOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    contactId?: SortOrder
    total?: SortOrder
    month?: SortOrder
    year?: SortOrder
    value?: SortOrder
    ocAmount?: SortOrder
    ufValueUsed?: SortOrder
  }

  export type PreInvoiceMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    contactId?: SortOrder
    total?: SortOrder
    status?: SortOrder
    ocNumber?: SortOrder
    hesNumber?: SortOrder
    invoiceNumber?: SortOrder
    month?: SortOrder
    year?: SortOrder
    value?: SortOrder
    rejectNote?: SortOrder
    ocAmount?: SortOrder
    edpNumber?: SortOrder
    completedBy?: SortOrder
    completedAt?: SortOrder
    ufValueUsed?: SortOrder
    ufDateUsed?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PreInvoiceMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    contactId?: SortOrder
    total?: SortOrder
    status?: SortOrder
    ocNumber?: SortOrder
    hesNumber?: SortOrder
    invoiceNumber?: SortOrder
    month?: SortOrder
    year?: SortOrder
    value?: SortOrder
    rejectNote?: SortOrder
    ocAmount?: SortOrder
    edpNumber?: SortOrder
    completedBy?: SortOrder
    completedAt?: SortOrder
    ufValueUsed?: SortOrder
    ufDateUsed?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PreInvoiceSumOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    contactId?: SortOrder
    total?: SortOrder
    month?: SortOrder
    year?: SortOrder
    value?: SortOrder
    ocAmount?: SortOrder
    ufValueUsed?: SortOrder
  }

  export type PreInvoiceNullableScalarRelationFilter = {
    is?: PreInvoiceWhereInput | null
    isNot?: PreInvoiceWhereInput | null
  }

  export type PreInvoiceDetailCountOrderByAggregateInput = {
    id?: SortOrder
    preInvoiceId?: SortOrder
    personId?: SortOrder
    status?: SortOrder
    value?: SortOrder
    currency_type?: SortOrder
    billableDays?: SortOrder
    leaveDays?: SortOrder
    totalConsumeDays?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PreInvoiceDetailAvgOrderByAggregateInput = {
    id?: SortOrder
    preInvoiceId?: SortOrder
    personId?: SortOrder
    value?: SortOrder
    currency_type?: SortOrder
    billableDays?: SortOrder
    leaveDays?: SortOrder
    totalConsumeDays?: SortOrder
  }

  export type PreInvoiceDetailMaxOrderByAggregateInput = {
    id?: SortOrder
    preInvoiceId?: SortOrder
    personId?: SortOrder
    status?: SortOrder
    value?: SortOrder
    currency_type?: SortOrder
    billableDays?: SortOrder
    leaveDays?: SortOrder
    totalConsumeDays?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PreInvoiceDetailMinOrderByAggregateInput = {
    id?: SortOrder
    preInvoiceId?: SortOrder
    personId?: SortOrder
    status?: SortOrder
    value?: SortOrder
    currency_type?: SortOrder
    billableDays?: SortOrder
    leaveDays?: SortOrder
    totalConsumeDays?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PreInvoiceDetailSumOrderByAggregateInput = {
    id?: SortOrder
    preInvoiceId?: SortOrder
    personId?: SortOrder
    value?: SortOrder
    currency_type?: SortOrder
    billableDays?: SortOrder
    leaveDays?: SortOrder
    totalConsumeDays?: SortOrder
  }

  export type ProjectCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    clientId?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProjectAvgOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
  }

  export type ProjectMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    clientId?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProjectMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    clientId?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProjectSumOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type CurrencyHistoryCountOrderByAggregateInput = {
    id?: SortOrder
    date?: SortOrder
    usd?: SortOrder
    uf?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type CurrencyHistoryAvgOrderByAggregateInput = {
    id?: SortOrder
    usd?: SortOrder
    uf?: SortOrder
  }

  export type CurrencyHistoryMaxOrderByAggregateInput = {
    id?: SortOrder
    date?: SortOrder
    usd?: SortOrder
    uf?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type CurrencyHistoryMinOrderByAggregateInput = {
    id?: SortOrder
    date?: SortOrder
    usd?: SortOrder
    uf?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type CurrencyHistorySumOrderByAggregateInput = {
    id?: SortOrder
    usd?: SortOrder
    uf?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type PeopleCreateNestedManyWithoutAfpInstitutionInput = {
    create?: XOR<PeopleCreateWithoutAfpInstitutionInput, PeopleUncheckedCreateWithoutAfpInstitutionInput> | PeopleCreateWithoutAfpInstitutionInput[] | PeopleUncheckedCreateWithoutAfpInstitutionInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutAfpInstitutionInput | PeopleCreateOrConnectWithoutAfpInstitutionInput[]
    createMany?: PeopleCreateManyAfpInstitutionInputEnvelope
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
  }

  export type PeopleUncheckedCreateNestedManyWithoutAfpInstitutionInput = {
    create?: XOR<PeopleCreateWithoutAfpInstitutionInput, PeopleUncheckedCreateWithoutAfpInstitutionInput> | PeopleCreateWithoutAfpInstitutionInput[] | PeopleUncheckedCreateWithoutAfpInstitutionInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutAfpInstitutionInput | PeopleCreateOrConnectWithoutAfpInstitutionInput[]
    createMany?: PeopleCreateManyAfpInstitutionInputEnvelope
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type PeopleUpdateManyWithoutAfpInstitutionNestedInput = {
    create?: XOR<PeopleCreateWithoutAfpInstitutionInput, PeopleUncheckedCreateWithoutAfpInstitutionInput> | PeopleCreateWithoutAfpInstitutionInput[] | PeopleUncheckedCreateWithoutAfpInstitutionInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutAfpInstitutionInput | PeopleCreateOrConnectWithoutAfpInstitutionInput[]
    upsert?: PeopleUpsertWithWhereUniqueWithoutAfpInstitutionInput | PeopleUpsertWithWhereUniqueWithoutAfpInstitutionInput[]
    createMany?: PeopleCreateManyAfpInstitutionInputEnvelope
    set?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    disconnect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    delete?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    update?: PeopleUpdateWithWhereUniqueWithoutAfpInstitutionInput | PeopleUpdateWithWhereUniqueWithoutAfpInstitutionInput[]
    updateMany?: PeopleUpdateManyWithWhereWithoutAfpInstitutionInput | PeopleUpdateManyWithWhereWithoutAfpInstitutionInput[]
    deleteMany?: PeopleScalarWhereInput | PeopleScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type PeopleUncheckedUpdateManyWithoutAfpInstitutionNestedInput = {
    create?: XOR<PeopleCreateWithoutAfpInstitutionInput, PeopleUncheckedCreateWithoutAfpInstitutionInput> | PeopleCreateWithoutAfpInstitutionInput[] | PeopleUncheckedCreateWithoutAfpInstitutionInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutAfpInstitutionInput | PeopleCreateOrConnectWithoutAfpInstitutionInput[]
    upsert?: PeopleUpsertWithWhereUniqueWithoutAfpInstitutionInput | PeopleUpsertWithWhereUniqueWithoutAfpInstitutionInput[]
    createMany?: PeopleCreateManyAfpInstitutionInputEnvelope
    set?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    disconnect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    delete?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    update?: PeopleUpdateWithWhereUniqueWithoutAfpInstitutionInput | PeopleUpdateWithWhereUniqueWithoutAfpInstitutionInput[]
    updateMany?: PeopleUpdateManyWithWhereWithoutAfpInstitutionInput | PeopleUpdateManyWithWhereWithoutAfpInstitutionInput[]
    deleteMany?: PeopleScalarWhereInput | PeopleScalarWhereInput[]
  }

  export type ClientCreateNestedManyWithoutCurrencyTypeInput = {
    create?: XOR<ClientCreateWithoutCurrencyTypeInput, ClientUncheckedCreateWithoutCurrencyTypeInput> | ClientCreateWithoutCurrencyTypeInput[] | ClientUncheckedCreateWithoutCurrencyTypeInput[]
    connectOrCreate?: ClientCreateOrConnectWithoutCurrencyTypeInput | ClientCreateOrConnectWithoutCurrencyTypeInput[]
    createMany?: ClientCreateManyCurrencyTypeInputEnvelope
    connect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
  }

  export type PeopleCreateNestedManyWithoutSalaryCurrencyTypeInput = {
    create?: XOR<PeopleCreateWithoutSalaryCurrencyTypeInput, PeopleUncheckedCreateWithoutSalaryCurrencyTypeInput> | PeopleCreateWithoutSalaryCurrencyTypeInput[] | PeopleUncheckedCreateWithoutSalaryCurrencyTypeInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutSalaryCurrencyTypeInput | PeopleCreateOrConnectWithoutSalaryCurrencyTypeInput[]
    createMany?: PeopleCreateManySalaryCurrencyTypeInputEnvelope
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
  }

  export type PeopleCreateNestedManyWithoutFeeCurrencyTypeInput = {
    create?: XOR<PeopleCreateWithoutFeeCurrencyTypeInput, PeopleUncheckedCreateWithoutFeeCurrencyTypeInput> | PeopleCreateWithoutFeeCurrencyTypeInput[] | PeopleUncheckedCreateWithoutFeeCurrencyTypeInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutFeeCurrencyTypeInput | PeopleCreateOrConnectWithoutFeeCurrencyTypeInput[]
    createMany?: PeopleCreateManyFeeCurrencyTypeInputEnvelope
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
  }

  export type PeopleCreateNestedManyWithoutLaptopCurrencyTypeInput = {
    create?: XOR<PeopleCreateWithoutLaptopCurrencyTypeInput, PeopleUncheckedCreateWithoutLaptopCurrencyTypeInput> | PeopleCreateWithoutLaptopCurrencyTypeInput[] | PeopleUncheckedCreateWithoutLaptopCurrencyTypeInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutLaptopCurrencyTypeInput | PeopleCreateOrConnectWithoutLaptopCurrencyTypeInput[]
    createMany?: PeopleCreateManyLaptopCurrencyTypeInputEnvelope
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
  }

  export type PreInvoiceDetailCreateNestedManyWithoutCurrencyTypeInput = {
    create?: XOR<PreInvoiceDetailCreateWithoutCurrencyTypeInput, PreInvoiceDetailUncheckedCreateWithoutCurrencyTypeInput> | PreInvoiceDetailCreateWithoutCurrencyTypeInput[] | PreInvoiceDetailUncheckedCreateWithoutCurrencyTypeInput[]
    connectOrCreate?: PreInvoiceDetailCreateOrConnectWithoutCurrencyTypeInput | PreInvoiceDetailCreateOrConnectWithoutCurrencyTypeInput[]
    createMany?: PreInvoiceDetailCreateManyCurrencyTypeInputEnvelope
    connect?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
  }

  export type PriceCreateNestedManyWithoutCurrencyTypeInput = {
    create?: XOR<PriceCreateWithoutCurrencyTypeInput, PriceUncheckedCreateWithoutCurrencyTypeInput> | PriceCreateWithoutCurrencyTypeInput[] | PriceUncheckedCreateWithoutCurrencyTypeInput[]
    connectOrCreate?: PriceCreateOrConnectWithoutCurrencyTypeInput | PriceCreateOrConnectWithoutCurrencyTypeInput[]
    createMany?: PriceCreateManyCurrencyTypeInputEnvelope
    connect?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
  }

  export type ClientUncheckedCreateNestedManyWithoutCurrencyTypeInput = {
    create?: XOR<ClientCreateWithoutCurrencyTypeInput, ClientUncheckedCreateWithoutCurrencyTypeInput> | ClientCreateWithoutCurrencyTypeInput[] | ClientUncheckedCreateWithoutCurrencyTypeInput[]
    connectOrCreate?: ClientCreateOrConnectWithoutCurrencyTypeInput | ClientCreateOrConnectWithoutCurrencyTypeInput[]
    createMany?: ClientCreateManyCurrencyTypeInputEnvelope
    connect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
  }

  export type PeopleUncheckedCreateNestedManyWithoutSalaryCurrencyTypeInput = {
    create?: XOR<PeopleCreateWithoutSalaryCurrencyTypeInput, PeopleUncheckedCreateWithoutSalaryCurrencyTypeInput> | PeopleCreateWithoutSalaryCurrencyTypeInput[] | PeopleUncheckedCreateWithoutSalaryCurrencyTypeInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutSalaryCurrencyTypeInput | PeopleCreateOrConnectWithoutSalaryCurrencyTypeInput[]
    createMany?: PeopleCreateManySalaryCurrencyTypeInputEnvelope
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
  }

  export type PeopleUncheckedCreateNestedManyWithoutFeeCurrencyTypeInput = {
    create?: XOR<PeopleCreateWithoutFeeCurrencyTypeInput, PeopleUncheckedCreateWithoutFeeCurrencyTypeInput> | PeopleCreateWithoutFeeCurrencyTypeInput[] | PeopleUncheckedCreateWithoutFeeCurrencyTypeInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutFeeCurrencyTypeInput | PeopleCreateOrConnectWithoutFeeCurrencyTypeInput[]
    createMany?: PeopleCreateManyFeeCurrencyTypeInputEnvelope
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
  }

  export type PeopleUncheckedCreateNestedManyWithoutLaptopCurrencyTypeInput = {
    create?: XOR<PeopleCreateWithoutLaptopCurrencyTypeInput, PeopleUncheckedCreateWithoutLaptopCurrencyTypeInput> | PeopleCreateWithoutLaptopCurrencyTypeInput[] | PeopleUncheckedCreateWithoutLaptopCurrencyTypeInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutLaptopCurrencyTypeInput | PeopleCreateOrConnectWithoutLaptopCurrencyTypeInput[]
    createMany?: PeopleCreateManyLaptopCurrencyTypeInputEnvelope
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
  }

  export type PreInvoiceDetailUncheckedCreateNestedManyWithoutCurrencyTypeInput = {
    create?: XOR<PreInvoiceDetailCreateWithoutCurrencyTypeInput, PreInvoiceDetailUncheckedCreateWithoutCurrencyTypeInput> | PreInvoiceDetailCreateWithoutCurrencyTypeInput[] | PreInvoiceDetailUncheckedCreateWithoutCurrencyTypeInput[]
    connectOrCreate?: PreInvoiceDetailCreateOrConnectWithoutCurrencyTypeInput | PreInvoiceDetailCreateOrConnectWithoutCurrencyTypeInput[]
    createMany?: PreInvoiceDetailCreateManyCurrencyTypeInputEnvelope
    connect?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
  }

  export type PriceUncheckedCreateNestedManyWithoutCurrencyTypeInput = {
    create?: XOR<PriceCreateWithoutCurrencyTypeInput, PriceUncheckedCreateWithoutCurrencyTypeInput> | PriceCreateWithoutCurrencyTypeInput[] | PriceUncheckedCreateWithoutCurrencyTypeInput[]
    connectOrCreate?: PriceCreateOrConnectWithoutCurrencyTypeInput | PriceCreateOrConnectWithoutCurrencyTypeInput[]
    createMany?: PriceCreateManyCurrencyTypeInputEnvelope
    connect?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
  }

  export type ClientUpdateManyWithoutCurrencyTypeNestedInput = {
    create?: XOR<ClientCreateWithoutCurrencyTypeInput, ClientUncheckedCreateWithoutCurrencyTypeInput> | ClientCreateWithoutCurrencyTypeInput[] | ClientUncheckedCreateWithoutCurrencyTypeInput[]
    connectOrCreate?: ClientCreateOrConnectWithoutCurrencyTypeInput | ClientCreateOrConnectWithoutCurrencyTypeInput[]
    upsert?: ClientUpsertWithWhereUniqueWithoutCurrencyTypeInput | ClientUpsertWithWhereUniqueWithoutCurrencyTypeInput[]
    createMany?: ClientCreateManyCurrencyTypeInputEnvelope
    set?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    disconnect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    delete?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    connect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    update?: ClientUpdateWithWhereUniqueWithoutCurrencyTypeInput | ClientUpdateWithWhereUniqueWithoutCurrencyTypeInput[]
    updateMany?: ClientUpdateManyWithWhereWithoutCurrencyTypeInput | ClientUpdateManyWithWhereWithoutCurrencyTypeInput[]
    deleteMany?: ClientScalarWhereInput | ClientScalarWhereInput[]
  }

  export type PeopleUpdateManyWithoutSalaryCurrencyTypeNestedInput = {
    create?: XOR<PeopleCreateWithoutSalaryCurrencyTypeInput, PeopleUncheckedCreateWithoutSalaryCurrencyTypeInput> | PeopleCreateWithoutSalaryCurrencyTypeInput[] | PeopleUncheckedCreateWithoutSalaryCurrencyTypeInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutSalaryCurrencyTypeInput | PeopleCreateOrConnectWithoutSalaryCurrencyTypeInput[]
    upsert?: PeopleUpsertWithWhereUniqueWithoutSalaryCurrencyTypeInput | PeopleUpsertWithWhereUniqueWithoutSalaryCurrencyTypeInput[]
    createMany?: PeopleCreateManySalaryCurrencyTypeInputEnvelope
    set?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    disconnect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    delete?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    update?: PeopleUpdateWithWhereUniqueWithoutSalaryCurrencyTypeInput | PeopleUpdateWithWhereUniqueWithoutSalaryCurrencyTypeInput[]
    updateMany?: PeopleUpdateManyWithWhereWithoutSalaryCurrencyTypeInput | PeopleUpdateManyWithWhereWithoutSalaryCurrencyTypeInput[]
    deleteMany?: PeopleScalarWhereInput | PeopleScalarWhereInput[]
  }

  export type PeopleUpdateManyWithoutFeeCurrencyTypeNestedInput = {
    create?: XOR<PeopleCreateWithoutFeeCurrencyTypeInput, PeopleUncheckedCreateWithoutFeeCurrencyTypeInput> | PeopleCreateWithoutFeeCurrencyTypeInput[] | PeopleUncheckedCreateWithoutFeeCurrencyTypeInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutFeeCurrencyTypeInput | PeopleCreateOrConnectWithoutFeeCurrencyTypeInput[]
    upsert?: PeopleUpsertWithWhereUniqueWithoutFeeCurrencyTypeInput | PeopleUpsertWithWhereUniqueWithoutFeeCurrencyTypeInput[]
    createMany?: PeopleCreateManyFeeCurrencyTypeInputEnvelope
    set?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    disconnect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    delete?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    update?: PeopleUpdateWithWhereUniqueWithoutFeeCurrencyTypeInput | PeopleUpdateWithWhereUniqueWithoutFeeCurrencyTypeInput[]
    updateMany?: PeopleUpdateManyWithWhereWithoutFeeCurrencyTypeInput | PeopleUpdateManyWithWhereWithoutFeeCurrencyTypeInput[]
    deleteMany?: PeopleScalarWhereInput | PeopleScalarWhereInput[]
  }

  export type PeopleUpdateManyWithoutLaptopCurrencyTypeNestedInput = {
    create?: XOR<PeopleCreateWithoutLaptopCurrencyTypeInput, PeopleUncheckedCreateWithoutLaptopCurrencyTypeInput> | PeopleCreateWithoutLaptopCurrencyTypeInput[] | PeopleUncheckedCreateWithoutLaptopCurrencyTypeInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutLaptopCurrencyTypeInput | PeopleCreateOrConnectWithoutLaptopCurrencyTypeInput[]
    upsert?: PeopleUpsertWithWhereUniqueWithoutLaptopCurrencyTypeInput | PeopleUpsertWithWhereUniqueWithoutLaptopCurrencyTypeInput[]
    createMany?: PeopleCreateManyLaptopCurrencyTypeInputEnvelope
    set?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    disconnect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    delete?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    update?: PeopleUpdateWithWhereUniqueWithoutLaptopCurrencyTypeInput | PeopleUpdateWithWhereUniqueWithoutLaptopCurrencyTypeInput[]
    updateMany?: PeopleUpdateManyWithWhereWithoutLaptopCurrencyTypeInput | PeopleUpdateManyWithWhereWithoutLaptopCurrencyTypeInput[]
    deleteMany?: PeopleScalarWhereInput | PeopleScalarWhereInput[]
  }

  export type PreInvoiceDetailUpdateManyWithoutCurrencyTypeNestedInput = {
    create?: XOR<PreInvoiceDetailCreateWithoutCurrencyTypeInput, PreInvoiceDetailUncheckedCreateWithoutCurrencyTypeInput> | PreInvoiceDetailCreateWithoutCurrencyTypeInput[] | PreInvoiceDetailUncheckedCreateWithoutCurrencyTypeInput[]
    connectOrCreate?: PreInvoiceDetailCreateOrConnectWithoutCurrencyTypeInput | PreInvoiceDetailCreateOrConnectWithoutCurrencyTypeInput[]
    upsert?: PreInvoiceDetailUpsertWithWhereUniqueWithoutCurrencyTypeInput | PreInvoiceDetailUpsertWithWhereUniqueWithoutCurrencyTypeInput[]
    createMany?: PreInvoiceDetailCreateManyCurrencyTypeInputEnvelope
    set?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
    disconnect?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
    delete?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
    connect?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
    update?: PreInvoiceDetailUpdateWithWhereUniqueWithoutCurrencyTypeInput | PreInvoiceDetailUpdateWithWhereUniqueWithoutCurrencyTypeInput[]
    updateMany?: PreInvoiceDetailUpdateManyWithWhereWithoutCurrencyTypeInput | PreInvoiceDetailUpdateManyWithWhereWithoutCurrencyTypeInput[]
    deleteMany?: PreInvoiceDetailScalarWhereInput | PreInvoiceDetailScalarWhereInput[]
  }

  export type PriceUpdateManyWithoutCurrencyTypeNestedInput = {
    create?: XOR<PriceCreateWithoutCurrencyTypeInput, PriceUncheckedCreateWithoutCurrencyTypeInput> | PriceCreateWithoutCurrencyTypeInput[] | PriceUncheckedCreateWithoutCurrencyTypeInput[]
    connectOrCreate?: PriceCreateOrConnectWithoutCurrencyTypeInput | PriceCreateOrConnectWithoutCurrencyTypeInput[]
    upsert?: PriceUpsertWithWhereUniqueWithoutCurrencyTypeInput | PriceUpsertWithWhereUniqueWithoutCurrencyTypeInput[]
    createMany?: PriceCreateManyCurrencyTypeInputEnvelope
    set?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
    disconnect?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
    delete?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
    connect?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
    update?: PriceUpdateWithWhereUniqueWithoutCurrencyTypeInput | PriceUpdateWithWhereUniqueWithoutCurrencyTypeInput[]
    updateMany?: PriceUpdateManyWithWhereWithoutCurrencyTypeInput | PriceUpdateManyWithWhereWithoutCurrencyTypeInput[]
    deleteMany?: PriceScalarWhereInput | PriceScalarWhereInput[]
  }

  export type ClientUncheckedUpdateManyWithoutCurrencyTypeNestedInput = {
    create?: XOR<ClientCreateWithoutCurrencyTypeInput, ClientUncheckedCreateWithoutCurrencyTypeInput> | ClientCreateWithoutCurrencyTypeInput[] | ClientUncheckedCreateWithoutCurrencyTypeInput[]
    connectOrCreate?: ClientCreateOrConnectWithoutCurrencyTypeInput | ClientCreateOrConnectWithoutCurrencyTypeInput[]
    upsert?: ClientUpsertWithWhereUniqueWithoutCurrencyTypeInput | ClientUpsertWithWhereUniqueWithoutCurrencyTypeInput[]
    createMany?: ClientCreateManyCurrencyTypeInputEnvelope
    set?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    disconnect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    delete?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    connect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    update?: ClientUpdateWithWhereUniqueWithoutCurrencyTypeInput | ClientUpdateWithWhereUniqueWithoutCurrencyTypeInput[]
    updateMany?: ClientUpdateManyWithWhereWithoutCurrencyTypeInput | ClientUpdateManyWithWhereWithoutCurrencyTypeInput[]
    deleteMany?: ClientScalarWhereInput | ClientScalarWhereInput[]
  }

  export type PeopleUncheckedUpdateManyWithoutSalaryCurrencyTypeNestedInput = {
    create?: XOR<PeopleCreateWithoutSalaryCurrencyTypeInput, PeopleUncheckedCreateWithoutSalaryCurrencyTypeInput> | PeopleCreateWithoutSalaryCurrencyTypeInput[] | PeopleUncheckedCreateWithoutSalaryCurrencyTypeInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutSalaryCurrencyTypeInput | PeopleCreateOrConnectWithoutSalaryCurrencyTypeInput[]
    upsert?: PeopleUpsertWithWhereUniqueWithoutSalaryCurrencyTypeInput | PeopleUpsertWithWhereUniqueWithoutSalaryCurrencyTypeInput[]
    createMany?: PeopleCreateManySalaryCurrencyTypeInputEnvelope
    set?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    disconnect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    delete?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    update?: PeopleUpdateWithWhereUniqueWithoutSalaryCurrencyTypeInput | PeopleUpdateWithWhereUniqueWithoutSalaryCurrencyTypeInput[]
    updateMany?: PeopleUpdateManyWithWhereWithoutSalaryCurrencyTypeInput | PeopleUpdateManyWithWhereWithoutSalaryCurrencyTypeInput[]
    deleteMany?: PeopleScalarWhereInput | PeopleScalarWhereInput[]
  }

  export type PeopleUncheckedUpdateManyWithoutFeeCurrencyTypeNestedInput = {
    create?: XOR<PeopleCreateWithoutFeeCurrencyTypeInput, PeopleUncheckedCreateWithoutFeeCurrencyTypeInput> | PeopleCreateWithoutFeeCurrencyTypeInput[] | PeopleUncheckedCreateWithoutFeeCurrencyTypeInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutFeeCurrencyTypeInput | PeopleCreateOrConnectWithoutFeeCurrencyTypeInput[]
    upsert?: PeopleUpsertWithWhereUniqueWithoutFeeCurrencyTypeInput | PeopleUpsertWithWhereUniqueWithoutFeeCurrencyTypeInput[]
    createMany?: PeopleCreateManyFeeCurrencyTypeInputEnvelope
    set?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    disconnect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    delete?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    update?: PeopleUpdateWithWhereUniqueWithoutFeeCurrencyTypeInput | PeopleUpdateWithWhereUniqueWithoutFeeCurrencyTypeInput[]
    updateMany?: PeopleUpdateManyWithWhereWithoutFeeCurrencyTypeInput | PeopleUpdateManyWithWhereWithoutFeeCurrencyTypeInput[]
    deleteMany?: PeopleScalarWhereInput | PeopleScalarWhereInput[]
  }

  export type PeopleUncheckedUpdateManyWithoutLaptopCurrencyTypeNestedInput = {
    create?: XOR<PeopleCreateWithoutLaptopCurrencyTypeInput, PeopleUncheckedCreateWithoutLaptopCurrencyTypeInput> | PeopleCreateWithoutLaptopCurrencyTypeInput[] | PeopleUncheckedCreateWithoutLaptopCurrencyTypeInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutLaptopCurrencyTypeInput | PeopleCreateOrConnectWithoutLaptopCurrencyTypeInput[]
    upsert?: PeopleUpsertWithWhereUniqueWithoutLaptopCurrencyTypeInput | PeopleUpsertWithWhereUniqueWithoutLaptopCurrencyTypeInput[]
    createMany?: PeopleCreateManyLaptopCurrencyTypeInputEnvelope
    set?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    disconnect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    delete?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    update?: PeopleUpdateWithWhereUniqueWithoutLaptopCurrencyTypeInput | PeopleUpdateWithWhereUniqueWithoutLaptopCurrencyTypeInput[]
    updateMany?: PeopleUpdateManyWithWhereWithoutLaptopCurrencyTypeInput | PeopleUpdateManyWithWhereWithoutLaptopCurrencyTypeInput[]
    deleteMany?: PeopleScalarWhereInput | PeopleScalarWhereInput[]
  }

  export type PreInvoiceDetailUncheckedUpdateManyWithoutCurrencyTypeNestedInput = {
    create?: XOR<PreInvoiceDetailCreateWithoutCurrencyTypeInput, PreInvoiceDetailUncheckedCreateWithoutCurrencyTypeInput> | PreInvoiceDetailCreateWithoutCurrencyTypeInput[] | PreInvoiceDetailUncheckedCreateWithoutCurrencyTypeInput[]
    connectOrCreate?: PreInvoiceDetailCreateOrConnectWithoutCurrencyTypeInput | PreInvoiceDetailCreateOrConnectWithoutCurrencyTypeInput[]
    upsert?: PreInvoiceDetailUpsertWithWhereUniqueWithoutCurrencyTypeInput | PreInvoiceDetailUpsertWithWhereUniqueWithoutCurrencyTypeInput[]
    createMany?: PreInvoiceDetailCreateManyCurrencyTypeInputEnvelope
    set?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
    disconnect?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
    delete?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
    connect?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
    update?: PreInvoiceDetailUpdateWithWhereUniqueWithoutCurrencyTypeInput | PreInvoiceDetailUpdateWithWhereUniqueWithoutCurrencyTypeInput[]
    updateMany?: PreInvoiceDetailUpdateManyWithWhereWithoutCurrencyTypeInput | PreInvoiceDetailUpdateManyWithWhereWithoutCurrencyTypeInput[]
    deleteMany?: PreInvoiceDetailScalarWhereInput | PreInvoiceDetailScalarWhereInput[]
  }

  export type PriceUncheckedUpdateManyWithoutCurrencyTypeNestedInput = {
    create?: XOR<PriceCreateWithoutCurrencyTypeInput, PriceUncheckedCreateWithoutCurrencyTypeInput> | PriceCreateWithoutCurrencyTypeInput[] | PriceUncheckedCreateWithoutCurrencyTypeInput[]
    connectOrCreate?: PriceCreateOrConnectWithoutCurrencyTypeInput | PriceCreateOrConnectWithoutCurrencyTypeInput[]
    upsert?: PriceUpsertWithWhereUniqueWithoutCurrencyTypeInput | PriceUpsertWithWhereUniqueWithoutCurrencyTypeInput[]
    createMany?: PriceCreateManyCurrencyTypeInputEnvelope
    set?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
    disconnect?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
    delete?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
    connect?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
    update?: PriceUpdateWithWhereUniqueWithoutCurrencyTypeInput | PriceUpdateWithWhereUniqueWithoutCurrencyTypeInput[]
    updateMany?: PriceUpdateManyWithWhereWithoutCurrencyTypeInput | PriceUpdateManyWithWhereWithoutCurrencyTypeInput[]
    deleteMany?: PriceScalarWhereInput | PriceScalarWhereInput[]
  }

  export type CurrencyTypeCreateNestedOneWithoutClientsInput = {
    create?: XOR<CurrencyTypeCreateWithoutClientsInput, CurrencyTypeUncheckedCreateWithoutClientsInput>
    connectOrCreate?: CurrencyTypeCreateOrConnectWithoutClientsInput
    connect?: CurrencyTypeWhereUniqueInput
  }

  export type ContactCreateNestedManyWithoutClientInput = {
    create?: XOR<ContactCreateWithoutClientInput, ContactUncheckedCreateWithoutClientInput> | ContactCreateWithoutClientInput[] | ContactUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutClientInput | ContactCreateOrConnectWithoutClientInput[]
    createMany?: ContactCreateManyClientInputEnvelope
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
  }

  export type PeopleCreateNestedManyWithoutClientInput = {
    create?: XOR<PeopleCreateWithoutClientInput, PeopleUncheckedCreateWithoutClientInput> | PeopleCreateWithoutClientInput[] | PeopleUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutClientInput | PeopleCreateOrConnectWithoutClientInput[]
    createMany?: PeopleCreateManyClientInputEnvelope
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
  }

  export type PreInvoiceCreateNestedManyWithoutClientInput = {
    create?: XOR<PreInvoiceCreateWithoutClientInput, PreInvoiceUncheckedCreateWithoutClientInput> | PreInvoiceCreateWithoutClientInput[] | PreInvoiceUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PreInvoiceCreateOrConnectWithoutClientInput | PreInvoiceCreateOrConnectWithoutClientInput[]
    createMany?: PreInvoiceCreateManyClientInputEnvelope
    connect?: PreInvoiceWhereUniqueInput | PreInvoiceWhereUniqueInput[]
  }

  export type ProjectCreateNestedManyWithoutClientInput = {
    create?: XOR<ProjectCreateWithoutClientInput, ProjectUncheckedCreateWithoutClientInput> | ProjectCreateWithoutClientInput[] | ProjectUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutClientInput | ProjectCreateOrConnectWithoutClientInput[]
    createMany?: ProjectCreateManyClientInputEnvelope
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
  }

  export type ContactUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<ContactCreateWithoutClientInput, ContactUncheckedCreateWithoutClientInput> | ContactCreateWithoutClientInput[] | ContactUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutClientInput | ContactCreateOrConnectWithoutClientInput[]
    createMany?: ContactCreateManyClientInputEnvelope
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
  }

  export type PeopleUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<PeopleCreateWithoutClientInput, PeopleUncheckedCreateWithoutClientInput> | PeopleCreateWithoutClientInput[] | PeopleUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutClientInput | PeopleCreateOrConnectWithoutClientInput[]
    createMany?: PeopleCreateManyClientInputEnvelope
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
  }

  export type PreInvoiceUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<PreInvoiceCreateWithoutClientInput, PreInvoiceUncheckedCreateWithoutClientInput> | PreInvoiceCreateWithoutClientInput[] | PreInvoiceUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PreInvoiceCreateOrConnectWithoutClientInput | PreInvoiceCreateOrConnectWithoutClientInput[]
    createMany?: PreInvoiceCreateManyClientInputEnvelope
    connect?: PreInvoiceWhereUniqueInput | PreInvoiceWhereUniqueInput[]
  }

  export type ProjectUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<ProjectCreateWithoutClientInput, ProjectUncheckedCreateWithoutClientInput> | ProjectCreateWithoutClientInput[] | ProjectUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutClientInput | ProjectCreateOrConnectWithoutClientInput[]
    createMany?: ProjectCreateManyClientInputEnvelope
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type CurrencyTypeUpdateOneWithoutClientsNestedInput = {
    create?: XOR<CurrencyTypeCreateWithoutClientsInput, CurrencyTypeUncheckedCreateWithoutClientsInput>
    connectOrCreate?: CurrencyTypeCreateOrConnectWithoutClientsInput
    upsert?: CurrencyTypeUpsertWithoutClientsInput
    disconnect?: CurrencyTypeWhereInput | boolean
    delete?: CurrencyTypeWhereInput | boolean
    connect?: CurrencyTypeWhereUniqueInput
    update?: XOR<XOR<CurrencyTypeUpdateToOneWithWhereWithoutClientsInput, CurrencyTypeUpdateWithoutClientsInput>, CurrencyTypeUncheckedUpdateWithoutClientsInput>
  }

  export type ContactUpdateManyWithoutClientNestedInput = {
    create?: XOR<ContactCreateWithoutClientInput, ContactUncheckedCreateWithoutClientInput> | ContactCreateWithoutClientInput[] | ContactUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutClientInput | ContactCreateOrConnectWithoutClientInput[]
    upsert?: ContactUpsertWithWhereUniqueWithoutClientInput | ContactUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: ContactCreateManyClientInputEnvelope
    set?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    disconnect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    delete?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    update?: ContactUpdateWithWhereUniqueWithoutClientInput | ContactUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: ContactUpdateManyWithWhereWithoutClientInput | ContactUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: ContactScalarWhereInput | ContactScalarWhereInput[]
  }

  export type PeopleUpdateManyWithoutClientNestedInput = {
    create?: XOR<PeopleCreateWithoutClientInput, PeopleUncheckedCreateWithoutClientInput> | PeopleCreateWithoutClientInput[] | PeopleUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutClientInput | PeopleCreateOrConnectWithoutClientInput[]
    upsert?: PeopleUpsertWithWhereUniqueWithoutClientInput | PeopleUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: PeopleCreateManyClientInputEnvelope
    set?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    disconnect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    delete?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    update?: PeopleUpdateWithWhereUniqueWithoutClientInput | PeopleUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: PeopleUpdateManyWithWhereWithoutClientInput | PeopleUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: PeopleScalarWhereInput | PeopleScalarWhereInput[]
  }

  export type PreInvoiceUpdateManyWithoutClientNestedInput = {
    create?: XOR<PreInvoiceCreateWithoutClientInput, PreInvoiceUncheckedCreateWithoutClientInput> | PreInvoiceCreateWithoutClientInput[] | PreInvoiceUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PreInvoiceCreateOrConnectWithoutClientInput | PreInvoiceCreateOrConnectWithoutClientInput[]
    upsert?: PreInvoiceUpsertWithWhereUniqueWithoutClientInput | PreInvoiceUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: PreInvoiceCreateManyClientInputEnvelope
    set?: PreInvoiceWhereUniqueInput | PreInvoiceWhereUniqueInput[]
    disconnect?: PreInvoiceWhereUniqueInput | PreInvoiceWhereUniqueInput[]
    delete?: PreInvoiceWhereUniqueInput | PreInvoiceWhereUniqueInput[]
    connect?: PreInvoiceWhereUniqueInput | PreInvoiceWhereUniqueInput[]
    update?: PreInvoiceUpdateWithWhereUniqueWithoutClientInput | PreInvoiceUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: PreInvoiceUpdateManyWithWhereWithoutClientInput | PreInvoiceUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: PreInvoiceScalarWhereInput | PreInvoiceScalarWhereInput[]
  }

  export type ProjectUpdateManyWithoutClientNestedInput = {
    create?: XOR<ProjectCreateWithoutClientInput, ProjectUncheckedCreateWithoutClientInput> | ProjectCreateWithoutClientInput[] | ProjectUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutClientInput | ProjectCreateOrConnectWithoutClientInput[]
    upsert?: ProjectUpsertWithWhereUniqueWithoutClientInput | ProjectUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: ProjectCreateManyClientInputEnvelope
    set?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    disconnect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    delete?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    update?: ProjectUpdateWithWhereUniqueWithoutClientInput | ProjectUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: ProjectUpdateManyWithWhereWithoutClientInput | ProjectUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: ProjectScalarWhereInput | ProjectScalarWhereInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ContactUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<ContactCreateWithoutClientInput, ContactUncheckedCreateWithoutClientInput> | ContactCreateWithoutClientInput[] | ContactUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutClientInput | ContactCreateOrConnectWithoutClientInput[]
    upsert?: ContactUpsertWithWhereUniqueWithoutClientInput | ContactUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: ContactCreateManyClientInputEnvelope
    set?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    disconnect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    delete?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    update?: ContactUpdateWithWhereUniqueWithoutClientInput | ContactUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: ContactUpdateManyWithWhereWithoutClientInput | ContactUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: ContactScalarWhereInput | ContactScalarWhereInput[]
  }

  export type PeopleUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<PeopleCreateWithoutClientInput, PeopleUncheckedCreateWithoutClientInput> | PeopleCreateWithoutClientInput[] | PeopleUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutClientInput | PeopleCreateOrConnectWithoutClientInput[]
    upsert?: PeopleUpsertWithWhereUniqueWithoutClientInput | PeopleUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: PeopleCreateManyClientInputEnvelope
    set?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    disconnect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    delete?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    update?: PeopleUpdateWithWhereUniqueWithoutClientInput | PeopleUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: PeopleUpdateManyWithWhereWithoutClientInput | PeopleUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: PeopleScalarWhereInput | PeopleScalarWhereInput[]
  }

  export type PreInvoiceUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<PreInvoiceCreateWithoutClientInput, PreInvoiceUncheckedCreateWithoutClientInput> | PreInvoiceCreateWithoutClientInput[] | PreInvoiceUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PreInvoiceCreateOrConnectWithoutClientInput | PreInvoiceCreateOrConnectWithoutClientInput[]
    upsert?: PreInvoiceUpsertWithWhereUniqueWithoutClientInput | PreInvoiceUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: PreInvoiceCreateManyClientInputEnvelope
    set?: PreInvoiceWhereUniqueInput | PreInvoiceWhereUniqueInput[]
    disconnect?: PreInvoiceWhereUniqueInput | PreInvoiceWhereUniqueInput[]
    delete?: PreInvoiceWhereUniqueInput | PreInvoiceWhereUniqueInput[]
    connect?: PreInvoiceWhereUniqueInput | PreInvoiceWhereUniqueInput[]
    update?: PreInvoiceUpdateWithWhereUniqueWithoutClientInput | PreInvoiceUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: PreInvoiceUpdateManyWithWhereWithoutClientInput | PreInvoiceUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: PreInvoiceScalarWhereInput | PreInvoiceScalarWhereInput[]
  }

  export type ProjectUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<ProjectCreateWithoutClientInput, ProjectUncheckedCreateWithoutClientInput> | ProjectCreateWithoutClientInput[] | ProjectUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutClientInput | ProjectCreateOrConnectWithoutClientInput[]
    upsert?: ProjectUpsertWithWhereUniqueWithoutClientInput | ProjectUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: ProjectCreateManyClientInputEnvelope
    set?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    disconnect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    delete?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    update?: ProjectUpdateWithWhereUniqueWithoutClientInput | ProjectUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: ProjectUpdateManyWithWhereWithoutClientInput | ProjectUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: ProjectScalarWhereInput | ProjectScalarWhereInput[]
  }

  export type ClientCreateNestedOneWithoutContactsInput = {
    create?: XOR<ClientCreateWithoutContactsInput, ClientUncheckedCreateWithoutContactsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutContactsInput
    connect?: ClientWhereUniqueInput
  }

  export type TechnicalsStacksCreateNestedOneWithoutContactsInput = {
    create?: XOR<TechnicalsStacksCreateWithoutContactsInput, TechnicalsStacksUncheckedCreateWithoutContactsInput>
    connectOrCreate?: TechnicalsStacksCreateOrConnectWithoutContactsInput
    connect?: TechnicalsStacksWhereUniqueInput
  }

  export type PreInvoiceCreateNestedManyWithoutContactInput = {
    create?: XOR<PreInvoiceCreateWithoutContactInput, PreInvoiceUncheckedCreateWithoutContactInput> | PreInvoiceCreateWithoutContactInput[] | PreInvoiceUncheckedCreateWithoutContactInput[]
    connectOrCreate?: PreInvoiceCreateOrConnectWithoutContactInput | PreInvoiceCreateOrConnectWithoutContactInput[]
    createMany?: PreInvoiceCreateManyContactInputEnvelope
    connect?: PreInvoiceWhereUniqueInput | PreInvoiceWhereUniqueInput[]
  }

  export type PreInvoiceUncheckedCreateNestedManyWithoutContactInput = {
    create?: XOR<PreInvoiceCreateWithoutContactInput, PreInvoiceUncheckedCreateWithoutContactInput> | PreInvoiceCreateWithoutContactInput[] | PreInvoiceUncheckedCreateWithoutContactInput[]
    connectOrCreate?: PreInvoiceCreateOrConnectWithoutContactInput | PreInvoiceCreateOrConnectWithoutContactInput[]
    createMany?: PreInvoiceCreateManyContactInputEnvelope
    connect?: PreInvoiceWhereUniqueInput | PreInvoiceWhereUniqueInput[]
  }

  export type ClientUpdateOneWithoutContactsNestedInput = {
    create?: XOR<ClientCreateWithoutContactsInput, ClientUncheckedCreateWithoutContactsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutContactsInput
    upsert?: ClientUpsertWithoutContactsInput
    disconnect?: ClientWhereInput | boolean
    delete?: ClientWhereInput | boolean
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutContactsInput, ClientUpdateWithoutContactsInput>, ClientUncheckedUpdateWithoutContactsInput>
  }

  export type TechnicalsStacksUpdateOneWithoutContactsNestedInput = {
    create?: XOR<TechnicalsStacksCreateWithoutContactsInput, TechnicalsStacksUncheckedCreateWithoutContactsInput>
    connectOrCreate?: TechnicalsStacksCreateOrConnectWithoutContactsInput
    upsert?: TechnicalsStacksUpsertWithoutContactsInput
    disconnect?: TechnicalsStacksWhereInput | boolean
    delete?: TechnicalsStacksWhereInput | boolean
    connect?: TechnicalsStacksWhereUniqueInput
    update?: XOR<XOR<TechnicalsStacksUpdateToOneWithWhereWithoutContactsInput, TechnicalsStacksUpdateWithoutContactsInput>, TechnicalsStacksUncheckedUpdateWithoutContactsInput>
  }

  export type PreInvoiceUpdateManyWithoutContactNestedInput = {
    create?: XOR<PreInvoiceCreateWithoutContactInput, PreInvoiceUncheckedCreateWithoutContactInput> | PreInvoiceCreateWithoutContactInput[] | PreInvoiceUncheckedCreateWithoutContactInput[]
    connectOrCreate?: PreInvoiceCreateOrConnectWithoutContactInput | PreInvoiceCreateOrConnectWithoutContactInput[]
    upsert?: PreInvoiceUpsertWithWhereUniqueWithoutContactInput | PreInvoiceUpsertWithWhereUniqueWithoutContactInput[]
    createMany?: PreInvoiceCreateManyContactInputEnvelope
    set?: PreInvoiceWhereUniqueInput | PreInvoiceWhereUniqueInput[]
    disconnect?: PreInvoiceWhereUniqueInput | PreInvoiceWhereUniqueInput[]
    delete?: PreInvoiceWhereUniqueInput | PreInvoiceWhereUniqueInput[]
    connect?: PreInvoiceWhereUniqueInput | PreInvoiceWhereUniqueInput[]
    update?: PreInvoiceUpdateWithWhereUniqueWithoutContactInput | PreInvoiceUpdateWithWhereUniqueWithoutContactInput[]
    updateMany?: PreInvoiceUpdateManyWithWhereWithoutContactInput | PreInvoiceUpdateManyWithWhereWithoutContactInput[]
    deleteMany?: PreInvoiceScalarWhereInput | PreInvoiceScalarWhereInput[]
  }

  export type PreInvoiceUncheckedUpdateManyWithoutContactNestedInput = {
    create?: XOR<PreInvoiceCreateWithoutContactInput, PreInvoiceUncheckedCreateWithoutContactInput> | PreInvoiceCreateWithoutContactInput[] | PreInvoiceUncheckedCreateWithoutContactInput[]
    connectOrCreate?: PreInvoiceCreateOrConnectWithoutContactInput | PreInvoiceCreateOrConnectWithoutContactInput[]
    upsert?: PreInvoiceUpsertWithWhereUniqueWithoutContactInput | PreInvoiceUpsertWithWhereUniqueWithoutContactInput[]
    createMany?: PreInvoiceCreateManyContactInputEnvelope
    set?: PreInvoiceWhereUniqueInput | PreInvoiceWhereUniqueInput[]
    disconnect?: PreInvoiceWhereUniqueInput | PreInvoiceWhereUniqueInput[]
    delete?: PreInvoiceWhereUniqueInput | PreInvoiceWhereUniqueInput[]
    connect?: PreInvoiceWhereUniqueInput | PreInvoiceWhereUniqueInput[]
    update?: PreInvoiceUpdateWithWhereUniqueWithoutContactInput | PreInvoiceUpdateWithWhereUniqueWithoutContactInput[]
    updateMany?: PreInvoiceUpdateManyWithWhereWithoutContactInput | PreInvoiceUpdateManyWithWhereWithoutContactInput[]
    deleteMany?: PreInvoiceScalarWhereInput | PreInvoiceScalarWhereInput[]
  }

  export type PeopleCreateNestedManyWithoutHealthInstitutionInput = {
    create?: XOR<PeopleCreateWithoutHealthInstitutionInput, PeopleUncheckedCreateWithoutHealthInstitutionInput> | PeopleCreateWithoutHealthInstitutionInput[] | PeopleUncheckedCreateWithoutHealthInstitutionInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutHealthInstitutionInput | PeopleCreateOrConnectWithoutHealthInstitutionInput[]
    createMany?: PeopleCreateManyHealthInstitutionInputEnvelope
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
  }

  export type PeopleUncheckedCreateNestedManyWithoutHealthInstitutionInput = {
    create?: XOR<PeopleCreateWithoutHealthInstitutionInput, PeopleUncheckedCreateWithoutHealthInstitutionInput> | PeopleCreateWithoutHealthInstitutionInput[] | PeopleUncheckedCreateWithoutHealthInstitutionInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutHealthInstitutionInput | PeopleCreateOrConnectWithoutHealthInstitutionInput[]
    createMany?: PeopleCreateManyHealthInstitutionInputEnvelope
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
  }

  export type PeopleUpdateManyWithoutHealthInstitutionNestedInput = {
    create?: XOR<PeopleCreateWithoutHealthInstitutionInput, PeopleUncheckedCreateWithoutHealthInstitutionInput> | PeopleCreateWithoutHealthInstitutionInput[] | PeopleUncheckedCreateWithoutHealthInstitutionInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutHealthInstitutionInput | PeopleCreateOrConnectWithoutHealthInstitutionInput[]
    upsert?: PeopleUpsertWithWhereUniqueWithoutHealthInstitutionInput | PeopleUpsertWithWhereUniqueWithoutHealthInstitutionInput[]
    createMany?: PeopleCreateManyHealthInstitutionInputEnvelope
    set?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    disconnect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    delete?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    update?: PeopleUpdateWithWhereUniqueWithoutHealthInstitutionInput | PeopleUpdateWithWhereUniqueWithoutHealthInstitutionInput[]
    updateMany?: PeopleUpdateManyWithWhereWithoutHealthInstitutionInput | PeopleUpdateManyWithWhereWithoutHealthInstitutionInput[]
    deleteMany?: PeopleScalarWhereInput | PeopleScalarWhereInput[]
  }

  export type PeopleUncheckedUpdateManyWithoutHealthInstitutionNestedInput = {
    create?: XOR<PeopleCreateWithoutHealthInstitutionInput, PeopleUncheckedCreateWithoutHealthInstitutionInput> | PeopleCreateWithoutHealthInstitutionInput[] | PeopleUncheckedCreateWithoutHealthInstitutionInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutHealthInstitutionInput | PeopleCreateOrConnectWithoutHealthInstitutionInput[]
    upsert?: PeopleUpsertWithWhereUniqueWithoutHealthInstitutionInput | PeopleUpsertWithWhereUniqueWithoutHealthInstitutionInput[]
    createMany?: PeopleCreateManyHealthInstitutionInputEnvelope
    set?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    disconnect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    delete?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    update?: PeopleUpdateWithWhereUniqueWithoutHealthInstitutionInput | PeopleUpdateWithWhereUniqueWithoutHealthInstitutionInput[]
    updateMany?: PeopleUpdateManyWithWhereWithoutHealthInstitutionInput | PeopleUpdateManyWithWhereWithoutHealthInstitutionInput[]
    deleteMany?: PeopleScalarWhereInput | PeopleScalarWhereInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type PeopleCreateNestedManyWithoutJobTitleInput = {
    create?: XOR<PeopleCreateWithoutJobTitleInput, PeopleUncheckedCreateWithoutJobTitleInput> | PeopleCreateWithoutJobTitleInput[] | PeopleUncheckedCreateWithoutJobTitleInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutJobTitleInput | PeopleCreateOrConnectWithoutJobTitleInput[]
    createMany?: PeopleCreateManyJobTitleInputEnvelope
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
  }

  export type PeopleUncheckedCreateNestedManyWithoutJobTitleInput = {
    create?: XOR<PeopleCreateWithoutJobTitleInput, PeopleUncheckedCreateWithoutJobTitleInput> | PeopleCreateWithoutJobTitleInput[] | PeopleUncheckedCreateWithoutJobTitleInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutJobTitleInput | PeopleCreateOrConnectWithoutJobTitleInput[]
    createMany?: PeopleCreateManyJobTitleInputEnvelope
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
  }

  export type PeopleUpdateManyWithoutJobTitleNestedInput = {
    create?: XOR<PeopleCreateWithoutJobTitleInput, PeopleUncheckedCreateWithoutJobTitleInput> | PeopleCreateWithoutJobTitleInput[] | PeopleUncheckedCreateWithoutJobTitleInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutJobTitleInput | PeopleCreateOrConnectWithoutJobTitleInput[]
    upsert?: PeopleUpsertWithWhereUniqueWithoutJobTitleInput | PeopleUpsertWithWhereUniqueWithoutJobTitleInput[]
    createMany?: PeopleCreateManyJobTitleInputEnvelope
    set?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    disconnect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    delete?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    update?: PeopleUpdateWithWhereUniqueWithoutJobTitleInput | PeopleUpdateWithWhereUniqueWithoutJobTitleInput[]
    updateMany?: PeopleUpdateManyWithWhereWithoutJobTitleInput | PeopleUpdateManyWithWhereWithoutJobTitleInput[]
    deleteMany?: PeopleScalarWhereInput | PeopleScalarWhereInput[]
  }

  export type PeopleUncheckedUpdateManyWithoutJobTitleNestedInput = {
    create?: XOR<PeopleCreateWithoutJobTitleInput, PeopleUncheckedCreateWithoutJobTitleInput> | PeopleCreateWithoutJobTitleInput[] | PeopleUncheckedCreateWithoutJobTitleInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutJobTitleInput | PeopleCreateOrConnectWithoutJobTitleInput[]
    upsert?: PeopleUpsertWithWhereUniqueWithoutJobTitleInput | PeopleUpsertWithWhereUniqueWithoutJobTitleInput[]
    createMany?: PeopleCreateManyJobTitleInputEnvelope
    set?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    disconnect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    delete?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    update?: PeopleUpdateWithWhereUniqueWithoutJobTitleInput | PeopleUpdateWithWhereUniqueWithoutJobTitleInput[]
    updateMany?: PeopleUpdateManyWithWhereWithoutJobTitleInput | PeopleUpdateManyWithWhereWithoutJobTitleInput[]
    deleteMany?: PeopleScalarWhereInput | PeopleScalarWhereInput[]
  }

  export type PeopleCreateNestedManyWithoutRoleInput = {
    create?: XOR<PeopleCreateWithoutRoleInput, PeopleUncheckedCreateWithoutRoleInput> | PeopleCreateWithoutRoleInput[] | PeopleUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutRoleInput | PeopleCreateOrConnectWithoutRoleInput[]
    createMany?: PeopleCreateManyRoleInputEnvelope
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
  }

  export type PeopleUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<PeopleCreateWithoutRoleInput, PeopleUncheckedCreateWithoutRoleInput> | PeopleCreateWithoutRoleInput[] | PeopleUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutRoleInput | PeopleCreateOrConnectWithoutRoleInput[]
    createMany?: PeopleCreateManyRoleInputEnvelope
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
  }

  export type PeopleUpdateManyWithoutRoleNestedInput = {
    create?: XOR<PeopleCreateWithoutRoleInput, PeopleUncheckedCreateWithoutRoleInput> | PeopleCreateWithoutRoleInput[] | PeopleUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutRoleInput | PeopleCreateOrConnectWithoutRoleInput[]
    upsert?: PeopleUpsertWithWhereUniqueWithoutRoleInput | PeopleUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: PeopleCreateManyRoleInputEnvelope
    set?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    disconnect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    delete?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    update?: PeopleUpdateWithWhereUniqueWithoutRoleInput | PeopleUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: PeopleUpdateManyWithWhereWithoutRoleInput | PeopleUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: PeopleScalarWhereInput | PeopleScalarWhereInput[]
  }

  export type PeopleUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<PeopleCreateWithoutRoleInput, PeopleUncheckedCreateWithoutRoleInput> | PeopleCreateWithoutRoleInput[] | PeopleUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutRoleInput | PeopleCreateOrConnectWithoutRoleInput[]
    upsert?: PeopleUpsertWithWhereUniqueWithoutRoleInput | PeopleUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: PeopleCreateManyRoleInputEnvelope
    set?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    disconnect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    delete?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    update?: PeopleUpdateWithWhereUniqueWithoutRoleInput | PeopleUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: PeopleUpdateManyWithWhereWithoutRoleInput | PeopleUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: PeopleScalarWhereInput | PeopleScalarWhereInput[]
  }

  export type PeopleCreateNestedManyWithoutSeniorityInput = {
    create?: XOR<PeopleCreateWithoutSeniorityInput, PeopleUncheckedCreateWithoutSeniorityInput> | PeopleCreateWithoutSeniorityInput[] | PeopleUncheckedCreateWithoutSeniorityInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutSeniorityInput | PeopleCreateOrConnectWithoutSeniorityInput[]
    createMany?: PeopleCreateManySeniorityInputEnvelope
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
  }

  export type PeopleUncheckedCreateNestedManyWithoutSeniorityInput = {
    create?: XOR<PeopleCreateWithoutSeniorityInput, PeopleUncheckedCreateWithoutSeniorityInput> | PeopleCreateWithoutSeniorityInput[] | PeopleUncheckedCreateWithoutSeniorityInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutSeniorityInput | PeopleCreateOrConnectWithoutSeniorityInput[]
    createMany?: PeopleCreateManySeniorityInputEnvelope
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
  }

  export type PeopleUpdateManyWithoutSeniorityNestedInput = {
    create?: XOR<PeopleCreateWithoutSeniorityInput, PeopleUncheckedCreateWithoutSeniorityInput> | PeopleCreateWithoutSeniorityInput[] | PeopleUncheckedCreateWithoutSeniorityInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutSeniorityInput | PeopleCreateOrConnectWithoutSeniorityInput[]
    upsert?: PeopleUpsertWithWhereUniqueWithoutSeniorityInput | PeopleUpsertWithWhereUniqueWithoutSeniorityInput[]
    createMany?: PeopleCreateManySeniorityInputEnvelope
    set?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    disconnect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    delete?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    update?: PeopleUpdateWithWhereUniqueWithoutSeniorityInput | PeopleUpdateWithWhereUniqueWithoutSeniorityInput[]
    updateMany?: PeopleUpdateManyWithWhereWithoutSeniorityInput | PeopleUpdateManyWithWhereWithoutSeniorityInput[]
    deleteMany?: PeopleScalarWhereInput | PeopleScalarWhereInput[]
  }

  export type PeopleUncheckedUpdateManyWithoutSeniorityNestedInput = {
    create?: XOR<PeopleCreateWithoutSeniorityInput, PeopleUncheckedCreateWithoutSeniorityInput> | PeopleCreateWithoutSeniorityInput[] | PeopleUncheckedCreateWithoutSeniorityInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutSeniorityInput | PeopleCreateOrConnectWithoutSeniorityInput[]
    upsert?: PeopleUpsertWithWhereUniqueWithoutSeniorityInput | PeopleUpsertWithWhereUniqueWithoutSeniorityInput[]
    createMany?: PeopleCreateManySeniorityInputEnvelope
    set?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    disconnect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    delete?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    update?: PeopleUpdateWithWhereUniqueWithoutSeniorityInput | PeopleUpdateWithWhereUniqueWithoutSeniorityInput[]
    updateMany?: PeopleUpdateManyWithWhereWithoutSeniorityInput | PeopleUpdateManyWithWhereWithoutSeniorityInput[]
    deleteMany?: PeopleScalarWhereInput | PeopleScalarWhereInput[]
  }

  export type PeopleCreateNestedManyWithoutTechnicalStacksInput = {
    create?: XOR<PeopleCreateWithoutTechnicalStacksInput, PeopleUncheckedCreateWithoutTechnicalStacksInput> | PeopleCreateWithoutTechnicalStacksInput[] | PeopleUncheckedCreateWithoutTechnicalStacksInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutTechnicalStacksInput | PeopleCreateOrConnectWithoutTechnicalStacksInput[]
    createMany?: PeopleCreateManyTechnicalStacksInputEnvelope
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
  }

  export type ContactCreateNestedManyWithoutTechnicalStacksInput = {
    create?: XOR<ContactCreateWithoutTechnicalStacksInput, ContactUncheckedCreateWithoutTechnicalStacksInput> | ContactCreateWithoutTechnicalStacksInput[] | ContactUncheckedCreateWithoutTechnicalStacksInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutTechnicalStacksInput | ContactCreateOrConnectWithoutTechnicalStacksInput[]
    createMany?: ContactCreateManyTechnicalStacksInputEnvelope
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
  }

  export type PeopleUncheckedCreateNestedManyWithoutTechnicalStacksInput = {
    create?: XOR<PeopleCreateWithoutTechnicalStacksInput, PeopleUncheckedCreateWithoutTechnicalStacksInput> | PeopleCreateWithoutTechnicalStacksInput[] | PeopleUncheckedCreateWithoutTechnicalStacksInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutTechnicalStacksInput | PeopleCreateOrConnectWithoutTechnicalStacksInput[]
    createMany?: PeopleCreateManyTechnicalStacksInputEnvelope
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
  }

  export type ContactUncheckedCreateNestedManyWithoutTechnicalStacksInput = {
    create?: XOR<ContactCreateWithoutTechnicalStacksInput, ContactUncheckedCreateWithoutTechnicalStacksInput> | ContactCreateWithoutTechnicalStacksInput[] | ContactUncheckedCreateWithoutTechnicalStacksInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutTechnicalStacksInput | ContactCreateOrConnectWithoutTechnicalStacksInput[]
    createMany?: ContactCreateManyTechnicalStacksInputEnvelope
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
  }

  export type PeopleUpdateManyWithoutTechnicalStacksNestedInput = {
    create?: XOR<PeopleCreateWithoutTechnicalStacksInput, PeopleUncheckedCreateWithoutTechnicalStacksInput> | PeopleCreateWithoutTechnicalStacksInput[] | PeopleUncheckedCreateWithoutTechnicalStacksInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutTechnicalStacksInput | PeopleCreateOrConnectWithoutTechnicalStacksInput[]
    upsert?: PeopleUpsertWithWhereUniqueWithoutTechnicalStacksInput | PeopleUpsertWithWhereUniqueWithoutTechnicalStacksInput[]
    createMany?: PeopleCreateManyTechnicalStacksInputEnvelope
    set?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    disconnect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    delete?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    update?: PeopleUpdateWithWhereUniqueWithoutTechnicalStacksInput | PeopleUpdateWithWhereUniqueWithoutTechnicalStacksInput[]
    updateMany?: PeopleUpdateManyWithWhereWithoutTechnicalStacksInput | PeopleUpdateManyWithWhereWithoutTechnicalStacksInput[]
    deleteMany?: PeopleScalarWhereInput | PeopleScalarWhereInput[]
  }

  export type ContactUpdateManyWithoutTechnicalStacksNestedInput = {
    create?: XOR<ContactCreateWithoutTechnicalStacksInput, ContactUncheckedCreateWithoutTechnicalStacksInput> | ContactCreateWithoutTechnicalStacksInput[] | ContactUncheckedCreateWithoutTechnicalStacksInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutTechnicalStacksInput | ContactCreateOrConnectWithoutTechnicalStacksInput[]
    upsert?: ContactUpsertWithWhereUniqueWithoutTechnicalStacksInput | ContactUpsertWithWhereUniqueWithoutTechnicalStacksInput[]
    createMany?: ContactCreateManyTechnicalStacksInputEnvelope
    set?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    disconnect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    delete?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    update?: ContactUpdateWithWhereUniqueWithoutTechnicalStacksInput | ContactUpdateWithWhereUniqueWithoutTechnicalStacksInput[]
    updateMany?: ContactUpdateManyWithWhereWithoutTechnicalStacksInput | ContactUpdateManyWithWhereWithoutTechnicalStacksInput[]
    deleteMany?: ContactScalarWhereInput | ContactScalarWhereInput[]
  }

  export type PeopleUncheckedUpdateManyWithoutTechnicalStacksNestedInput = {
    create?: XOR<PeopleCreateWithoutTechnicalStacksInput, PeopleUncheckedCreateWithoutTechnicalStacksInput> | PeopleCreateWithoutTechnicalStacksInput[] | PeopleUncheckedCreateWithoutTechnicalStacksInput[]
    connectOrCreate?: PeopleCreateOrConnectWithoutTechnicalStacksInput | PeopleCreateOrConnectWithoutTechnicalStacksInput[]
    upsert?: PeopleUpsertWithWhereUniqueWithoutTechnicalStacksInput | PeopleUpsertWithWhereUniqueWithoutTechnicalStacksInput[]
    createMany?: PeopleCreateManyTechnicalStacksInputEnvelope
    set?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    disconnect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    delete?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    connect?: PeopleWhereUniqueInput | PeopleWhereUniqueInput[]
    update?: PeopleUpdateWithWhereUniqueWithoutTechnicalStacksInput | PeopleUpdateWithWhereUniqueWithoutTechnicalStacksInput[]
    updateMany?: PeopleUpdateManyWithWhereWithoutTechnicalStacksInput | PeopleUpdateManyWithWhereWithoutTechnicalStacksInput[]
    deleteMany?: PeopleScalarWhereInput | PeopleScalarWhereInput[]
  }

  export type ContactUncheckedUpdateManyWithoutTechnicalStacksNestedInput = {
    create?: XOR<ContactCreateWithoutTechnicalStacksInput, ContactUncheckedCreateWithoutTechnicalStacksInput> | ContactCreateWithoutTechnicalStacksInput[] | ContactUncheckedCreateWithoutTechnicalStacksInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutTechnicalStacksInput | ContactCreateOrConnectWithoutTechnicalStacksInput[]
    upsert?: ContactUpsertWithWhereUniqueWithoutTechnicalStacksInput | ContactUpsertWithWhereUniqueWithoutTechnicalStacksInput[]
    createMany?: ContactCreateManyTechnicalStacksInputEnvelope
    set?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    disconnect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    delete?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    update?: ContactUpdateWithWhereUniqueWithoutTechnicalStacksInput | ContactUpdateWithWhereUniqueWithoutTechnicalStacksInput[]
    updateMany?: ContactUpdateManyWithWhereWithoutTechnicalStacksInput | ContactUpdateManyWithWhereWithoutTechnicalStacksInput[]
    deleteMany?: ContactScalarWhereInput | ContactScalarWhereInput[]
  }

  export type CurrencyTypeCreateNestedOneWithoutPriceInput = {
    create?: XOR<CurrencyTypeCreateWithoutPriceInput, CurrencyTypeUncheckedCreateWithoutPriceInput>
    connectOrCreate?: CurrencyTypeCreateOrConnectWithoutPriceInput
    connect?: CurrencyTypeWhereUniqueInput
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type CurrencyTypeUpdateOneWithoutPriceNestedInput = {
    create?: XOR<CurrencyTypeCreateWithoutPriceInput, CurrencyTypeUncheckedCreateWithoutPriceInput>
    connectOrCreate?: CurrencyTypeCreateOrConnectWithoutPriceInput
    upsert?: CurrencyTypeUpsertWithoutPriceInput
    disconnect?: CurrencyTypeWhereInput | boolean
    delete?: CurrencyTypeWhereInput | boolean
    connect?: CurrencyTypeWhereUniqueInput
    update?: XOR<XOR<CurrencyTypeUpdateToOneWithWhereWithoutPriceInput, CurrencyTypeUpdateWithoutPriceInput>, CurrencyTypeUncheckedUpdateWithoutPriceInput>
  }

  export type LeaveDaysCreateNestedManyWithoutPersonInput = {
    create?: XOR<LeaveDaysCreateWithoutPersonInput, LeaveDaysUncheckedCreateWithoutPersonInput> | LeaveDaysCreateWithoutPersonInput[] | LeaveDaysUncheckedCreateWithoutPersonInput[]
    connectOrCreate?: LeaveDaysCreateOrConnectWithoutPersonInput | LeaveDaysCreateOrConnectWithoutPersonInput[]
    createMany?: LeaveDaysCreateManyPersonInputEnvelope
    connect?: LeaveDaysWhereUniqueInput | LeaveDaysWhereUniqueInput[]
  }

  export type AFPInstitutionCreateNestedOneWithoutPeopleInput = {
    create?: XOR<AFPInstitutionCreateWithoutPeopleInput, AFPInstitutionUncheckedCreateWithoutPeopleInput>
    connectOrCreate?: AFPInstitutionCreateOrConnectWithoutPeopleInput
    connect?: AFPInstitutionWhereUniqueInput
  }

  export type ClientCreateNestedOneWithoutPeopleInput = {
    create?: XOR<ClientCreateWithoutPeopleInput, ClientUncheckedCreateWithoutPeopleInput>
    connectOrCreate?: ClientCreateOrConnectWithoutPeopleInput
    connect?: ClientWhereUniqueInput
  }

  export type CurrencyTypeCreateNestedOneWithoutPeopleSalaryInput = {
    create?: XOR<CurrencyTypeCreateWithoutPeopleSalaryInput, CurrencyTypeUncheckedCreateWithoutPeopleSalaryInput>
    connectOrCreate?: CurrencyTypeCreateOrConnectWithoutPeopleSalaryInput
    connect?: CurrencyTypeWhereUniqueInput
  }

  export type CurrencyTypeCreateNestedOneWithoutPeopleFeeInput = {
    create?: XOR<CurrencyTypeCreateWithoutPeopleFeeInput, CurrencyTypeUncheckedCreateWithoutPeopleFeeInput>
    connectOrCreate?: CurrencyTypeCreateOrConnectWithoutPeopleFeeInput
    connect?: CurrencyTypeWhereUniqueInput
  }

  export type CurrencyTypeCreateNestedOneWithoutPeopleLaptopInput = {
    create?: XOR<CurrencyTypeCreateWithoutPeopleLaptopInput, CurrencyTypeUncheckedCreateWithoutPeopleLaptopInput>
    connectOrCreate?: CurrencyTypeCreateOrConnectWithoutPeopleLaptopInput
    connect?: CurrencyTypeWhereUniqueInput
  }

  export type HealthInstitutionCreateNestedOneWithoutPeopleInput = {
    create?: XOR<HealthInstitutionCreateWithoutPeopleInput, HealthInstitutionUncheckedCreateWithoutPeopleInput>
    connectOrCreate?: HealthInstitutionCreateOrConnectWithoutPeopleInput
    connect?: HealthInstitutionWhereUniqueInput
  }

  export type JobTitleCreateNestedOneWithoutPeopleInput = {
    create?: XOR<JobTitleCreateWithoutPeopleInput, JobTitleUncheckedCreateWithoutPeopleInput>
    connectOrCreate?: JobTitleCreateOrConnectWithoutPeopleInput
    connect?: JobTitleWhereUniqueInput
  }

  export type RoleCreateNestedOneWithoutPeopleInput = {
    create?: XOR<RoleCreateWithoutPeopleInput, RoleUncheckedCreateWithoutPeopleInput>
    connectOrCreate?: RoleCreateOrConnectWithoutPeopleInput
    connect?: RoleWhereUniqueInput
  }

  export type SeniorityCreateNestedOneWithoutPeopleInput = {
    create?: XOR<SeniorityCreateWithoutPeopleInput, SeniorityUncheckedCreateWithoutPeopleInput>
    connectOrCreate?: SeniorityCreateOrConnectWithoutPeopleInput
    connect?: SeniorityWhereUniqueInput
  }

  export type TechnicalsStacksCreateNestedOneWithoutPeopleInput = {
    create?: XOR<TechnicalsStacksCreateWithoutPeopleInput, TechnicalsStacksUncheckedCreateWithoutPeopleInput>
    connectOrCreate?: TechnicalsStacksCreateOrConnectWithoutPeopleInput
    connect?: TechnicalsStacksWhereUniqueInput
  }

  export type PreInvoiceDetailCreateNestedManyWithoutPersonInput = {
    create?: XOR<PreInvoiceDetailCreateWithoutPersonInput, PreInvoiceDetailUncheckedCreateWithoutPersonInput> | PreInvoiceDetailCreateWithoutPersonInput[] | PreInvoiceDetailUncheckedCreateWithoutPersonInput[]
    connectOrCreate?: PreInvoiceDetailCreateOrConnectWithoutPersonInput | PreInvoiceDetailCreateOrConnectWithoutPersonInput[]
    createMany?: PreInvoiceDetailCreateManyPersonInputEnvelope
    connect?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
  }

  export type LeaveDaysUncheckedCreateNestedManyWithoutPersonInput = {
    create?: XOR<LeaveDaysCreateWithoutPersonInput, LeaveDaysUncheckedCreateWithoutPersonInput> | LeaveDaysCreateWithoutPersonInput[] | LeaveDaysUncheckedCreateWithoutPersonInput[]
    connectOrCreate?: LeaveDaysCreateOrConnectWithoutPersonInput | LeaveDaysCreateOrConnectWithoutPersonInput[]
    createMany?: LeaveDaysCreateManyPersonInputEnvelope
    connect?: LeaveDaysWhereUniqueInput | LeaveDaysWhereUniqueInput[]
  }

  export type PreInvoiceDetailUncheckedCreateNestedManyWithoutPersonInput = {
    create?: XOR<PreInvoiceDetailCreateWithoutPersonInput, PreInvoiceDetailUncheckedCreateWithoutPersonInput> | PreInvoiceDetailCreateWithoutPersonInput[] | PreInvoiceDetailUncheckedCreateWithoutPersonInput[]
    connectOrCreate?: PreInvoiceDetailCreateOrConnectWithoutPersonInput | PreInvoiceDetailCreateOrConnectWithoutPersonInput[]
    createMany?: PreInvoiceDetailCreateManyPersonInputEnvelope
    connect?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type LeaveDaysUpdateManyWithoutPersonNestedInput = {
    create?: XOR<LeaveDaysCreateWithoutPersonInput, LeaveDaysUncheckedCreateWithoutPersonInput> | LeaveDaysCreateWithoutPersonInput[] | LeaveDaysUncheckedCreateWithoutPersonInput[]
    connectOrCreate?: LeaveDaysCreateOrConnectWithoutPersonInput | LeaveDaysCreateOrConnectWithoutPersonInput[]
    upsert?: LeaveDaysUpsertWithWhereUniqueWithoutPersonInput | LeaveDaysUpsertWithWhereUniqueWithoutPersonInput[]
    createMany?: LeaveDaysCreateManyPersonInputEnvelope
    set?: LeaveDaysWhereUniqueInput | LeaveDaysWhereUniqueInput[]
    disconnect?: LeaveDaysWhereUniqueInput | LeaveDaysWhereUniqueInput[]
    delete?: LeaveDaysWhereUniqueInput | LeaveDaysWhereUniqueInput[]
    connect?: LeaveDaysWhereUniqueInput | LeaveDaysWhereUniqueInput[]
    update?: LeaveDaysUpdateWithWhereUniqueWithoutPersonInput | LeaveDaysUpdateWithWhereUniqueWithoutPersonInput[]
    updateMany?: LeaveDaysUpdateManyWithWhereWithoutPersonInput | LeaveDaysUpdateManyWithWhereWithoutPersonInput[]
    deleteMany?: LeaveDaysScalarWhereInput | LeaveDaysScalarWhereInput[]
  }

  export type AFPInstitutionUpdateOneWithoutPeopleNestedInput = {
    create?: XOR<AFPInstitutionCreateWithoutPeopleInput, AFPInstitutionUncheckedCreateWithoutPeopleInput>
    connectOrCreate?: AFPInstitutionCreateOrConnectWithoutPeopleInput
    upsert?: AFPInstitutionUpsertWithoutPeopleInput
    disconnect?: AFPInstitutionWhereInput | boolean
    delete?: AFPInstitutionWhereInput | boolean
    connect?: AFPInstitutionWhereUniqueInput
    update?: XOR<XOR<AFPInstitutionUpdateToOneWithWhereWithoutPeopleInput, AFPInstitutionUpdateWithoutPeopleInput>, AFPInstitutionUncheckedUpdateWithoutPeopleInput>
  }

  export type ClientUpdateOneWithoutPeopleNestedInput = {
    create?: XOR<ClientCreateWithoutPeopleInput, ClientUncheckedCreateWithoutPeopleInput>
    connectOrCreate?: ClientCreateOrConnectWithoutPeopleInput
    upsert?: ClientUpsertWithoutPeopleInput
    disconnect?: ClientWhereInput | boolean
    delete?: ClientWhereInput | boolean
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutPeopleInput, ClientUpdateWithoutPeopleInput>, ClientUncheckedUpdateWithoutPeopleInput>
  }

  export type CurrencyTypeUpdateOneWithoutPeopleSalaryNestedInput = {
    create?: XOR<CurrencyTypeCreateWithoutPeopleSalaryInput, CurrencyTypeUncheckedCreateWithoutPeopleSalaryInput>
    connectOrCreate?: CurrencyTypeCreateOrConnectWithoutPeopleSalaryInput
    upsert?: CurrencyTypeUpsertWithoutPeopleSalaryInput
    disconnect?: CurrencyTypeWhereInput | boolean
    delete?: CurrencyTypeWhereInput | boolean
    connect?: CurrencyTypeWhereUniqueInput
    update?: XOR<XOR<CurrencyTypeUpdateToOneWithWhereWithoutPeopleSalaryInput, CurrencyTypeUpdateWithoutPeopleSalaryInput>, CurrencyTypeUncheckedUpdateWithoutPeopleSalaryInput>
  }

  export type CurrencyTypeUpdateOneWithoutPeopleFeeNestedInput = {
    create?: XOR<CurrencyTypeCreateWithoutPeopleFeeInput, CurrencyTypeUncheckedCreateWithoutPeopleFeeInput>
    connectOrCreate?: CurrencyTypeCreateOrConnectWithoutPeopleFeeInput
    upsert?: CurrencyTypeUpsertWithoutPeopleFeeInput
    disconnect?: CurrencyTypeWhereInput | boolean
    delete?: CurrencyTypeWhereInput | boolean
    connect?: CurrencyTypeWhereUniqueInput
    update?: XOR<XOR<CurrencyTypeUpdateToOneWithWhereWithoutPeopleFeeInput, CurrencyTypeUpdateWithoutPeopleFeeInput>, CurrencyTypeUncheckedUpdateWithoutPeopleFeeInput>
  }

  export type CurrencyTypeUpdateOneWithoutPeopleLaptopNestedInput = {
    create?: XOR<CurrencyTypeCreateWithoutPeopleLaptopInput, CurrencyTypeUncheckedCreateWithoutPeopleLaptopInput>
    connectOrCreate?: CurrencyTypeCreateOrConnectWithoutPeopleLaptopInput
    upsert?: CurrencyTypeUpsertWithoutPeopleLaptopInput
    disconnect?: CurrencyTypeWhereInput | boolean
    delete?: CurrencyTypeWhereInput | boolean
    connect?: CurrencyTypeWhereUniqueInput
    update?: XOR<XOR<CurrencyTypeUpdateToOneWithWhereWithoutPeopleLaptopInput, CurrencyTypeUpdateWithoutPeopleLaptopInput>, CurrencyTypeUncheckedUpdateWithoutPeopleLaptopInput>
  }

  export type HealthInstitutionUpdateOneWithoutPeopleNestedInput = {
    create?: XOR<HealthInstitutionCreateWithoutPeopleInput, HealthInstitutionUncheckedCreateWithoutPeopleInput>
    connectOrCreate?: HealthInstitutionCreateOrConnectWithoutPeopleInput
    upsert?: HealthInstitutionUpsertWithoutPeopleInput
    disconnect?: HealthInstitutionWhereInput | boolean
    delete?: HealthInstitutionWhereInput | boolean
    connect?: HealthInstitutionWhereUniqueInput
    update?: XOR<XOR<HealthInstitutionUpdateToOneWithWhereWithoutPeopleInput, HealthInstitutionUpdateWithoutPeopleInput>, HealthInstitutionUncheckedUpdateWithoutPeopleInput>
  }

  export type JobTitleUpdateOneWithoutPeopleNestedInput = {
    create?: XOR<JobTitleCreateWithoutPeopleInput, JobTitleUncheckedCreateWithoutPeopleInput>
    connectOrCreate?: JobTitleCreateOrConnectWithoutPeopleInput
    upsert?: JobTitleUpsertWithoutPeopleInput
    disconnect?: JobTitleWhereInput | boolean
    delete?: JobTitleWhereInput | boolean
    connect?: JobTitleWhereUniqueInput
    update?: XOR<XOR<JobTitleUpdateToOneWithWhereWithoutPeopleInput, JobTitleUpdateWithoutPeopleInput>, JobTitleUncheckedUpdateWithoutPeopleInput>
  }

  export type RoleUpdateOneWithoutPeopleNestedInput = {
    create?: XOR<RoleCreateWithoutPeopleInput, RoleUncheckedCreateWithoutPeopleInput>
    connectOrCreate?: RoleCreateOrConnectWithoutPeopleInput
    upsert?: RoleUpsertWithoutPeopleInput
    disconnect?: RoleWhereInput | boolean
    delete?: RoleWhereInput | boolean
    connect?: RoleWhereUniqueInput
    update?: XOR<XOR<RoleUpdateToOneWithWhereWithoutPeopleInput, RoleUpdateWithoutPeopleInput>, RoleUncheckedUpdateWithoutPeopleInput>
  }

  export type SeniorityUpdateOneWithoutPeopleNestedInput = {
    create?: XOR<SeniorityCreateWithoutPeopleInput, SeniorityUncheckedCreateWithoutPeopleInput>
    connectOrCreate?: SeniorityCreateOrConnectWithoutPeopleInput
    upsert?: SeniorityUpsertWithoutPeopleInput
    disconnect?: SeniorityWhereInput | boolean
    delete?: SeniorityWhereInput | boolean
    connect?: SeniorityWhereUniqueInput
    update?: XOR<XOR<SeniorityUpdateToOneWithWhereWithoutPeopleInput, SeniorityUpdateWithoutPeopleInput>, SeniorityUncheckedUpdateWithoutPeopleInput>
  }

  export type TechnicalsStacksUpdateOneWithoutPeopleNestedInput = {
    create?: XOR<TechnicalsStacksCreateWithoutPeopleInput, TechnicalsStacksUncheckedCreateWithoutPeopleInput>
    connectOrCreate?: TechnicalsStacksCreateOrConnectWithoutPeopleInput
    upsert?: TechnicalsStacksUpsertWithoutPeopleInput
    disconnect?: TechnicalsStacksWhereInput | boolean
    delete?: TechnicalsStacksWhereInput | boolean
    connect?: TechnicalsStacksWhereUniqueInput
    update?: XOR<XOR<TechnicalsStacksUpdateToOneWithWhereWithoutPeopleInput, TechnicalsStacksUpdateWithoutPeopleInput>, TechnicalsStacksUncheckedUpdateWithoutPeopleInput>
  }

  export type PreInvoiceDetailUpdateManyWithoutPersonNestedInput = {
    create?: XOR<PreInvoiceDetailCreateWithoutPersonInput, PreInvoiceDetailUncheckedCreateWithoutPersonInput> | PreInvoiceDetailCreateWithoutPersonInput[] | PreInvoiceDetailUncheckedCreateWithoutPersonInput[]
    connectOrCreate?: PreInvoiceDetailCreateOrConnectWithoutPersonInput | PreInvoiceDetailCreateOrConnectWithoutPersonInput[]
    upsert?: PreInvoiceDetailUpsertWithWhereUniqueWithoutPersonInput | PreInvoiceDetailUpsertWithWhereUniqueWithoutPersonInput[]
    createMany?: PreInvoiceDetailCreateManyPersonInputEnvelope
    set?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
    disconnect?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
    delete?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
    connect?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
    update?: PreInvoiceDetailUpdateWithWhereUniqueWithoutPersonInput | PreInvoiceDetailUpdateWithWhereUniqueWithoutPersonInput[]
    updateMany?: PreInvoiceDetailUpdateManyWithWhereWithoutPersonInput | PreInvoiceDetailUpdateManyWithWhereWithoutPersonInput[]
    deleteMany?: PreInvoiceDetailScalarWhereInput | PreInvoiceDetailScalarWhereInput[]
  }

  export type LeaveDaysUncheckedUpdateManyWithoutPersonNestedInput = {
    create?: XOR<LeaveDaysCreateWithoutPersonInput, LeaveDaysUncheckedCreateWithoutPersonInput> | LeaveDaysCreateWithoutPersonInput[] | LeaveDaysUncheckedCreateWithoutPersonInput[]
    connectOrCreate?: LeaveDaysCreateOrConnectWithoutPersonInput | LeaveDaysCreateOrConnectWithoutPersonInput[]
    upsert?: LeaveDaysUpsertWithWhereUniqueWithoutPersonInput | LeaveDaysUpsertWithWhereUniqueWithoutPersonInput[]
    createMany?: LeaveDaysCreateManyPersonInputEnvelope
    set?: LeaveDaysWhereUniqueInput | LeaveDaysWhereUniqueInput[]
    disconnect?: LeaveDaysWhereUniqueInput | LeaveDaysWhereUniqueInput[]
    delete?: LeaveDaysWhereUniqueInput | LeaveDaysWhereUniqueInput[]
    connect?: LeaveDaysWhereUniqueInput | LeaveDaysWhereUniqueInput[]
    update?: LeaveDaysUpdateWithWhereUniqueWithoutPersonInput | LeaveDaysUpdateWithWhereUniqueWithoutPersonInput[]
    updateMany?: LeaveDaysUpdateManyWithWhereWithoutPersonInput | LeaveDaysUpdateManyWithWhereWithoutPersonInput[]
    deleteMany?: LeaveDaysScalarWhereInput | LeaveDaysScalarWhereInput[]
  }

  export type PreInvoiceDetailUncheckedUpdateManyWithoutPersonNestedInput = {
    create?: XOR<PreInvoiceDetailCreateWithoutPersonInput, PreInvoiceDetailUncheckedCreateWithoutPersonInput> | PreInvoiceDetailCreateWithoutPersonInput[] | PreInvoiceDetailUncheckedCreateWithoutPersonInput[]
    connectOrCreate?: PreInvoiceDetailCreateOrConnectWithoutPersonInput | PreInvoiceDetailCreateOrConnectWithoutPersonInput[]
    upsert?: PreInvoiceDetailUpsertWithWhereUniqueWithoutPersonInput | PreInvoiceDetailUpsertWithWhereUniqueWithoutPersonInput[]
    createMany?: PreInvoiceDetailCreateManyPersonInputEnvelope
    set?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
    disconnect?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
    delete?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
    connect?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
    update?: PreInvoiceDetailUpdateWithWhereUniqueWithoutPersonInput | PreInvoiceDetailUpdateWithWhereUniqueWithoutPersonInput[]
    updateMany?: PreInvoiceDetailUpdateManyWithWhereWithoutPersonInput | PreInvoiceDetailUpdateManyWithWhereWithoutPersonInput[]
    deleteMany?: PreInvoiceDetailScalarWhereInput | PreInvoiceDetailScalarWhereInput[]
  }

  export type PeopleCreateNestedOneWithoutLeaveDaysInput = {
    create?: XOR<PeopleCreateWithoutLeaveDaysInput, PeopleUncheckedCreateWithoutLeaveDaysInput>
    connectOrCreate?: PeopleCreateOrConnectWithoutLeaveDaysInput
    connect?: PeopleWhereUniqueInput
  }

  export type PeopleUpdateOneWithoutLeaveDaysNestedInput = {
    create?: XOR<PeopleCreateWithoutLeaveDaysInput, PeopleUncheckedCreateWithoutLeaveDaysInput>
    connectOrCreate?: PeopleCreateOrConnectWithoutLeaveDaysInput
    upsert?: PeopleUpsertWithoutLeaveDaysInput
    disconnect?: PeopleWhereInput | boolean
    delete?: PeopleWhereInput | boolean
    connect?: PeopleWhereUniqueInput
    update?: XOR<XOR<PeopleUpdateToOneWithWhereWithoutLeaveDaysInput, PeopleUpdateWithoutLeaveDaysInput>, PeopleUncheckedUpdateWithoutLeaveDaysInput>
  }

  export type ClientCreateNestedOneWithoutPreInvoicesInput = {
    create?: XOR<ClientCreateWithoutPreInvoicesInput, ClientUncheckedCreateWithoutPreInvoicesInput>
    connectOrCreate?: ClientCreateOrConnectWithoutPreInvoicesInput
    connect?: ClientWhereUniqueInput
  }

  export type ContactCreateNestedOneWithoutPreInvoicesInput = {
    create?: XOR<ContactCreateWithoutPreInvoicesInput, ContactUncheckedCreateWithoutPreInvoicesInput>
    connectOrCreate?: ContactCreateOrConnectWithoutPreInvoicesInput
    connect?: ContactWhereUniqueInput
  }

  export type PreInvoiceDetailCreateNestedManyWithoutPreInvoiceInput = {
    create?: XOR<PreInvoiceDetailCreateWithoutPreInvoiceInput, PreInvoiceDetailUncheckedCreateWithoutPreInvoiceInput> | PreInvoiceDetailCreateWithoutPreInvoiceInput[] | PreInvoiceDetailUncheckedCreateWithoutPreInvoiceInput[]
    connectOrCreate?: PreInvoiceDetailCreateOrConnectWithoutPreInvoiceInput | PreInvoiceDetailCreateOrConnectWithoutPreInvoiceInput[]
    createMany?: PreInvoiceDetailCreateManyPreInvoiceInputEnvelope
    connect?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
  }

  export type PreInvoiceDetailUncheckedCreateNestedManyWithoutPreInvoiceInput = {
    create?: XOR<PreInvoiceDetailCreateWithoutPreInvoiceInput, PreInvoiceDetailUncheckedCreateWithoutPreInvoiceInput> | PreInvoiceDetailCreateWithoutPreInvoiceInput[] | PreInvoiceDetailUncheckedCreateWithoutPreInvoiceInput[]
    connectOrCreate?: PreInvoiceDetailCreateOrConnectWithoutPreInvoiceInput | PreInvoiceDetailCreateOrConnectWithoutPreInvoiceInput[]
    createMany?: PreInvoiceDetailCreateManyPreInvoiceInputEnvelope
    connect?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
  }

  export type ClientUpdateOneWithoutPreInvoicesNestedInput = {
    create?: XOR<ClientCreateWithoutPreInvoicesInput, ClientUncheckedCreateWithoutPreInvoicesInput>
    connectOrCreate?: ClientCreateOrConnectWithoutPreInvoicesInput
    upsert?: ClientUpsertWithoutPreInvoicesInput
    disconnect?: ClientWhereInput | boolean
    delete?: ClientWhereInput | boolean
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutPreInvoicesInput, ClientUpdateWithoutPreInvoicesInput>, ClientUncheckedUpdateWithoutPreInvoicesInput>
  }

  export type ContactUpdateOneWithoutPreInvoicesNestedInput = {
    create?: XOR<ContactCreateWithoutPreInvoicesInput, ContactUncheckedCreateWithoutPreInvoicesInput>
    connectOrCreate?: ContactCreateOrConnectWithoutPreInvoicesInput
    upsert?: ContactUpsertWithoutPreInvoicesInput
    disconnect?: ContactWhereInput | boolean
    delete?: ContactWhereInput | boolean
    connect?: ContactWhereUniqueInput
    update?: XOR<XOR<ContactUpdateToOneWithWhereWithoutPreInvoicesInput, ContactUpdateWithoutPreInvoicesInput>, ContactUncheckedUpdateWithoutPreInvoicesInput>
  }

  export type PreInvoiceDetailUpdateManyWithoutPreInvoiceNestedInput = {
    create?: XOR<PreInvoiceDetailCreateWithoutPreInvoiceInput, PreInvoiceDetailUncheckedCreateWithoutPreInvoiceInput> | PreInvoiceDetailCreateWithoutPreInvoiceInput[] | PreInvoiceDetailUncheckedCreateWithoutPreInvoiceInput[]
    connectOrCreate?: PreInvoiceDetailCreateOrConnectWithoutPreInvoiceInput | PreInvoiceDetailCreateOrConnectWithoutPreInvoiceInput[]
    upsert?: PreInvoiceDetailUpsertWithWhereUniqueWithoutPreInvoiceInput | PreInvoiceDetailUpsertWithWhereUniqueWithoutPreInvoiceInput[]
    createMany?: PreInvoiceDetailCreateManyPreInvoiceInputEnvelope
    set?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
    disconnect?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
    delete?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
    connect?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
    update?: PreInvoiceDetailUpdateWithWhereUniqueWithoutPreInvoiceInput | PreInvoiceDetailUpdateWithWhereUniqueWithoutPreInvoiceInput[]
    updateMany?: PreInvoiceDetailUpdateManyWithWhereWithoutPreInvoiceInput | PreInvoiceDetailUpdateManyWithWhereWithoutPreInvoiceInput[]
    deleteMany?: PreInvoiceDetailScalarWhereInput | PreInvoiceDetailScalarWhereInput[]
  }

  export type PreInvoiceDetailUncheckedUpdateManyWithoutPreInvoiceNestedInput = {
    create?: XOR<PreInvoiceDetailCreateWithoutPreInvoiceInput, PreInvoiceDetailUncheckedCreateWithoutPreInvoiceInput> | PreInvoiceDetailCreateWithoutPreInvoiceInput[] | PreInvoiceDetailUncheckedCreateWithoutPreInvoiceInput[]
    connectOrCreate?: PreInvoiceDetailCreateOrConnectWithoutPreInvoiceInput | PreInvoiceDetailCreateOrConnectWithoutPreInvoiceInput[]
    upsert?: PreInvoiceDetailUpsertWithWhereUniqueWithoutPreInvoiceInput | PreInvoiceDetailUpsertWithWhereUniqueWithoutPreInvoiceInput[]
    createMany?: PreInvoiceDetailCreateManyPreInvoiceInputEnvelope
    set?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
    disconnect?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
    delete?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
    connect?: PreInvoiceDetailWhereUniqueInput | PreInvoiceDetailWhereUniqueInput[]
    update?: PreInvoiceDetailUpdateWithWhereUniqueWithoutPreInvoiceInput | PreInvoiceDetailUpdateWithWhereUniqueWithoutPreInvoiceInput[]
    updateMany?: PreInvoiceDetailUpdateManyWithWhereWithoutPreInvoiceInput | PreInvoiceDetailUpdateManyWithWhereWithoutPreInvoiceInput[]
    deleteMany?: PreInvoiceDetailScalarWhereInput | PreInvoiceDetailScalarWhereInput[]
  }

  export type CurrencyTypeCreateNestedOneWithoutPreInvoiceDetailInput = {
    create?: XOR<CurrencyTypeCreateWithoutPreInvoiceDetailInput, CurrencyTypeUncheckedCreateWithoutPreInvoiceDetailInput>
    connectOrCreate?: CurrencyTypeCreateOrConnectWithoutPreInvoiceDetailInput
    connect?: CurrencyTypeWhereUniqueInput
  }

  export type PeopleCreateNestedOneWithoutPreInvoiceDetailsInput = {
    create?: XOR<PeopleCreateWithoutPreInvoiceDetailsInput, PeopleUncheckedCreateWithoutPreInvoiceDetailsInput>
    connectOrCreate?: PeopleCreateOrConnectWithoutPreInvoiceDetailsInput
    connect?: PeopleWhereUniqueInput
  }

  export type PreInvoiceCreateNestedOneWithoutDetailsInput = {
    create?: XOR<PreInvoiceCreateWithoutDetailsInput, PreInvoiceUncheckedCreateWithoutDetailsInput>
    connectOrCreate?: PreInvoiceCreateOrConnectWithoutDetailsInput
    connect?: PreInvoiceWhereUniqueInput
  }

  export type CurrencyTypeUpdateOneWithoutPreInvoiceDetailNestedInput = {
    create?: XOR<CurrencyTypeCreateWithoutPreInvoiceDetailInput, CurrencyTypeUncheckedCreateWithoutPreInvoiceDetailInput>
    connectOrCreate?: CurrencyTypeCreateOrConnectWithoutPreInvoiceDetailInput
    upsert?: CurrencyTypeUpsertWithoutPreInvoiceDetailInput
    disconnect?: CurrencyTypeWhereInput | boolean
    delete?: CurrencyTypeWhereInput | boolean
    connect?: CurrencyTypeWhereUniqueInput
    update?: XOR<XOR<CurrencyTypeUpdateToOneWithWhereWithoutPreInvoiceDetailInput, CurrencyTypeUpdateWithoutPreInvoiceDetailInput>, CurrencyTypeUncheckedUpdateWithoutPreInvoiceDetailInput>
  }

  export type PeopleUpdateOneWithoutPreInvoiceDetailsNestedInput = {
    create?: XOR<PeopleCreateWithoutPreInvoiceDetailsInput, PeopleUncheckedCreateWithoutPreInvoiceDetailsInput>
    connectOrCreate?: PeopleCreateOrConnectWithoutPreInvoiceDetailsInput
    upsert?: PeopleUpsertWithoutPreInvoiceDetailsInput
    disconnect?: PeopleWhereInput | boolean
    delete?: PeopleWhereInput | boolean
    connect?: PeopleWhereUniqueInput
    update?: XOR<XOR<PeopleUpdateToOneWithWhereWithoutPreInvoiceDetailsInput, PeopleUpdateWithoutPreInvoiceDetailsInput>, PeopleUncheckedUpdateWithoutPreInvoiceDetailsInput>
  }

  export type PreInvoiceUpdateOneWithoutDetailsNestedInput = {
    create?: XOR<PreInvoiceCreateWithoutDetailsInput, PreInvoiceUncheckedCreateWithoutDetailsInput>
    connectOrCreate?: PreInvoiceCreateOrConnectWithoutDetailsInput
    upsert?: PreInvoiceUpsertWithoutDetailsInput
    disconnect?: PreInvoiceWhereInput | boolean
    delete?: PreInvoiceWhereInput | boolean
    connect?: PreInvoiceWhereUniqueInput
    update?: XOR<XOR<PreInvoiceUpdateToOneWithWhereWithoutDetailsInput, PreInvoiceUpdateWithoutDetailsInput>, PreInvoiceUncheckedUpdateWithoutDetailsInput>
  }

  export type ClientCreateNestedOneWithoutProjectsInput = {
    create?: XOR<ClientCreateWithoutProjectsInput, ClientUncheckedCreateWithoutProjectsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutProjectsInput
    connect?: ClientWhereUniqueInput
  }

  export type ClientUpdateOneWithoutProjectsNestedInput = {
    create?: XOR<ClientCreateWithoutProjectsInput, ClientUncheckedCreateWithoutProjectsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutProjectsInput
    upsert?: ClientUpsertWithoutProjectsInput
    disconnect?: ClientWhereInput | boolean
    delete?: ClientWhereInput | boolean
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutProjectsInput, ClientUpdateWithoutProjectsInput>, ClientUncheckedUpdateWithoutProjectsInput>
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type PeopleCreateWithoutAfpInstitutionInput = {
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    remote?: string | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    bank?: string | null
    accountNumber?: string | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leaveDays?: LeaveDaysCreateNestedManyWithoutPersonInput
    client?: ClientCreateNestedOneWithoutPeopleInput
    salaryCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleSalaryInput
    feeCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleFeeInput
    laptopCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleLaptopInput
    healthInstitution?: HealthInstitutionCreateNestedOneWithoutPeopleInput
    jobTitle?: JobTitleCreateNestedOneWithoutPeopleInput
    role?: RoleCreateNestedOneWithoutPeopleInput
    seniority?: SeniorityCreateNestedOneWithoutPeopleInput
    technicalStacks?: TechnicalsStacksCreateNestedOneWithoutPeopleInput
    preInvoiceDetails?: PreInvoiceDetailCreateNestedManyWithoutPersonInput
  }

  export type PeopleUncheckedCreateWithoutAfpInstitutionInput = {
    id?: number
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    roleId?: number | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    clientId?: number | null
    remote?: string | null
    jobTitleId?: number | null
    seniorityId?: number | null
    technicalStacksId?: number | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    healthInstitutionId?: number | null
    bank?: string | null
    accountNumber?: string | null
    salaryCurrencyTypeId?: number | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: number | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopCurrencyTypeId?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leaveDays?: LeaveDaysUncheckedCreateNestedManyWithoutPersonInput
    preInvoiceDetails?: PreInvoiceDetailUncheckedCreateNestedManyWithoutPersonInput
  }

  export type PeopleCreateOrConnectWithoutAfpInstitutionInput = {
    where: PeopleWhereUniqueInput
    create: XOR<PeopleCreateWithoutAfpInstitutionInput, PeopleUncheckedCreateWithoutAfpInstitutionInput>
  }

  export type PeopleCreateManyAfpInstitutionInputEnvelope = {
    data: PeopleCreateManyAfpInstitutionInput | PeopleCreateManyAfpInstitutionInput[]
    skipDuplicates?: boolean
  }

  export type PeopleUpsertWithWhereUniqueWithoutAfpInstitutionInput = {
    where: PeopleWhereUniqueInput
    update: XOR<PeopleUpdateWithoutAfpInstitutionInput, PeopleUncheckedUpdateWithoutAfpInstitutionInput>
    create: XOR<PeopleCreateWithoutAfpInstitutionInput, PeopleUncheckedCreateWithoutAfpInstitutionInput>
  }

  export type PeopleUpdateWithWhereUniqueWithoutAfpInstitutionInput = {
    where: PeopleWhereUniqueInput
    data: XOR<PeopleUpdateWithoutAfpInstitutionInput, PeopleUncheckedUpdateWithoutAfpInstitutionInput>
  }

  export type PeopleUpdateManyWithWhereWithoutAfpInstitutionInput = {
    where: PeopleScalarWhereInput
    data: XOR<PeopleUpdateManyMutationInput, PeopleUncheckedUpdateManyWithoutAfpInstitutionInput>
  }

  export type PeopleScalarWhereInput = {
    AND?: PeopleScalarWhereInput | PeopleScalarWhereInput[]
    OR?: PeopleScalarWhereInput[]
    NOT?: PeopleScalarWhereInput | PeopleScalarWhereInput[]
    id?: IntFilter<"People"> | number
    name?: StringFilter<"People"> | string
    lastName?: StringFilter<"People"> | string
    dni?: StringNullableFilter<"People"> | string | null
    corporateName?: StringNullableFilter<"People"> | string | null
    corporateEmail?: StringNullableFilter<"People"> | string | null
    contractType?: StringNullableFilter<"People"> | string | null
    contractStart?: DateTimeNullableFilter<"People"> | Date | string | null
    contractEnd?: DateTimeNullableFilter<"People"> | Date | string | null
    contractClientEnd?: DateTimeNullableFilter<"People"> | Date | string | null
    roleId?: IntNullableFilter<"People"> | number | null
    isActive?: BoolNullableFilter<"People"> | boolean | null
    causal?: StringNullableFilter<"People"> | string | null
    reason?: StringNullableFilter<"People"> | string | null
    clientId?: IntNullableFilter<"People"> | number | null
    remote?: StringNullableFilter<"People"> | string | null
    jobTitleId?: IntNullableFilter<"People"> | number | null
    seniorityId?: IntNullableFilter<"People"> | number | null
    technicalStacksId?: IntNullableFilter<"People"> | number | null
    salesManager?: StringNullableFilter<"People"> | string | null
    searchManager?: StringNullableFilter<"People"> | string | null
    deliveryManager?: StringNullableFilter<"People"> | string | null
    administrativeArea?: StringNullableFilter<"People"> | string | null
    leader?: StringNullableFilter<"People"> | string | null
    leaderMail?: StringNullableFilter<"People"> | string | null
    leaderPhone?: StringNullableFilter<"People"> | string | null
    birth?: DateTimeNullableFilter<"People"> | Date | string | null
    phone?: StringNullableFilter<"People"> | string | null
    email?: StringNullableFilter<"People"> | string | null
    address?: StringNullableFilter<"People"> | string | null
    sublocality?: StringNullableFilter<"People"> | string | null
    locality?: StringNullableFilter<"People"> | string | null
    country?: StringNullableFilter<"People"> | string | null
    nationality?: StringNullableFilter<"People"> | string | null
    afpInstitutionId?: IntNullableFilter<"People"> | number | null
    healthInstitutionId?: IntNullableFilter<"People"> | number | null
    bank?: StringNullableFilter<"People"> | string | null
    accountNumber?: StringNullableFilter<"People"> | string | null
    salaryCurrencyTypeId?: IntNullableFilter<"People"> | number | null
    netSalary?: DecimalNullableFilter<"People"> | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: IntNullableFilter<"People"> | number | null
    serviceFee?: DecimalNullableFilter<"People"> | Decimal | DecimalJsLike | number | string | null
    fee?: BoolNullableFilter<"People"> | boolean | null
    billableDay?: IntNullableFilter<"People"> | number | null
    laptopCurrencyTypeId?: IntNullableFilter<"People"> | number | null
    laptopBonus?: DecimalNullableFilter<"People"> | Decimal | DecimalJsLike | number | string | null
    comment?: StringNullableFilter<"People"> | string | null
    createdAt?: DateTimeNullableFilter<"People"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"People"> | Date | string | null
  }

  export type ClientCreateWithoutCurrencyTypeInput = {
    name: string
    billableDay?: Decimal | DecimalJsLike | number | string | null
    rut?: string | null
    address?: string | null
    companyName?: string | null
    marginPercentage?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contacts?: ContactCreateNestedManyWithoutClientInput
    people?: PeopleCreateNestedManyWithoutClientInput
    preInvoices?: PreInvoiceCreateNestedManyWithoutClientInput
    projects?: ProjectCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutCurrencyTypeInput = {
    id?: number
    name: string
    billableDay?: Decimal | DecimalJsLike | number | string | null
    rut?: string | null
    address?: string | null
    companyName?: string | null
    marginPercentage?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutClientInput
    people?: PeopleUncheckedCreateNestedManyWithoutClientInput
    preInvoices?: PreInvoiceUncheckedCreateNestedManyWithoutClientInput
    projects?: ProjectUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutCurrencyTypeInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutCurrencyTypeInput, ClientUncheckedCreateWithoutCurrencyTypeInput>
  }

  export type ClientCreateManyCurrencyTypeInputEnvelope = {
    data: ClientCreateManyCurrencyTypeInput | ClientCreateManyCurrencyTypeInput[]
    skipDuplicates?: boolean
  }

  export type PeopleCreateWithoutSalaryCurrencyTypeInput = {
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    remote?: string | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    bank?: string | null
    accountNumber?: string | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leaveDays?: LeaveDaysCreateNestedManyWithoutPersonInput
    afpInstitution?: AFPInstitutionCreateNestedOneWithoutPeopleInput
    client?: ClientCreateNestedOneWithoutPeopleInput
    feeCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleFeeInput
    laptopCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleLaptopInput
    healthInstitution?: HealthInstitutionCreateNestedOneWithoutPeopleInput
    jobTitle?: JobTitleCreateNestedOneWithoutPeopleInput
    role?: RoleCreateNestedOneWithoutPeopleInput
    seniority?: SeniorityCreateNestedOneWithoutPeopleInput
    technicalStacks?: TechnicalsStacksCreateNestedOneWithoutPeopleInput
    preInvoiceDetails?: PreInvoiceDetailCreateNestedManyWithoutPersonInput
  }

  export type PeopleUncheckedCreateWithoutSalaryCurrencyTypeInput = {
    id?: number
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    roleId?: number | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    clientId?: number | null
    remote?: string | null
    jobTitleId?: number | null
    seniorityId?: number | null
    technicalStacksId?: number | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    afpInstitutionId?: number | null
    healthInstitutionId?: number | null
    bank?: string | null
    accountNumber?: string | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: number | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopCurrencyTypeId?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leaveDays?: LeaveDaysUncheckedCreateNestedManyWithoutPersonInput
    preInvoiceDetails?: PreInvoiceDetailUncheckedCreateNestedManyWithoutPersonInput
  }

  export type PeopleCreateOrConnectWithoutSalaryCurrencyTypeInput = {
    where: PeopleWhereUniqueInput
    create: XOR<PeopleCreateWithoutSalaryCurrencyTypeInput, PeopleUncheckedCreateWithoutSalaryCurrencyTypeInput>
  }

  export type PeopleCreateManySalaryCurrencyTypeInputEnvelope = {
    data: PeopleCreateManySalaryCurrencyTypeInput | PeopleCreateManySalaryCurrencyTypeInput[]
    skipDuplicates?: boolean
  }

  export type PeopleCreateWithoutFeeCurrencyTypeInput = {
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    remote?: string | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    bank?: string | null
    accountNumber?: string | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leaveDays?: LeaveDaysCreateNestedManyWithoutPersonInput
    afpInstitution?: AFPInstitutionCreateNestedOneWithoutPeopleInput
    client?: ClientCreateNestedOneWithoutPeopleInput
    salaryCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleSalaryInput
    laptopCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleLaptopInput
    healthInstitution?: HealthInstitutionCreateNestedOneWithoutPeopleInput
    jobTitle?: JobTitleCreateNestedOneWithoutPeopleInput
    role?: RoleCreateNestedOneWithoutPeopleInput
    seniority?: SeniorityCreateNestedOneWithoutPeopleInput
    technicalStacks?: TechnicalsStacksCreateNestedOneWithoutPeopleInput
    preInvoiceDetails?: PreInvoiceDetailCreateNestedManyWithoutPersonInput
  }

  export type PeopleUncheckedCreateWithoutFeeCurrencyTypeInput = {
    id?: number
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    roleId?: number | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    clientId?: number | null
    remote?: string | null
    jobTitleId?: number | null
    seniorityId?: number | null
    technicalStacksId?: number | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    afpInstitutionId?: number | null
    healthInstitutionId?: number | null
    bank?: string | null
    accountNumber?: string | null
    salaryCurrencyTypeId?: number | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopCurrencyTypeId?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leaveDays?: LeaveDaysUncheckedCreateNestedManyWithoutPersonInput
    preInvoiceDetails?: PreInvoiceDetailUncheckedCreateNestedManyWithoutPersonInput
  }

  export type PeopleCreateOrConnectWithoutFeeCurrencyTypeInput = {
    where: PeopleWhereUniqueInput
    create: XOR<PeopleCreateWithoutFeeCurrencyTypeInput, PeopleUncheckedCreateWithoutFeeCurrencyTypeInput>
  }

  export type PeopleCreateManyFeeCurrencyTypeInputEnvelope = {
    data: PeopleCreateManyFeeCurrencyTypeInput | PeopleCreateManyFeeCurrencyTypeInput[]
    skipDuplicates?: boolean
  }

  export type PeopleCreateWithoutLaptopCurrencyTypeInput = {
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    remote?: string | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    bank?: string | null
    accountNumber?: string | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leaveDays?: LeaveDaysCreateNestedManyWithoutPersonInput
    afpInstitution?: AFPInstitutionCreateNestedOneWithoutPeopleInput
    client?: ClientCreateNestedOneWithoutPeopleInput
    salaryCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleSalaryInput
    feeCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleFeeInput
    healthInstitution?: HealthInstitutionCreateNestedOneWithoutPeopleInput
    jobTitle?: JobTitleCreateNestedOneWithoutPeopleInput
    role?: RoleCreateNestedOneWithoutPeopleInput
    seniority?: SeniorityCreateNestedOneWithoutPeopleInput
    technicalStacks?: TechnicalsStacksCreateNestedOneWithoutPeopleInput
    preInvoiceDetails?: PreInvoiceDetailCreateNestedManyWithoutPersonInput
  }

  export type PeopleUncheckedCreateWithoutLaptopCurrencyTypeInput = {
    id?: number
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    roleId?: number | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    clientId?: number | null
    remote?: string | null
    jobTitleId?: number | null
    seniorityId?: number | null
    technicalStacksId?: number | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    afpInstitutionId?: number | null
    healthInstitutionId?: number | null
    bank?: string | null
    accountNumber?: string | null
    salaryCurrencyTypeId?: number | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: number | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leaveDays?: LeaveDaysUncheckedCreateNestedManyWithoutPersonInput
    preInvoiceDetails?: PreInvoiceDetailUncheckedCreateNestedManyWithoutPersonInput
  }

  export type PeopleCreateOrConnectWithoutLaptopCurrencyTypeInput = {
    where: PeopleWhereUniqueInput
    create: XOR<PeopleCreateWithoutLaptopCurrencyTypeInput, PeopleUncheckedCreateWithoutLaptopCurrencyTypeInput>
  }

  export type PeopleCreateManyLaptopCurrencyTypeInputEnvelope = {
    data: PeopleCreateManyLaptopCurrencyTypeInput | PeopleCreateManyLaptopCurrencyTypeInput[]
    skipDuplicates?: boolean
  }

  export type PreInvoiceDetailCreateWithoutCurrencyTypeInput = {
    status: string
    value: Decimal | DecimalJsLike | number | string
    billableDays: Decimal | DecimalJsLike | number | string
    leaveDays: Decimal | DecimalJsLike | number | string
    totalConsumeDays: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    person?: PeopleCreateNestedOneWithoutPreInvoiceDetailsInput
    preInvoice?: PreInvoiceCreateNestedOneWithoutDetailsInput
  }

  export type PreInvoiceDetailUncheckedCreateWithoutCurrencyTypeInput = {
    id?: number
    preInvoiceId?: number | null
    personId?: number | null
    status: string
    value: Decimal | DecimalJsLike | number | string
    billableDays: Decimal | DecimalJsLike | number | string
    leaveDays: Decimal | DecimalJsLike | number | string
    totalConsumeDays: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PreInvoiceDetailCreateOrConnectWithoutCurrencyTypeInput = {
    where: PreInvoiceDetailWhereUniqueInput
    create: XOR<PreInvoiceDetailCreateWithoutCurrencyTypeInput, PreInvoiceDetailUncheckedCreateWithoutCurrencyTypeInput>
  }

  export type PreInvoiceDetailCreateManyCurrencyTypeInputEnvelope = {
    data: PreInvoiceDetailCreateManyCurrencyTypeInput | PreInvoiceDetailCreateManyCurrencyTypeInput[]
    skipDuplicates?: boolean
  }

  export type PriceCreateWithoutCurrencyTypeInput = {
    name: string
    description?: string | null
    value: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PriceUncheckedCreateWithoutCurrencyTypeInput = {
    id?: number
    name: string
    description?: string | null
    value: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PriceCreateOrConnectWithoutCurrencyTypeInput = {
    where: PriceWhereUniqueInput
    create: XOR<PriceCreateWithoutCurrencyTypeInput, PriceUncheckedCreateWithoutCurrencyTypeInput>
  }

  export type PriceCreateManyCurrencyTypeInputEnvelope = {
    data: PriceCreateManyCurrencyTypeInput | PriceCreateManyCurrencyTypeInput[]
    skipDuplicates?: boolean
  }

  export type ClientUpsertWithWhereUniqueWithoutCurrencyTypeInput = {
    where: ClientWhereUniqueInput
    update: XOR<ClientUpdateWithoutCurrencyTypeInput, ClientUncheckedUpdateWithoutCurrencyTypeInput>
    create: XOR<ClientCreateWithoutCurrencyTypeInput, ClientUncheckedCreateWithoutCurrencyTypeInput>
  }

  export type ClientUpdateWithWhereUniqueWithoutCurrencyTypeInput = {
    where: ClientWhereUniqueInput
    data: XOR<ClientUpdateWithoutCurrencyTypeInput, ClientUncheckedUpdateWithoutCurrencyTypeInput>
  }

  export type ClientUpdateManyWithWhereWithoutCurrencyTypeInput = {
    where: ClientScalarWhereInput
    data: XOR<ClientUpdateManyMutationInput, ClientUncheckedUpdateManyWithoutCurrencyTypeInput>
  }

  export type ClientScalarWhereInput = {
    AND?: ClientScalarWhereInput | ClientScalarWhereInput[]
    OR?: ClientScalarWhereInput[]
    NOT?: ClientScalarWhereInput | ClientScalarWhereInput[]
    id?: IntFilter<"Client"> | number
    name?: StringFilter<"Client"> | string
    currencyTypeId?: IntNullableFilter<"Client"> | number | null
    billableDay?: DecimalNullableFilter<"Client"> | Decimal | DecimalJsLike | number | string | null
    rut?: StringNullableFilter<"Client"> | string | null
    address?: StringNullableFilter<"Client"> | string | null
    companyName?: StringNullableFilter<"Client"> | string | null
    marginPercentage?: DecimalNullableFilter<"Client"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeNullableFilter<"Client"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Client"> | Date | string | null
  }

  export type PeopleUpsertWithWhereUniqueWithoutSalaryCurrencyTypeInput = {
    where: PeopleWhereUniqueInput
    update: XOR<PeopleUpdateWithoutSalaryCurrencyTypeInput, PeopleUncheckedUpdateWithoutSalaryCurrencyTypeInput>
    create: XOR<PeopleCreateWithoutSalaryCurrencyTypeInput, PeopleUncheckedCreateWithoutSalaryCurrencyTypeInput>
  }

  export type PeopleUpdateWithWhereUniqueWithoutSalaryCurrencyTypeInput = {
    where: PeopleWhereUniqueInput
    data: XOR<PeopleUpdateWithoutSalaryCurrencyTypeInput, PeopleUncheckedUpdateWithoutSalaryCurrencyTypeInput>
  }

  export type PeopleUpdateManyWithWhereWithoutSalaryCurrencyTypeInput = {
    where: PeopleScalarWhereInput
    data: XOR<PeopleUpdateManyMutationInput, PeopleUncheckedUpdateManyWithoutSalaryCurrencyTypeInput>
  }

  export type PeopleUpsertWithWhereUniqueWithoutFeeCurrencyTypeInput = {
    where: PeopleWhereUniqueInput
    update: XOR<PeopleUpdateWithoutFeeCurrencyTypeInput, PeopleUncheckedUpdateWithoutFeeCurrencyTypeInput>
    create: XOR<PeopleCreateWithoutFeeCurrencyTypeInput, PeopleUncheckedCreateWithoutFeeCurrencyTypeInput>
  }

  export type PeopleUpdateWithWhereUniqueWithoutFeeCurrencyTypeInput = {
    where: PeopleWhereUniqueInput
    data: XOR<PeopleUpdateWithoutFeeCurrencyTypeInput, PeopleUncheckedUpdateWithoutFeeCurrencyTypeInput>
  }

  export type PeopleUpdateManyWithWhereWithoutFeeCurrencyTypeInput = {
    where: PeopleScalarWhereInput
    data: XOR<PeopleUpdateManyMutationInput, PeopleUncheckedUpdateManyWithoutFeeCurrencyTypeInput>
  }

  export type PeopleUpsertWithWhereUniqueWithoutLaptopCurrencyTypeInput = {
    where: PeopleWhereUniqueInput
    update: XOR<PeopleUpdateWithoutLaptopCurrencyTypeInput, PeopleUncheckedUpdateWithoutLaptopCurrencyTypeInput>
    create: XOR<PeopleCreateWithoutLaptopCurrencyTypeInput, PeopleUncheckedCreateWithoutLaptopCurrencyTypeInput>
  }

  export type PeopleUpdateWithWhereUniqueWithoutLaptopCurrencyTypeInput = {
    where: PeopleWhereUniqueInput
    data: XOR<PeopleUpdateWithoutLaptopCurrencyTypeInput, PeopleUncheckedUpdateWithoutLaptopCurrencyTypeInput>
  }

  export type PeopleUpdateManyWithWhereWithoutLaptopCurrencyTypeInput = {
    where: PeopleScalarWhereInput
    data: XOR<PeopleUpdateManyMutationInput, PeopleUncheckedUpdateManyWithoutLaptopCurrencyTypeInput>
  }

  export type PreInvoiceDetailUpsertWithWhereUniqueWithoutCurrencyTypeInput = {
    where: PreInvoiceDetailWhereUniqueInput
    update: XOR<PreInvoiceDetailUpdateWithoutCurrencyTypeInput, PreInvoiceDetailUncheckedUpdateWithoutCurrencyTypeInput>
    create: XOR<PreInvoiceDetailCreateWithoutCurrencyTypeInput, PreInvoiceDetailUncheckedCreateWithoutCurrencyTypeInput>
  }

  export type PreInvoiceDetailUpdateWithWhereUniqueWithoutCurrencyTypeInput = {
    where: PreInvoiceDetailWhereUniqueInput
    data: XOR<PreInvoiceDetailUpdateWithoutCurrencyTypeInput, PreInvoiceDetailUncheckedUpdateWithoutCurrencyTypeInput>
  }

  export type PreInvoiceDetailUpdateManyWithWhereWithoutCurrencyTypeInput = {
    where: PreInvoiceDetailScalarWhereInput
    data: XOR<PreInvoiceDetailUpdateManyMutationInput, PreInvoiceDetailUncheckedUpdateManyWithoutCurrencyTypeInput>
  }

  export type PreInvoiceDetailScalarWhereInput = {
    AND?: PreInvoiceDetailScalarWhereInput | PreInvoiceDetailScalarWhereInput[]
    OR?: PreInvoiceDetailScalarWhereInput[]
    NOT?: PreInvoiceDetailScalarWhereInput | PreInvoiceDetailScalarWhereInput[]
    id?: IntFilter<"PreInvoiceDetail"> | number
    preInvoiceId?: IntNullableFilter<"PreInvoiceDetail"> | number | null
    personId?: IntNullableFilter<"PreInvoiceDetail"> | number | null
    status?: StringFilter<"PreInvoiceDetail"> | string
    value?: DecimalFilter<"PreInvoiceDetail"> | Decimal | DecimalJsLike | number | string
    currency_type?: IntNullableFilter<"PreInvoiceDetail"> | number | null
    billableDays?: DecimalFilter<"PreInvoiceDetail"> | Decimal | DecimalJsLike | number | string
    leaveDays?: DecimalFilter<"PreInvoiceDetail"> | Decimal | DecimalJsLike | number | string
    totalConsumeDays?: DecimalFilter<"PreInvoiceDetail"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeNullableFilter<"PreInvoiceDetail"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"PreInvoiceDetail"> | Date | string | null
  }

  export type PriceUpsertWithWhereUniqueWithoutCurrencyTypeInput = {
    where: PriceWhereUniqueInput
    update: XOR<PriceUpdateWithoutCurrencyTypeInput, PriceUncheckedUpdateWithoutCurrencyTypeInput>
    create: XOR<PriceCreateWithoutCurrencyTypeInput, PriceUncheckedCreateWithoutCurrencyTypeInput>
  }

  export type PriceUpdateWithWhereUniqueWithoutCurrencyTypeInput = {
    where: PriceWhereUniqueInput
    data: XOR<PriceUpdateWithoutCurrencyTypeInput, PriceUncheckedUpdateWithoutCurrencyTypeInput>
  }

  export type PriceUpdateManyWithWhereWithoutCurrencyTypeInput = {
    where: PriceScalarWhereInput
    data: XOR<PriceUpdateManyMutationInput, PriceUncheckedUpdateManyWithoutCurrencyTypeInput>
  }

  export type PriceScalarWhereInput = {
    AND?: PriceScalarWhereInput | PriceScalarWhereInput[]
    OR?: PriceScalarWhereInput[]
    NOT?: PriceScalarWhereInput | PriceScalarWhereInput[]
    id?: IntFilter<"Price"> | number
    name?: StringFilter<"Price"> | string
    description?: StringNullableFilter<"Price"> | string | null
    value?: DecimalFilter<"Price"> | Decimal | DecimalJsLike | number | string
    currency_type?: IntNullableFilter<"Price"> | number | null
    createdAt?: DateTimeNullableFilter<"Price"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Price"> | Date | string | null
  }

  export type CurrencyTypeCreateWithoutClientsInput = {
    name: string
    symbol: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    peopleSalary?: PeopleCreateNestedManyWithoutSalaryCurrencyTypeInput
    peopleFee?: PeopleCreateNestedManyWithoutFeeCurrencyTypeInput
    peopleLaptop?: PeopleCreateNestedManyWithoutLaptopCurrencyTypeInput
    PreInvoiceDetail?: PreInvoiceDetailCreateNestedManyWithoutCurrencyTypeInput
    Price?: PriceCreateNestedManyWithoutCurrencyTypeInput
  }

  export type CurrencyTypeUncheckedCreateWithoutClientsInput = {
    id?: number
    name: string
    symbol: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    peopleSalary?: PeopleUncheckedCreateNestedManyWithoutSalaryCurrencyTypeInput
    peopleFee?: PeopleUncheckedCreateNestedManyWithoutFeeCurrencyTypeInput
    peopleLaptop?: PeopleUncheckedCreateNestedManyWithoutLaptopCurrencyTypeInput
    PreInvoiceDetail?: PreInvoiceDetailUncheckedCreateNestedManyWithoutCurrencyTypeInput
    Price?: PriceUncheckedCreateNestedManyWithoutCurrencyTypeInput
  }

  export type CurrencyTypeCreateOrConnectWithoutClientsInput = {
    where: CurrencyTypeWhereUniqueInput
    create: XOR<CurrencyTypeCreateWithoutClientsInput, CurrencyTypeUncheckedCreateWithoutClientsInput>
  }

  export type ContactCreateWithoutClientInput = {
    name: string
    lastName?: string | null
    email?: string | null
    phone?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    technicalStacks?: TechnicalsStacksCreateNestedOneWithoutContactsInput
    preInvoices?: PreInvoiceCreateNestedManyWithoutContactInput
  }

  export type ContactUncheckedCreateWithoutClientInput = {
    id?: number
    name: string
    lastName?: string | null
    email?: string | null
    phone?: string | null
    technicalStacksId?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    preInvoices?: PreInvoiceUncheckedCreateNestedManyWithoutContactInput
  }

  export type ContactCreateOrConnectWithoutClientInput = {
    where: ContactWhereUniqueInput
    create: XOR<ContactCreateWithoutClientInput, ContactUncheckedCreateWithoutClientInput>
  }

  export type ContactCreateManyClientInputEnvelope = {
    data: ContactCreateManyClientInput | ContactCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type PeopleCreateWithoutClientInput = {
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    remote?: string | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    bank?: string | null
    accountNumber?: string | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leaveDays?: LeaveDaysCreateNestedManyWithoutPersonInput
    afpInstitution?: AFPInstitutionCreateNestedOneWithoutPeopleInput
    salaryCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleSalaryInput
    feeCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleFeeInput
    laptopCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleLaptopInput
    healthInstitution?: HealthInstitutionCreateNestedOneWithoutPeopleInput
    jobTitle?: JobTitleCreateNestedOneWithoutPeopleInput
    role?: RoleCreateNestedOneWithoutPeopleInput
    seniority?: SeniorityCreateNestedOneWithoutPeopleInput
    technicalStacks?: TechnicalsStacksCreateNestedOneWithoutPeopleInput
    preInvoiceDetails?: PreInvoiceDetailCreateNestedManyWithoutPersonInput
  }

  export type PeopleUncheckedCreateWithoutClientInput = {
    id?: number
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    roleId?: number | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    remote?: string | null
    jobTitleId?: number | null
    seniorityId?: number | null
    technicalStacksId?: number | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    afpInstitutionId?: number | null
    healthInstitutionId?: number | null
    bank?: string | null
    accountNumber?: string | null
    salaryCurrencyTypeId?: number | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: number | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopCurrencyTypeId?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leaveDays?: LeaveDaysUncheckedCreateNestedManyWithoutPersonInput
    preInvoiceDetails?: PreInvoiceDetailUncheckedCreateNestedManyWithoutPersonInput
  }

  export type PeopleCreateOrConnectWithoutClientInput = {
    where: PeopleWhereUniqueInput
    create: XOR<PeopleCreateWithoutClientInput, PeopleUncheckedCreateWithoutClientInput>
  }

  export type PeopleCreateManyClientInputEnvelope = {
    data: PeopleCreateManyClientInput | PeopleCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type PreInvoiceCreateWithoutClientInput = {
    total?: Decimal | DecimalJsLike | number | string | null
    status: string
    ocNumber?: string | null
    hesNumber?: string | null
    invoiceNumber?: string | null
    month: number
    year: number
    value: Decimal | DecimalJsLike | number | string
    rejectNote?: string | null
    ocAmount?: Decimal | DecimalJsLike | number | string | null
    edpNumber?: string | null
    completedBy?: string | null
    completedAt?: Date | string | null
    ufValueUsed?: Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contact?: ContactCreateNestedOneWithoutPreInvoicesInput
    details?: PreInvoiceDetailCreateNestedManyWithoutPreInvoiceInput
  }

  export type PreInvoiceUncheckedCreateWithoutClientInput = {
    id?: number
    contactId?: number | null
    total?: Decimal | DecimalJsLike | number | string | null
    status: string
    ocNumber?: string | null
    hesNumber?: string | null
    invoiceNumber?: string | null
    month: number
    year: number
    value: Decimal | DecimalJsLike | number | string
    rejectNote?: string | null
    ocAmount?: Decimal | DecimalJsLike | number | string | null
    edpNumber?: string | null
    completedBy?: string | null
    completedAt?: Date | string | null
    ufValueUsed?: Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    details?: PreInvoiceDetailUncheckedCreateNestedManyWithoutPreInvoiceInput
  }

  export type PreInvoiceCreateOrConnectWithoutClientInput = {
    where: PreInvoiceWhereUniqueInput
    create: XOR<PreInvoiceCreateWithoutClientInput, PreInvoiceUncheckedCreateWithoutClientInput>
  }

  export type PreInvoiceCreateManyClientInputEnvelope = {
    data: PreInvoiceCreateManyClientInput | PreInvoiceCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type ProjectCreateWithoutClientInput = {
    name: string
    description?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type ProjectUncheckedCreateWithoutClientInput = {
    id?: number
    name: string
    description?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type ProjectCreateOrConnectWithoutClientInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutClientInput, ProjectUncheckedCreateWithoutClientInput>
  }

  export type ProjectCreateManyClientInputEnvelope = {
    data: ProjectCreateManyClientInput | ProjectCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type CurrencyTypeUpsertWithoutClientsInput = {
    update: XOR<CurrencyTypeUpdateWithoutClientsInput, CurrencyTypeUncheckedUpdateWithoutClientsInput>
    create: XOR<CurrencyTypeCreateWithoutClientsInput, CurrencyTypeUncheckedCreateWithoutClientsInput>
    where?: CurrencyTypeWhereInput
  }

  export type CurrencyTypeUpdateToOneWithWhereWithoutClientsInput = {
    where?: CurrencyTypeWhereInput
    data: XOR<CurrencyTypeUpdateWithoutClientsInput, CurrencyTypeUncheckedUpdateWithoutClientsInput>
  }

  export type CurrencyTypeUpdateWithoutClientsInput = {
    name?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    peopleSalary?: PeopleUpdateManyWithoutSalaryCurrencyTypeNestedInput
    peopleFee?: PeopleUpdateManyWithoutFeeCurrencyTypeNestedInput
    peopleLaptop?: PeopleUpdateManyWithoutLaptopCurrencyTypeNestedInput
    PreInvoiceDetail?: PreInvoiceDetailUpdateManyWithoutCurrencyTypeNestedInput
    Price?: PriceUpdateManyWithoutCurrencyTypeNestedInput
  }

  export type CurrencyTypeUncheckedUpdateWithoutClientsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    peopleSalary?: PeopleUncheckedUpdateManyWithoutSalaryCurrencyTypeNestedInput
    peopleFee?: PeopleUncheckedUpdateManyWithoutFeeCurrencyTypeNestedInput
    peopleLaptop?: PeopleUncheckedUpdateManyWithoutLaptopCurrencyTypeNestedInput
    PreInvoiceDetail?: PreInvoiceDetailUncheckedUpdateManyWithoutCurrencyTypeNestedInput
    Price?: PriceUncheckedUpdateManyWithoutCurrencyTypeNestedInput
  }

  export type ContactUpsertWithWhereUniqueWithoutClientInput = {
    where: ContactWhereUniqueInput
    update: XOR<ContactUpdateWithoutClientInput, ContactUncheckedUpdateWithoutClientInput>
    create: XOR<ContactCreateWithoutClientInput, ContactUncheckedCreateWithoutClientInput>
  }

  export type ContactUpdateWithWhereUniqueWithoutClientInput = {
    where: ContactWhereUniqueInput
    data: XOR<ContactUpdateWithoutClientInput, ContactUncheckedUpdateWithoutClientInput>
  }

  export type ContactUpdateManyWithWhereWithoutClientInput = {
    where: ContactScalarWhereInput
    data: XOR<ContactUpdateManyMutationInput, ContactUncheckedUpdateManyWithoutClientInput>
  }

  export type ContactScalarWhereInput = {
    AND?: ContactScalarWhereInput | ContactScalarWhereInput[]
    OR?: ContactScalarWhereInput[]
    NOT?: ContactScalarWhereInput | ContactScalarWhereInput[]
    id?: IntFilter<"Contact"> | number
    name?: StringFilter<"Contact"> | string
    lastName?: StringNullableFilter<"Contact"> | string | null
    email?: StringNullableFilter<"Contact"> | string | null
    phone?: StringNullableFilter<"Contact"> | string | null
    clientId?: IntNullableFilter<"Contact"> | number | null
    technicalStacksId?: IntNullableFilter<"Contact"> | number | null
    createdAt?: DateTimeNullableFilter<"Contact"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Contact"> | Date | string | null
  }

  export type PeopleUpsertWithWhereUniqueWithoutClientInput = {
    where: PeopleWhereUniqueInput
    update: XOR<PeopleUpdateWithoutClientInput, PeopleUncheckedUpdateWithoutClientInput>
    create: XOR<PeopleCreateWithoutClientInput, PeopleUncheckedCreateWithoutClientInput>
  }

  export type PeopleUpdateWithWhereUniqueWithoutClientInput = {
    where: PeopleWhereUniqueInput
    data: XOR<PeopleUpdateWithoutClientInput, PeopleUncheckedUpdateWithoutClientInput>
  }

  export type PeopleUpdateManyWithWhereWithoutClientInput = {
    where: PeopleScalarWhereInput
    data: XOR<PeopleUpdateManyMutationInput, PeopleUncheckedUpdateManyWithoutClientInput>
  }

  export type PreInvoiceUpsertWithWhereUniqueWithoutClientInput = {
    where: PreInvoiceWhereUniqueInput
    update: XOR<PreInvoiceUpdateWithoutClientInput, PreInvoiceUncheckedUpdateWithoutClientInput>
    create: XOR<PreInvoiceCreateWithoutClientInput, PreInvoiceUncheckedCreateWithoutClientInput>
  }

  export type PreInvoiceUpdateWithWhereUniqueWithoutClientInput = {
    where: PreInvoiceWhereUniqueInput
    data: XOR<PreInvoiceUpdateWithoutClientInput, PreInvoiceUncheckedUpdateWithoutClientInput>
  }

  export type PreInvoiceUpdateManyWithWhereWithoutClientInput = {
    where: PreInvoiceScalarWhereInput
    data: XOR<PreInvoiceUpdateManyMutationInput, PreInvoiceUncheckedUpdateManyWithoutClientInput>
  }

  export type PreInvoiceScalarWhereInput = {
    AND?: PreInvoiceScalarWhereInput | PreInvoiceScalarWhereInput[]
    OR?: PreInvoiceScalarWhereInput[]
    NOT?: PreInvoiceScalarWhereInput | PreInvoiceScalarWhereInput[]
    id?: IntFilter<"PreInvoice"> | number
    clientId?: IntNullableFilter<"PreInvoice"> | number | null
    contactId?: IntNullableFilter<"PreInvoice"> | number | null
    total?: DecimalNullableFilter<"PreInvoice"> | Decimal | DecimalJsLike | number | string | null
    status?: StringFilter<"PreInvoice"> | string
    ocNumber?: StringNullableFilter<"PreInvoice"> | string | null
    hesNumber?: StringNullableFilter<"PreInvoice"> | string | null
    invoiceNumber?: StringNullableFilter<"PreInvoice"> | string | null
    month?: IntFilter<"PreInvoice"> | number
    year?: IntFilter<"PreInvoice"> | number
    value?: DecimalFilter<"PreInvoice"> | Decimal | DecimalJsLike | number | string
    rejectNote?: StringNullableFilter<"PreInvoice"> | string | null
    ocAmount?: DecimalNullableFilter<"PreInvoice"> | Decimal | DecimalJsLike | number | string | null
    edpNumber?: StringNullableFilter<"PreInvoice"> | string | null
    completedBy?: StringNullableFilter<"PreInvoice"> | string | null
    completedAt?: DateTimeNullableFilter<"PreInvoice"> | Date | string | null
    ufValueUsed?: DecimalNullableFilter<"PreInvoice"> | Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: DateTimeNullableFilter<"PreInvoice"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"PreInvoice"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"PreInvoice"> | Date | string | null
  }

  export type ProjectUpsertWithWhereUniqueWithoutClientInput = {
    where: ProjectWhereUniqueInput
    update: XOR<ProjectUpdateWithoutClientInput, ProjectUncheckedUpdateWithoutClientInput>
    create: XOR<ProjectCreateWithoutClientInput, ProjectUncheckedCreateWithoutClientInput>
  }

  export type ProjectUpdateWithWhereUniqueWithoutClientInput = {
    where: ProjectWhereUniqueInput
    data: XOR<ProjectUpdateWithoutClientInput, ProjectUncheckedUpdateWithoutClientInput>
  }

  export type ProjectUpdateManyWithWhereWithoutClientInput = {
    where: ProjectScalarWhereInput
    data: XOR<ProjectUpdateManyMutationInput, ProjectUncheckedUpdateManyWithoutClientInput>
  }

  export type ProjectScalarWhereInput = {
    AND?: ProjectScalarWhereInput | ProjectScalarWhereInput[]
    OR?: ProjectScalarWhereInput[]
    NOT?: ProjectScalarWhereInput | ProjectScalarWhereInput[]
    id?: IntFilter<"Project"> | number
    name?: StringFilter<"Project"> | string
    description?: StringNullableFilter<"Project"> | string | null
    clientId?: IntNullableFilter<"Project"> | number | null
    startDate?: DateTimeNullableFilter<"Project"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Project"> | Date | string | null
    status?: StringNullableFilter<"Project"> | string | null
    createdAt?: DateTimeNullableFilter<"Project"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Project"> | Date | string | null
  }

  export type ClientCreateWithoutContactsInput = {
    name: string
    billableDay?: Decimal | DecimalJsLike | number | string | null
    rut?: string | null
    address?: string | null
    companyName?: string | null
    marginPercentage?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    currencyType?: CurrencyTypeCreateNestedOneWithoutClientsInput
    people?: PeopleCreateNestedManyWithoutClientInput
    preInvoices?: PreInvoiceCreateNestedManyWithoutClientInput
    projects?: ProjectCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutContactsInput = {
    id?: number
    name: string
    currencyTypeId?: number | null
    billableDay?: Decimal | DecimalJsLike | number | string | null
    rut?: string | null
    address?: string | null
    companyName?: string | null
    marginPercentage?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    people?: PeopleUncheckedCreateNestedManyWithoutClientInput
    preInvoices?: PreInvoiceUncheckedCreateNestedManyWithoutClientInput
    projects?: ProjectUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutContactsInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutContactsInput, ClientUncheckedCreateWithoutContactsInput>
  }

  export type TechnicalsStacksCreateWithoutContactsInput = {
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    people?: PeopleCreateNestedManyWithoutTechnicalStacksInput
  }

  export type TechnicalsStacksUncheckedCreateWithoutContactsInput = {
    id?: number
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    people?: PeopleUncheckedCreateNestedManyWithoutTechnicalStacksInput
  }

  export type TechnicalsStacksCreateOrConnectWithoutContactsInput = {
    where: TechnicalsStacksWhereUniqueInput
    create: XOR<TechnicalsStacksCreateWithoutContactsInput, TechnicalsStacksUncheckedCreateWithoutContactsInput>
  }

  export type PreInvoiceCreateWithoutContactInput = {
    total?: Decimal | DecimalJsLike | number | string | null
    status: string
    ocNumber?: string | null
    hesNumber?: string | null
    invoiceNumber?: string | null
    month: number
    year: number
    value: Decimal | DecimalJsLike | number | string
    rejectNote?: string | null
    ocAmount?: Decimal | DecimalJsLike | number | string | null
    edpNumber?: string | null
    completedBy?: string | null
    completedAt?: Date | string | null
    ufValueUsed?: Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    client?: ClientCreateNestedOneWithoutPreInvoicesInput
    details?: PreInvoiceDetailCreateNestedManyWithoutPreInvoiceInput
  }

  export type PreInvoiceUncheckedCreateWithoutContactInput = {
    id?: number
    clientId?: number | null
    total?: Decimal | DecimalJsLike | number | string | null
    status: string
    ocNumber?: string | null
    hesNumber?: string | null
    invoiceNumber?: string | null
    month: number
    year: number
    value: Decimal | DecimalJsLike | number | string
    rejectNote?: string | null
    ocAmount?: Decimal | DecimalJsLike | number | string | null
    edpNumber?: string | null
    completedBy?: string | null
    completedAt?: Date | string | null
    ufValueUsed?: Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    details?: PreInvoiceDetailUncheckedCreateNestedManyWithoutPreInvoiceInput
  }

  export type PreInvoiceCreateOrConnectWithoutContactInput = {
    where: PreInvoiceWhereUniqueInput
    create: XOR<PreInvoiceCreateWithoutContactInput, PreInvoiceUncheckedCreateWithoutContactInput>
  }

  export type PreInvoiceCreateManyContactInputEnvelope = {
    data: PreInvoiceCreateManyContactInput | PreInvoiceCreateManyContactInput[]
    skipDuplicates?: boolean
  }

  export type ClientUpsertWithoutContactsInput = {
    update: XOR<ClientUpdateWithoutContactsInput, ClientUncheckedUpdateWithoutContactsInput>
    create: XOR<ClientCreateWithoutContactsInput, ClientUncheckedCreateWithoutContactsInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutContactsInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutContactsInput, ClientUncheckedUpdateWithoutContactsInput>
  }

  export type ClientUpdateWithoutContactsInput = {
    name?: StringFieldUpdateOperationsInput | string
    billableDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rut?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    marginPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currencyType?: CurrencyTypeUpdateOneWithoutClientsNestedInput
    people?: PeopleUpdateManyWithoutClientNestedInput
    preInvoices?: PreInvoiceUpdateManyWithoutClientNestedInput
    projects?: ProjectUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutContactsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    currencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    billableDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rut?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    marginPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    people?: PeopleUncheckedUpdateManyWithoutClientNestedInput
    preInvoices?: PreInvoiceUncheckedUpdateManyWithoutClientNestedInput
    projects?: ProjectUncheckedUpdateManyWithoutClientNestedInput
  }

  export type TechnicalsStacksUpsertWithoutContactsInput = {
    update: XOR<TechnicalsStacksUpdateWithoutContactsInput, TechnicalsStacksUncheckedUpdateWithoutContactsInput>
    create: XOR<TechnicalsStacksCreateWithoutContactsInput, TechnicalsStacksUncheckedCreateWithoutContactsInput>
    where?: TechnicalsStacksWhereInput
  }

  export type TechnicalsStacksUpdateToOneWithWhereWithoutContactsInput = {
    where?: TechnicalsStacksWhereInput
    data: XOR<TechnicalsStacksUpdateWithoutContactsInput, TechnicalsStacksUncheckedUpdateWithoutContactsInput>
  }

  export type TechnicalsStacksUpdateWithoutContactsInput = {
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    people?: PeopleUpdateManyWithoutTechnicalStacksNestedInput
  }

  export type TechnicalsStacksUncheckedUpdateWithoutContactsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    people?: PeopleUncheckedUpdateManyWithoutTechnicalStacksNestedInput
  }

  export type PreInvoiceUpsertWithWhereUniqueWithoutContactInput = {
    where: PreInvoiceWhereUniqueInput
    update: XOR<PreInvoiceUpdateWithoutContactInput, PreInvoiceUncheckedUpdateWithoutContactInput>
    create: XOR<PreInvoiceCreateWithoutContactInput, PreInvoiceUncheckedCreateWithoutContactInput>
  }

  export type PreInvoiceUpdateWithWhereUniqueWithoutContactInput = {
    where: PreInvoiceWhereUniqueInput
    data: XOR<PreInvoiceUpdateWithoutContactInput, PreInvoiceUncheckedUpdateWithoutContactInput>
  }

  export type PreInvoiceUpdateManyWithWhereWithoutContactInput = {
    where: PreInvoiceScalarWhereInput
    data: XOR<PreInvoiceUpdateManyMutationInput, PreInvoiceUncheckedUpdateManyWithoutContactInput>
  }

  export type PeopleCreateWithoutHealthInstitutionInput = {
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    remote?: string | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    bank?: string | null
    accountNumber?: string | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leaveDays?: LeaveDaysCreateNestedManyWithoutPersonInput
    afpInstitution?: AFPInstitutionCreateNestedOneWithoutPeopleInput
    client?: ClientCreateNestedOneWithoutPeopleInput
    salaryCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleSalaryInput
    feeCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleFeeInput
    laptopCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleLaptopInput
    jobTitle?: JobTitleCreateNestedOneWithoutPeopleInput
    role?: RoleCreateNestedOneWithoutPeopleInput
    seniority?: SeniorityCreateNestedOneWithoutPeopleInput
    technicalStacks?: TechnicalsStacksCreateNestedOneWithoutPeopleInput
    preInvoiceDetails?: PreInvoiceDetailCreateNestedManyWithoutPersonInput
  }

  export type PeopleUncheckedCreateWithoutHealthInstitutionInput = {
    id?: number
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    roleId?: number | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    clientId?: number | null
    remote?: string | null
    jobTitleId?: number | null
    seniorityId?: number | null
    technicalStacksId?: number | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    afpInstitutionId?: number | null
    bank?: string | null
    accountNumber?: string | null
    salaryCurrencyTypeId?: number | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: number | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopCurrencyTypeId?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leaveDays?: LeaveDaysUncheckedCreateNestedManyWithoutPersonInput
    preInvoiceDetails?: PreInvoiceDetailUncheckedCreateNestedManyWithoutPersonInput
  }

  export type PeopleCreateOrConnectWithoutHealthInstitutionInput = {
    where: PeopleWhereUniqueInput
    create: XOR<PeopleCreateWithoutHealthInstitutionInput, PeopleUncheckedCreateWithoutHealthInstitutionInput>
  }

  export type PeopleCreateManyHealthInstitutionInputEnvelope = {
    data: PeopleCreateManyHealthInstitutionInput | PeopleCreateManyHealthInstitutionInput[]
    skipDuplicates?: boolean
  }

  export type PeopleUpsertWithWhereUniqueWithoutHealthInstitutionInput = {
    where: PeopleWhereUniqueInput
    update: XOR<PeopleUpdateWithoutHealthInstitutionInput, PeopleUncheckedUpdateWithoutHealthInstitutionInput>
    create: XOR<PeopleCreateWithoutHealthInstitutionInput, PeopleUncheckedCreateWithoutHealthInstitutionInput>
  }

  export type PeopleUpdateWithWhereUniqueWithoutHealthInstitutionInput = {
    where: PeopleWhereUniqueInput
    data: XOR<PeopleUpdateWithoutHealthInstitutionInput, PeopleUncheckedUpdateWithoutHealthInstitutionInput>
  }

  export type PeopleUpdateManyWithWhereWithoutHealthInstitutionInput = {
    where: PeopleScalarWhereInput
    data: XOR<PeopleUpdateManyMutationInput, PeopleUncheckedUpdateManyWithoutHealthInstitutionInput>
  }

  export type PeopleCreateWithoutJobTitleInput = {
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    remote?: string | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    bank?: string | null
    accountNumber?: string | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leaveDays?: LeaveDaysCreateNestedManyWithoutPersonInput
    afpInstitution?: AFPInstitutionCreateNestedOneWithoutPeopleInput
    client?: ClientCreateNestedOneWithoutPeopleInput
    salaryCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleSalaryInput
    feeCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleFeeInput
    laptopCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleLaptopInput
    healthInstitution?: HealthInstitutionCreateNestedOneWithoutPeopleInput
    role?: RoleCreateNestedOneWithoutPeopleInput
    seniority?: SeniorityCreateNestedOneWithoutPeopleInput
    technicalStacks?: TechnicalsStacksCreateNestedOneWithoutPeopleInput
    preInvoiceDetails?: PreInvoiceDetailCreateNestedManyWithoutPersonInput
  }

  export type PeopleUncheckedCreateWithoutJobTitleInput = {
    id?: number
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    roleId?: number | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    clientId?: number | null
    remote?: string | null
    seniorityId?: number | null
    technicalStacksId?: number | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    afpInstitutionId?: number | null
    healthInstitutionId?: number | null
    bank?: string | null
    accountNumber?: string | null
    salaryCurrencyTypeId?: number | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: number | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopCurrencyTypeId?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leaveDays?: LeaveDaysUncheckedCreateNestedManyWithoutPersonInput
    preInvoiceDetails?: PreInvoiceDetailUncheckedCreateNestedManyWithoutPersonInput
  }

  export type PeopleCreateOrConnectWithoutJobTitleInput = {
    where: PeopleWhereUniqueInput
    create: XOR<PeopleCreateWithoutJobTitleInput, PeopleUncheckedCreateWithoutJobTitleInput>
  }

  export type PeopleCreateManyJobTitleInputEnvelope = {
    data: PeopleCreateManyJobTitleInput | PeopleCreateManyJobTitleInput[]
    skipDuplicates?: boolean
  }

  export type PeopleUpsertWithWhereUniqueWithoutJobTitleInput = {
    where: PeopleWhereUniqueInput
    update: XOR<PeopleUpdateWithoutJobTitleInput, PeopleUncheckedUpdateWithoutJobTitleInput>
    create: XOR<PeopleCreateWithoutJobTitleInput, PeopleUncheckedCreateWithoutJobTitleInput>
  }

  export type PeopleUpdateWithWhereUniqueWithoutJobTitleInput = {
    where: PeopleWhereUniqueInput
    data: XOR<PeopleUpdateWithoutJobTitleInput, PeopleUncheckedUpdateWithoutJobTitleInput>
  }

  export type PeopleUpdateManyWithWhereWithoutJobTitleInput = {
    where: PeopleScalarWhereInput
    data: XOR<PeopleUpdateManyMutationInput, PeopleUncheckedUpdateManyWithoutJobTitleInput>
  }

  export type PeopleCreateWithoutRoleInput = {
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    remote?: string | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    bank?: string | null
    accountNumber?: string | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leaveDays?: LeaveDaysCreateNestedManyWithoutPersonInput
    afpInstitution?: AFPInstitutionCreateNestedOneWithoutPeopleInput
    client?: ClientCreateNestedOneWithoutPeopleInput
    salaryCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleSalaryInput
    feeCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleFeeInput
    laptopCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleLaptopInput
    healthInstitution?: HealthInstitutionCreateNestedOneWithoutPeopleInput
    jobTitle?: JobTitleCreateNestedOneWithoutPeopleInput
    seniority?: SeniorityCreateNestedOneWithoutPeopleInput
    technicalStacks?: TechnicalsStacksCreateNestedOneWithoutPeopleInput
    preInvoiceDetails?: PreInvoiceDetailCreateNestedManyWithoutPersonInput
  }

  export type PeopleUncheckedCreateWithoutRoleInput = {
    id?: number
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    clientId?: number | null
    remote?: string | null
    jobTitleId?: number | null
    seniorityId?: number | null
    technicalStacksId?: number | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    afpInstitutionId?: number | null
    healthInstitutionId?: number | null
    bank?: string | null
    accountNumber?: string | null
    salaryCurrencyTypeId?: number | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: number | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopCurrencyTypeId?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leaveDays?: LeaveDaysUncheckedCreateNestedManyWithoutPersonInput
    preInvoiceDetails?: PreInvoiceDetailUncheckedCreateNestedManyWithoutPersonInput
  }

  export type PeopleCreateOrConnectWithoutRoleInput = {
    where: PeopleWhereUniqueInput
    create: XOR<PeopleCreateWithoutRoleInput, PeopleUncheckedCreateWithoutRoleInput>
  }

  export type PeopleCreateManyRoleInputEnvelope = {
    data: PeopleCreateManyRoleInput | PeopleCreateManyRoleInput[]
    skipDuplicates?: boolean
  }

  export type PeopleUpsertWithWhereUniqueWithoutRoleInput = {
    where: PeopleWhereUniqueInput
    update: XOR<PeopleUpdateWithoutRoleInput, PeopleUncheckedUpdateWithoutRoleInput>
    create: XOR<PeopleCreateWithoutRoleInput, PeopleUncheckedCreateWithoutRoleInput>
  }

  export type PeopleUpdateWithWhereUniqueWithoutRoleInput = {
    where: PeopleWhereUniqueInput
    data: XOR<PeopleUpdateWithoutRoleInput, PeopleUncheckedUpdateWithoutRoleInput>
  }

  export type PeopleUpdateManyWithWhereWithoutRoleInput = {
    where: PeopleScalarWhereInput
    data: XOR<PeopleUpdateManyMutationInput, PeopleUncheckedUpdateManyWithoutRoleInput>
  }

  export type PeopleCreateWithoutSeniorityInput = {
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    remote?: string | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    bank?: string | null
    accountNumber?: string | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leaveDays?: LeaveDaysCreateNestedManyWithoutPersonInput
    afpInstitution?: AFPInstitutionCreateNestedOneWithoutPeopleInput
    client?: ClientCreateNestedOneWithoutPeopleInput
    salaryCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleSalaryInput
    feeCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleFeeInput
    laptopCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleLaptopInput
    healthInstitution?: HealthInstitutionCreateNestedOneWithoutPeopleInput
    jobTitle?: JobTitleCreateNestedOneWithoutPeopleInput
    role?: RoleCreateNestedOneWithoutPeopleInput
    technicalStacks?: TechnicalsStacksCreateNestedOneWithoutPeopleInput
    preInvoiceDetails?: PreInvoiceDetailCreateNestedManyWithoutPersonInput
  }

  export type PeopleUncheckedCreateWithoutSeniorityInput = {
    id?: number
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    roleId?: number | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    clientId?: number | null
    remote?: string | null
    jobTitleId?: number | null
    technicalStacksId?: number | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    afpInstitutionId?: number | null
    healthInstitutionId?: number | null
    bank?: string | null
    accountNumber?: string | null
    salaryCurrencyTypeId?: number | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: number | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopCurrencyTypeId?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leaveDays?: LeaveDaysUncheckedCreateNestedManyWithoutPersonInput
    preInvoiceDetails?: PreInvoiceDetailUncheckedCreateNestedManyWithoutPersonInput
  }

  export type PeopleCreateOrConnectWithoutSeniorityInput = {
    where: PeopleWhereUniqueInput
    create: XOR<PeopleCreateWithoutSeniorityInput, PeopleUncheckedCreateWithoutSeniorityInput>
  }

  export type PeopleCreateManySeniorityInputEnvelope = {
    data: PeopleCreateManySeniorityInput | PeopleCreateManySeniorityInput[]
    skipDuplicates?: boolean
  }

  export type PeopleUpsertWithWhereUniqueWithoutSeniorityInput = {
    where: PeopleWhereUniqueInput
    update: XOR<PeopleUpdateWithoutSeniorityInput, PeopleUncheckedUpdateWithoutSeniorityInput>
    create: XOR<PeopleCreateWithoutSeniorityInput, PeopleUncheckedCreateWithoutSeniorityInput>
  }

  export type PeopleUpdateWithWhereUniqueWithoutSeniorityInput = {
    where: PeopleWhereUniqueInput
    data: XOR<PeopleUpdateWithoutSeniorityInput, PeopleUncheckedUpdateWithoutSeniorityInput>
  }

  export type PeopleUpdateManyWithWhereWithoutSeniorityInput = {
    where: PeopleScalarWhereInput
    data: XOR<PeopleUpdateManyMutationInput, PeopleUncheckedUpdateManyWithoutSeniorityInput>
  }

  export type PeopleCreateWithoutTechnicalStacksInput = {
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    remote?: string | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    bank?: string | null
    accountNumber?: string | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leaveDays?: LeaveDaysCreateNestedManyWithoutPersonInput
    afpInstitution?: AFPInstitutionCreateNestedOneWithoutPeopleInput
    client?: ClientCreateNestedOneWithoutPeopleInput
    salaryCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleSalaryInput
    feeCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleFeeInput
    laptopCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleLaptopInput
    healthInstitution?: HealthInstitutionCreateNestedOneWithoutPeopleInput
    jobTitle?: JobTitleCreateNestedOneWithoutPeopleInput
    role?: RoleCreateNestedOneWithoutPeopleInput
    seniority?: SeniorityCreateNestedOneWithoutPeopleInput
    preInvoiceDetails?: PreInvoiceDetailCreateNestedManyWithoutPersonInput
  }

  export type PeopleUncheckedCreateWithoutTechnicalStacksInput = {
    id?: number
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    roleId?: number | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    clientId?: number | null
    remote?: string | null
    jobTitleId?: number | null
    seniorityId?: number | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    afpInstitutionId?: number | null
    healthInstitutionId?: number | null
    bank?: string | null
    accountNumber?: string | null
    salaryCurrencyTypeId?: number | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: number | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopCurrencyTypeId?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leaveDays?: LeaveDaysUncheckedCreateNestedManyWithoutPersonInput
    preInvoiceDetails?: PreInvoiceDetailUncheckedCreateNestedManyWithoutPersonInput
  }

  export type PeopleCreateOrConnectWithoutTechnicalStacksInput = {
    where: PeopleWhereUniqueInput
    create: XOR<PeopleCreateWithoutTechnicalStacksInput, PeopleUncheckedCreateWithoutTechnicalStacksInput>
  }

  export type PeopleCreateManyTechnicalStacksInputEnvelope = {
    data: PeopleCreateManyTechnicalStacksInput | PeopleCreateManyTechnicalStacksInput[]
    skipDuplicates?: boolean
  }

  export type ContactCreateWithoutTechnicalStacksInput = {
    name: string
    lastName?: string | null
    email?: string | null
    phone?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    client?: ClientCreateNestedOneWithoutContactsInput
    preInvoices?: PreInvoiceCreateNestedManyWithoutContactInput
  }

  export type ContactUncheckedCreateWithoutTechnicalStacksInput = {
    id?: number
    name: string
    lastName?: string | null
    email?: string | null
    phone?: string | null
    clientId?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    preInvoices?: PreInvoiceUncheckedCreateNestedManyWithoutContactInput
  }

  export type ContactCreateOrConnectWithoutTechnicalStacksInput = {
    where: ContactWhereUniqueInput
    create: XOR<ContactCreateWithoutTechnicalStacksInput, ContactUncheckedCreateWithoutTechnicalStacksInput>
  }

  export type ContactCreateManyTechnicalStacksInputEnvelope = {
    data: ContactCreateManyTechnicalStacksInput | ContactCreateManyTechnicalStacksInput[]
    skipDuplicates?: boolean
  }

  export type PeopleUpsertWithWhereUniqueWithoutTechnicalStacksInput = {
    where: PeopleWhereUniqueInput
    update: XOR<PeopleUpdateWithoutTechnicalStacksInput, PeopleUncheckedUpdateWithoutTechnicalStacksInput>
    create: XOR<PeopleCreateWithoutTechnicalStacksInput, PeopleUncheckedCreateWithoutTechnicalStacksInput>
  }

  export type PeopleUpdateWithWhereUniqueWithoutTechnicalStacksInput = {
    where: PeopleWhereUniqueInput
    data: XOR<PeopleUpdateWithoutTechnicalStacksInput, PeopleUncheckedUpdateWithoutTechnicalStacksInput>
  }

  export type PeopleUpdateManyWithWhereWithoutTechnicalStacksInput = {
    where: PeopleScalarWhereInput
    data: XOR<PeopleUpdateManyMutationInput, PeopleUncheckedUpdateManyWithoutTechnicalStacksInput>
  }

  export type ContactUpsertWithWhereUniqueWithoutTechnicalStacksInput = {
    where: ContactWhereUniqueInput
    update: XOR<ContactUpdateWithoutTechnicalStacksInput, ContactUncheckedUpdateWithoutTechnicalStacksInput>
    create: XOR<ContactCreateWithoutTechnicalStacksInput, ContactUncheckedCreateWithoutTechnicalStacksInput>
  }

  export type ContactUpdateWithWhereUniqueWithoutTechnicalStacksInput = {
    where: ContactWhereUniqueInput
    data: XOR<ContactUpdateWithoutTechnicalStacksInput, ContactUncheckedUpdateWithoutTechnicalStacksInput>
  }

  export type ContactUpdateManyWithWhereWithoutTechnicalStacksInput = {
    where: ContactScalarWhereInput
    data: XOR<ContactUpdateManyMutationInput, ContactUncheckedUpdateManyWithoutTechnicalStacksInput>
  }

  export type CurrencyTypeCreateWithoutPriceInput = {
    name: string
    symbol: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clients?: ClientCreateNestedManyWithoutCurrencyTypeInput
    peopleSalary?: PeopleCreateNestedManyWithoutSalaryCurrencyTypeInput
    peopleFee?: PeopleCreateNestedManyWithoutFeeCurrencyTypeInput
    peopleLaptop?: PeopleCreateNestedManyWithoutLaptopCurrencyTypeInput
    PreInvoiceDetail?: PreInvoiceDetailCreateNestedManyWithoutCurrencyTypeInput
  }

  export type CurrencyTypeUncheckedCreateWithoutPriceInput = {
    id?: number
    name: string
    symbol: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clients?: ClientUncheckedCreateNestedManyWithoutCurrencyTypeInput
    peopleSalary?: PeopleUncheckedCreateNestedManyWithoutSalaryCurrencyTypeInput
    peopleFee?: PeopleUncheckedCreateNestedManyWithoutFeeCurrencyTypeInput
    peopleLaptop?: PeopleUncheckedCreateNestedManyWithoutLaptopCurrencyTypeInput
    PreInvoiceDetail?: PreInvoiceDetailUncheckedCreateNestedManyWithoutCurrencyTypeInput
  }

  export type CurrencyTypeCreateOrConnectWithoutPriceInput = {
    where: CurrencyTypeWhereUniqueInput
    create: XOR<CurrencyTypeCreateWithoutPriceInput, CurrencyTypeUncheckedCreateWithoutPriceInput>
  }

  export type CurrencyTypeUpsertWithoutPriceInput = {
    update: XOR<CurrencyTypeUpdateWithoutPriceInput, CurrencyTypeUncheckedUpdateWithoutPriceInput>
    create: XOR<CurrencyTypeCreateWithoutPriceInput, CurrencyTypeUncheckedCreateWithoutPriceInput>
    where?: CurrencyTypeWhereInput
  }

  export type CurrencyTypeUpdateToOneWithWhereWithoutPriceInput = {
    where?: CurrencyTypeWhereInput
    data: XOR<CurrencyTypeUpdateWithoutPriceInput, CurrencyTypeUncheckedUpdateWithoutPriceInput>
  }

  export type CurrencyTypeUpdateWithoutPriceInput = {
    name?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: ClientUpdateManyWithoutCurrencyTypeNestedInput
    peopleSalary?: PeopleUpdateManyWithoutSalaryCurrencyTypeNestedInput
    peopleFee?: PeopleUpdateManyWithoutFeeCurrencyTypeNestedInput
    peopleLaptop?: PeopleUpdateManyWithoutLaptopCurrencyTypeNestedInput
    PreInvoiceDetail?: PreInvoiceDetailUpdateManyWithoutCurrencyTypeNestedInput
  }

  export type CurrencyTypeUncheckedUpdateWithoutPriceInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: ClientUncheckedUpdateManyWithoutCurrencyTypeNestedInput
    peopleSalary?: PeopleUncheckedUpdateManyWithoutSalaryCurrencyTypeNestedInput
    peopleFee?: PeopleUncheckedUpdateManyWithoutFeeCurrencyTypeNestedInput
    peopleLaptop?: PeopleUncheckedUpdateManyWithoutLaptopCurrencyTypeNestedInput
    PreInvoiceDetail?: PreInvoiceDetailUncheckedUpdateManyWithoutCurrencyTypeNestedInput
  }

  export type LeaveDaysCreateWithoutPersonInput = {
    startDate: Date | string
    endDate: Date | string
    reason?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type LeaveDaysUncheckedCreateWithoutPersonInput = {
    id?: number
    startDate: Date | string
    endDate: Date | string
    reason?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type LeaveDaysCreateOrConnectWithoutPersonInput = {
    where: LeaveDaysWhereUniqueInput
    create: XOR<LeaveDaysCreateWithoutPersonInput, LeaveDaysUncheckedCreateWithoutPersonInput>
  }

  export type LeaveDaysCreateManyPersonInputEnvelope = {
    data: LeaveDaysCreateManyPersonInput | LeaveDaysCreateManyPersonInput[]
    skipDuplicates?: boolean
  }

  export type AFPInstitutionCreateWithoutPeopleInput = {
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type AFPInstitutionUncheckedCreateWithoutPeopleInput = {
    id?: number
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type AFPInstitutionCreateOrConnectWithoutPeopleInput = {
    where: AFPInstitutionWhereUniqueInput
    create: XOR<AFPInstitutionCreateWithoutPeopleInput, AFPInstitutionUncheckedCreateWithoutPeopleInput>
  }

  export type ClientCreateWithoutPeopleInput = {
    name: string
    billableDay?: Decimal | DecimalJsLike | number | string | null
    rut?: string | null
    address?: string | null
    companyName?: string | null
    marginPercentage?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    currencyType?: CurrencyTypeCreateNestedOneWithoutClientsInput
    contacts?: ContactCreateNestedManyWithoutClientInput
    preInvoices?: PreInvoiceCreateNestedManyWithoutClientInput
    projects?: ProjectCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutPeopleInput = {
    id?: number
    name: string
    currencyTypeId?: number | null
    billableDay?: Decimal | DecimalJsLike | number | string | null
    rut?: string | null
    address?: string | null
    companyName?: string | null
    marginPercentage?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutClientInput
    preInvoices?: PreInvoiceUncheckedCreateNestedManyWithoutClientInput
    projects?: ProjectUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutPeopleInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutPeopleInput, ClientUncheckedCreateWithoutPeopleInput>
  }

  export type CurrencyTypeCreateWithoutPeopleSalaryInput = {
    name: string
    symbol: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clients?: ClientCreateNestedManyWithoutCurrencyTypeInput
    peopleFee?: PeopleCreateNestedManyWithoutFeeCurrencyTypeInput
    peopleLaptop?: PeopleCreateNestedManyWithoutLaptopCurrencyTypeInput
    PreInvoiceDetail?: PreInvoiceDetailCreateNestedManyWithoutCurrencyTypeInput
    Price?: PriceCreateNestedManyWithoutCurrencyTypeInput
  }

  export type CurrencyTypeUncheckedCreateWithoutPeopleSalaryInput = {
    id?: number
    name: string
    symbol: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clients?: ClientUncheckedCreateNestedManyWithoutCurrencyTypeInput
    peopleFee?: PeopleUncheckedCreateNestedManyWithoutFeeCurrencyTypeInput
    peopleLaptop?: PeopleUncheckedCreateNestedManyWithoutLaptopCurrencyTypeInput
    PreInvoiceDetail?: PreInvoiceDetailUncheckedCreateNestedManyWithoutCurrencyTypeInput
    Price?: PriceUncheckedCreateNestedManyWithoutCurrencyTypeInput
  }

  export type CurrencyTypeCreateOrConnectWithoutPeopleSalaryInput = {
    where: CurrencyTypeWhereUniqueInput
    create: XOR<CurrencyTypeCreateWithoutPeopleSalaryInput, CurrencyTypeUncheckedCreateWithoutPeopleSalaryInput>
  }

  export type CurrencyTypeCreateWithoutPeopleFeeInput = {
    name: string
    symbol: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clients?: ClientCreateNestedManyWithoutCurrencyTypeInput
    peopleSalary?: PeopleCreateNestedManyWithoutSalaryCurrencyTypeInput
    peopleLaptop?: PeopleCreateNestedManyWithoutLaptopCurrencyTypeInput
    PreInvoiceDetail?: PreInvoiceDetailCreateNestedManyWithoutCurrencyTypeInput
    Price?: PriceCreateNestedManyWithoutCurrencyTypeInput
  }

  export type CurrencyTypeUncheckedCreateWithoutPeopleFeeInput = {
    id?: number
    name: string
    symbol: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clients?: ClientUncheckedCreateNestedManyWithoutCurrencyTypeInput
    peopleSalary?: PeopleUncheckedCreateNestedManyWithoutSalaryCurrencyTypeInput
    peopleLaptop?: PeopleUncheckedCreateNestedManyWithoutLaptopCurrencyTypeInput
    PreInvoiceDetail?: PreInvoiceDetailUncheckedCreateNestedManyWithoutCurrencyTypeInput
    Price?: PriceUncheckedCreateNestedManyWithoutCurrencyTypeInput
  }

  export type CurrencyTypeCreateOrConnectWithoutPeopleFeeInput = {
    where: CurrencyTypeWhereUniqueInput
    create: XOR<CurrencyTypeCreateWithoutPeopleFeeInput, CurrencyTypeUncheckedCreateWithoutPeopleFeeInput>
  }

  export type CurrencyTypeCreateWithoutPeopleLaptopInput = {
    name: string
    symbol: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clients?: ClientCreateNestedManyWithoutCurrencyTypeInput
    peopleSalary?: PeopleCreateNestedManyWithoutSalaryCurrencyTypeInput
    peopleFee?: PeopleCreateNestedManyWithoutFeeCurrencyTypeInput
    PreInvoiceDetail?: PreInvoiceDetailCreateNestedManyWithoutCurrencyTypeInput
    Price?: PriceCreateNestedManyWithoutCurrencyTypeInput
  }

  export type CurrencyTypeUncheckedCreateWithoutPeopleLaptopInput = {
    id?: number
    name: string
    symbol: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clients?: ClientUncheckedCreateNestedManyWithoutCurrencyTypeInput
    peopleSalary?: PeopleUncheckedCreateNestedManyWithoutSalaryCurrencyTypeInput
    peopleFee?: PeopleUncheckedCreateNestedManyWithoutFeeCurrencyTypeInput
    PreInvoiceDetail?: PreInvoiceDetailUncheckedCreateNestedManyWithoutCurrencyTypeInput
    Price?: PriceUncheckedCreateNestedManyWithoutCurrencyTypeInput
  }

  export type CurrencyTypeCreateOrConnectWithoutPeopleLaptopInput = {
    where: CurrencyTypeWhereUniqueInput
    create: XOR<CurrencyTypeCreateWithoutPeopleLaptopInput, CurrencyTypeUncheckedCreateWithoutPeopleLaptopInput>
  }

  export type HealthInstitutionCreateWithoutPeopleInput = {
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type HealthInstitutionUncheckedCreateWithoutPeopleInput = {
    id?: number
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type HealthInstitutionCreateOrConnectWithoutPeopleInput = {
    where: HealthInstitutionWhereUniqueInput
    create: XOR<HealthInstitutionCreateWithoutPeopleInput, HealthInstitutionUncheckedCreateWithoutPeopleInput>
  }

  export type JobTitleCreateWithoutPeopleInput = {
    name: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type JobTitleUncheckedCreateWithoutPeopleInput = {
    id?: number
    name: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type JobTitleCreateOrConnectWithoutPeopleInput = {
    where: JobTitleWhereUniqueInput
    create: XOR<JobTitleCreateWithoutPeopleInput, JobTitleUncheckedCreateWithoutPeopleInput>
  }

  export type RoleCreateWithoutPeopleInput = {
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type RoleUncheckedCreateWithoutPeopleInput = {
    id?: number
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type RoleCreateOrConnectWithoutPeopleInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutPeopleInput, RoleUncheckedCreateWithoutPeopleInput>
  }

  export type SeniorityCreateWithoutPeopleInput = {
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type SeniorityUncheckedCreateWithoutPeopleInput = {
    id?: number
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type SeniorityCreateOrConnectWithoutPeopleInput = {
    where: SeniorityWhereUniqueInput
    create: XOR<SeniorityCreateWithoutPeopleInput, SeniorityUncheckedCreateWithoutPeopleInput>
  }

  export type TechnicalsStacksCreateWithoutPeopleInput = {
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contacts?: ContactCreateNestedManyWithoutTechnicalStacksInput
  }

  export type TechnicalsStacksUncheckedCreateWithoutPeopleInput = {
    id?: number
    name: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutTechnicalStacksInput
  }

  export type TechnicalsStacksCreateOrConnectWithoutPeopleInput = {
    where: TechnicalsStacksWhereUniqueInput
    create: XOR<TechnicalsStacksCreateWithoutPeopleInput, TechnicalsStacksUncheckedCreateWithoutPeopleInput>
  }

  export type PreInvoiceDetailCreateWithoutPersonInput = {
    status: string
    value: Decimal | DecimalJsLike | number | string
    billableDays: Decimal | DecimalJsLike | number | string
    leaveDays: Decimal | DecimalJsLike | number | string
    totalConsumeDays: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    CurrencyType?: CurrencyTypeCreateNestedOneWithoutPreInvoiceDetailInput
    preInvoice?: PreInvoiceCreateNestedOneWithoutDetailsInput
  }

  export type PreInvoiceDetailUncheckedCreateWithoutPersonInput = {
    id?: number
    preInvoiceId?: number | null
    status: string
    value: Decimal | DecimalJsLike | number | string
    currency_type?: number | null
    billableDays: Decimal | DecimalJsLike | number | string
    leaveDays: Decimal | DecimalJsLike | number | string
    totalConsumeDays: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PreInvoiceDetailCreateOrConnectWithoutPersonInput = {
    where: PreInvoiceDetailWhereUniqueInput
    create: XOR<PreInvoiceDetailCreateWithoutPersonInput, PreInvoiceDetailUncheckedCreateWithoutPersonInput>
  }

  export type PreInvoiceDetailCreateManyPersonInputEnvelope = {
    data: PreInvoiceDetailCreateManyPersonInput | PreInvoiceDetailCreateManyPersonInput[]
    skipDuplicates?: boolean
  }

  export type LeaveDaysUpsertWithWhereUniqueWithoutPersonInput = {
    where: LeaveDaysWhereUniqueInput
    update: XOR<LeaveDaysUpdateWithoutPersonInput, LeaveDaysUncheckedUpdateWithoutPersonInput>
    create: XOR<LeaveDaysCreateWithoutPersonInput, LeaveDaysUncheckedCreateWithoutPersonInput>
  }

  export type LeaveDaysUpdateWithWhereUniqueWithoutPersonInput = {
    where: LeaveDaysWhereUniqueInput
    data: XOR<LeaveDaysUpdateWithoutPersonInput, LeaveDaysUncheckedUpdateWithoutPersonInput>
  }

  export type LeaveDaysUpdateManyWithWhereWithoutPersonInput = {
    where: LeaveDaysScalarWhereInput
    data: XOR<LeaveDaysUpdateManyMutationInput, LeaveDaysUncheckedUpdateManyWithoutPersonInput>
  }

  export type LeaveDaysScalarWhereInput = {
    AND?: LeaveDaysScalarWhereInput | LeaveDaysScalarWhereInput[]
    OR?: LeaveDaysScalarWhereInput[]
    NOT?: LeaveDaysScalarWhereInput | LeaveDaysScalarWhereInput[]
    id?: IntFilter<"LeaveDays"> | number
    personId?: IntNullableFilter<"LeaveDays"> | number | null
    startDate?: DateTimeFilter<"LeaveDays"> | Date | string
    endDate?: DateTimeFilter<"LeaveDays"> | Date | string
    reason?: StringNullableFilter<"LeaveDays"> | string | null
    createdAt?: DateTimeNullableFilter<"LeaveDays"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"LeaveDays"> | Date | string | null
  }

  export type AFPInstitutionUpsertWithoutPeopleInput = {
    update: XOR<AFPInstitutionUpdateWithoutPeopleInput, AFPInstitutionUncheckedUpdateWithoutPeopleInput>
    create: XOR<AFPInstitutionCreateWithoutPeopleInput, AFPInstitutionUncheckedCreateWithoutPeopleInput>
    where?: AFPInstitutionWhereInput
  }

  export type AFPInstitutionUpdateToOneWithWhereWithoutPeopleInput = {
    where?: AFPInstitutionWhereInput
    data: XOR<AFPInstitutionUpdateWithoutPeopleInput, AFPInstitutionUncheckedUpdateWithoutPeopleInput>
  }

  export type AFPInstitutionUpdateWithoutPeopleInput = {
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AFPInstitutionUncheckedUpdateWithoutPeopleInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ClientUpsertWithoutPeopleInput = {
    update: XOR<ClientUpdateWithoutPeopleInput, ClientUncheckedUpdateWithoutPeopleInput>
    create: XOR<ClientCreateWithoutPeopleInput, ClientUncheckedCreateWithoutPeopleInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutPeopleInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutPeopleInput, ClientUncheckedUpdateWithoutPeopleInput>
  }

  export type ClientUpdateWithoutPeopleInput = {
    name?: StringFieldUpdateOperationsInput | string
    billableDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rut?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    marginPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currencyType?: CurrencyTypeUpdateOneWithoutClientsNestedInput
    contacts?: ContactUpdateManyWithoutClientNestedInput
    preInvoices?: PreInvoiceUpdateManyWithoutClientNestedInput
    projects?: ProjectUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutPeopleInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    currencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    billableDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rut?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    marginPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contacts?: ContactUncheckedUpdateManyWithoutClientNestedInput
    preInvoices?: PreInvoiceUncheckedUpdateManyWithoutClientNestedInput
    projects?: ProjectUncheckedUpdateManyWithoutClientNestedInput
  }

  export type CurrencyTypeUpsertWithoutPeopleSalaryInput = {
    update: XOR<CurrencyTypeUpdateWithoutPeopleSalaryInput, CurrencyTypeUncheckedUpdateWithoutPeopleSalaryInput>
    create: XOR<CurrencyTypeCreateWithoutPeopleSalaryInput, CurrencyTypeUncheckedCreateWithoutPeopleSalaryInput>
    where?: CurrencyTypeWhereInput
  }

  export type CurrencyTypeUpdateToOneWithWhereWithoutPeopleSalaryInput = {
    where?: CurrencyTypeWhereInput
    data: XOR<CurrencyTypeUpdateWithoutPeopleSalaryInput, CurrencyTypeUncheckedUpdateWithoutPeopleSalaryInput>
  }

  export type CurrencyTypeUpdateWithoutPeopleSalaryInput = {
    name?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: ClientUpdateManyWithoutCurrencyTypeNestedInput
    peopleFee?: PeopleUpdateManyWithoutFeeCurrencyTypeNestedInput
    peopleLaptop?: PeopleUpdateManyWithoutLaptopCurrencyTypeNestedInput
    PreInvoiceDetail?: PreInvoiceDetailUpdateManyWithoutCurrencyTypeNestedInput
    Price?: PriceUpdateManyWithoutCurrencyTypeNestedInput
  }

  export type CurrencyTypeUncheckedUpdateWithoutPeopleSalaryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: ClientUncheckedUpdateManyWithoutCurrencyTypeNestedInput
    peopleFee?: PeopleUncheckedUpdateManyWithoutFeeCurrencyTypeNestedInput
    peopleLaptop?: PeopleUncheckedUpdateManyWithoutLaptopCurrencyTypeNestedInput
    PreInvoiceDetail?: PreInvoiceDetailUncheckedUpdateManyWithoutCurrencyTypeNestedInput
    Price?: PriceUncheckedUpdateManyWithoutCurrencyTypeNestedInput
  }

  export type CurrencyTypeUpsertWithoutPeopleFeeInput = {
    update: XOR<CurrencyTypeUpdateWithoutPeopleFeeInput, CurrencyTypeUncheckedUpdateWithoutPeopleFeeInput>
    create: XOR<CurrencyTypeCreateWithoutPeopleFeeInput, CurrencyTypeUncheckedCreateWithoutPeopleFeeInput>
    where?: CurrencyTypeWhereInput
  }

  export type CurrencyTypeUpdateToOneWithWhereWithoutPeopleFeeInput = {
    where?: CurrencyTypeWhereInput
    data: XOR<CurrencyTypeUpdateWithoutPeopleFeeInput, CurrencyTypeUncheckedUpdateWithoutPeopleFeeInput>
  }

  export type CurrencyTypeUpdateWithoutPeopleFeeInput = {
    name?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: ClientUpdateManyWithoutCurrencyTypeNestedInput
    peopleSalary?: PeopleUpdateManyWithoutSalaryCurrencyTypeNestedInput
    peopleLaptop?: PeopleUpdateManyWithoutLaptopCurrencyTypeNestedInput
    PreInvoiceDetail?: PreInvoiceDetailUpdateManyWithoutCurrencyTypeNestedInput
    Price?: PriceUpdateManyWithoutCurrencyTypeNestedInput
  }

  export type CurrencyTypeUncheckedUpdateWithoutPeopleFeeInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: ClientUncheckedUpdateManyWithoutCurrencyTypeNestedInput
    peopleSalary?: PeopleUncheckedUpdateManyWithoutSalaryCurrencyTypeNestedInput
    peopleLaptop?: PeopleUncheckedUpdateManyWithoutLaptopCurrencyTypeNestedInput
    PreInvoiceDetail?: PreInvoiceDetailUncheckedUpdateManyWithoutCurrencyTypeNestedInput
    Price?: PriceUncheckedUpdateManyWithoutCurrencyTypeNestedInput
  }

  export type CurrencyTypeUpsertWithoutPeopleLaptopInput = {
    update: XOR<CurrencyTypeUpdateWithoutPeopleLaptopInput, CurrencyTypeUncheckedUpdateWithoutPeopleLaptopInput>
    create: XOR<CurrencyTypeCreateWithoutPeopleLaptopInput, CurrencyTypeUncheckedCreateWithoutPeopleLaptopInput>
    where?: CurrencyTypeWhereInput
  }

  export type CurrencyTypeUpdateToOneWithWhereWithoutPeopleLaptopInput = {
    where?: CurrencyTypeWhereInput
    data: XOR<CurrencyTypeUpdateWithoutPeopleLaptopInput, CurrencyTypeUncheckedUpdateWithoutPeopleLaptopInput>
  }

  export type CurrencyTypeUpdateWithoutPeopleLaptopInput = {
    name?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: ClientUpdateManyWithoutCurrencyTypeNestedInput
    peopleSalary?: PeopleUpdateManyWithoutSalaryCurrencyTypeNestedInput
    peopleFee?: PeopleUpdateManyWithoutFeeCurrencyTypeNestedInput
    PreInvoiceDetail?: PreInvoiceDetailUpdateManyWithoutCurrencyTypeNestedInput
    Price?: PriceUpdateManyWithoutCurrencyTypeNestedInput
  }

  export type CurrencyTypeUncheckedUpdateWithoutPeopleLaptopInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: ClientUncheckedUpdateManyWithoutCurrencyTypeNestedInput
    peopleSalary?: PeopleUncheckedUpdateManyWithoutSalaryCurrencyTypeNestedInput
    peopleFee?: PeopleUncheckedUpdateManyWithoutFeeCurrencyTypeNestedInput
    PreInvoiceDetail?: PreInvoiceDetailUncheckedUpdateManyWithoutCurrencyTypeNestedInput
    Price?: PriceUncheckedUpdateManyWithoutCurrencyTypeNestedInput
  }

  export type HealthInstitutionUpsertWithoutPeopleInput = {
    update: XOR<HealthInstitutionUpdateWithoutPeopleInput, HealthInstitutionUncheckedUpdateWithoutPeopleInput>
    create: XOR<HealthInstitutionCreateWithoutPeopleInput, HealthInstitutionUncheckedCreateWithoutPeopleInput>
    where?: HealthInstitutionWhereInput
  }

  export type HealthInstitutionUpdateToOneWithWhereWithoutPeopleInput = {
    where?: HealthInstitutionWhereInput
    data: XOR<HealthInstitutionUpdateWithoutPeopleInput, HealthInstitutionUncheckedUpdateWithoutPeopleInput>
  }

  export type HealthInstitutionUpdateWithoutPeopleInput = {
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HealthInstitutionUncheckedUpdateWithoutPeopleInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type JobTitleUpsertWithoutPeopleInput = {
    update: XOR<JobTitleUpdateWithoutPeopleInput, JobTitleUncheckedUpdateWithoutPeopleInput>
    create: XOR<JobTitleCreateWithoutPeopleInput, JobTitleUncheckedCreateWithoutPeopleInput>
    where?: JobTitleWhereInput
  }

  export type JobTitleUpdateToOneWithWhereWithoutPeopleInput = {
    where?: JobTitleWhereInput
    data: XOR<JobTitleUpdateWithoutPeopleInput, JobTitleUncheckedUpdateWithoutPeopleInput>
  }

  export type JobTitleUpdateWithoutPeopleInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type JobTitleUncheckedUpdateWithoutPeopleInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RoleUpsertWithoutPeopleInput = {
    update: XOR<RoleUpdateWithoutPeopleInput, RoleUncheckedUpdateWithoutPeopleInput>
    create: XOR<RoleCreateWithoutPeopleInput, RoleUncheckedCreateWithoutPeopleInput>
    where?: RoleWhereInput
  }

  export type RoleUpdateToOneWithWhereWithoutPeopleInput = {
    where?: RoleWhereInput
    data: XOR<RoleUpdateWithoutPeopleInput, RoleUncheckedUpdateWithoutPeopleInput>
  }

  export type RoleUpdateWithoutPeopleInput = {
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RoleUncheckedUpdateWithoutPeopleInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SeniorityUpsertWithoutPeopleInput = {
    update: XOR<SeniorityUpdateWithoutPeopleInput, SeniorityUncheckedUpdateWithoutPeopleInput>
    create: XOR<SeniorityCreateWithoutPeopleInput, SeniorityUncheckedCreateWithoutPeopleInput>
    where?: SeniorityWhereInput
  }

  export type SeniorityUpdateToOneWithWhereWithoutPeopleInput = {
    where?: SeniorityWhereInput
    data: XOR<SeniorityUpdateWithoutPeopleInput, SeniorityUncheckedUpdateWithoutPeopleInput>
  }

  export type SeniorityUpdateWithoutPeopleInput = {
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SeniorityUncheckedUpdateWithoutPeopleInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TechnicalsStacksUpsertWithoutPeopleInput = {
    update: XOR<TechnicalsStacksUpdateWithoutPeopleInput, TechnicalsStacksUncheckedUpdateWithoutPeopleInput>
    create: XOR<TechnicalsStacksCreateWithoutPeopleInput, TechnicalsStacksUncheckedCreateWithoutPeopleInput>
    where?: TechnicalsStacksWhereInput
  }

  export type TechnicalsStacksUpdateToOneWithWhereWithoutPeopleInput = {
    where?: TechnicalsStacksWhereInput
    data: XOR<TechnicalsStacksUpdateWithoutPeopleInput, TechnicalsStacksUncheckedUpdateWithoutPeopleInput>
  }

  export type TechnicalsStacksUpdateWithoutPeopleInput = {
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contacts?: ContactUpdateManyWithoutTechnicalStacksNestedInput
  }

  export type TechnicalsStacksUncheckedUpdateWithoutPeopleInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contacts?: ContactUncheckedUpdateManyWithoutTechnicalStacksNestedInput
  }

  export type PreInvoiceDetailUpsertWithWhereUniqueWithoutPersonInput = {
    where: PreInvoiceDetailWhereUniqueInput
    update: XOR<PreInvoiceDetailUpdateWithoutPersonInput, PreInvoiceDetailUncheckedUpdateWithoutPersonInput>
    create: XOR<PreInvoiceDetailCreateWithoutPersonInput, PreInvoiceDetailUncheckedCreateWithoutPersonInput>
  }

  export type PreInvoiceDetailUpdateWithWhereUniqueWithoutPersonInput = {
    where: PreInvoiceDetailWhereUniqueInput
    data: XOR<PreInvoiceDetailUpdateWithoutPersonInput, PreInvoiceDetailUncheckedUpdateWithoutPersonInput>
  }

  export type PreInvoiceDetailUpdateManyWithWhereWithoutPersonInput = {
    where: PreInvoiceDetailScalarWhereInput
    data: XOR<PreInvoiceDetailUpdateManyMutationInput, PreInvoiceDetailUncheckedUpdateManyWithoutPersonInput>
  }

  export type PeopleCreateWithoutLeaveDaysInput = {
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    remote?: string | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    bank?: string | null
    accountNumber?: string | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    afpInstitution?: AFPInstitutionCreateNestedOneWithoutPeopleInput
    client?: ClientCreateNestedOneWithoutPeopleInput
    salaryCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleSalaryInput
    feeCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleFeeInput
    laptopCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleLaptopInput
    healthInstitution?: HealthInstitutionCreateNestedOneWithoutPeopleInput
    jobTitle?: JobTitleCreateNestedOneWithoutPeopleInput
    role?: RoleCreateNestedOneWithoutPeopleInput
    seniority?: SeniorityCreateNestedOneWithoutPeopleInput
    technicalStacks?: TechnicalsStacksCreateNestedOneWithoutPeopleInput
    preInvoiceDetails?: PreInvoiceDetailCreateNestedManyWithoutPersonInput
  }

  export type PeopleUncheckedCreateWithoutLeaveDaysInput = {
    id?: number
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    roleId?: number | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    clientId?: number | null
    remote?: string | null
    jobTitleId?: number | null
    seniorityId?: number | null
    technicalStacksId?: number | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    afpInstitutionId?: number | null
    healthInstitutionId?: number | null
    bank?: string | null
    accountNumber?: string | null
    salaryCurrencyTypeId?: number | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: number | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopCurrencyTypeId?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    preInvoiceDetails?: PreInvoiceDetailUncheckedCreateNestedManyWithoutPersonInput
  }

  export type PeopleCreateOrConnectWithoutLeaveDaysInput = {
    where: PeopleWhereUniqueInput
    create: XOR<PeopleCreateWithoutLeaveDaysInput, PeopleUncheckedCreateWithoutLeaveDaysInput>
  }

  export type PeopleUpsertWithoutLeaveDaysInput = {
    update: XOR<PeopleUpdateWithoutLeaveDaysInput, PeopleUncheckedUpdateWithoutLeaveDaysInput>
    create: XOR<PeopleCreateWithoutLeaveDaysInput, PeopleUncheckedCreateWithoutLeaveDaysInput>
    where?: PeopleWhereInput
  }

  export type PeopleUpdateToOneWithWhereWithoutLeaveDaysInput = {
    where?: PeopleWhereInput
    data: XOR<PeopleUpdateWithoutLeaveDaysInput, PeopleUncheckedUpdateWithoutLeaveDaysInput>
  }

  export type PeopleUpdateWithoutLeaveDaysInput = {
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    afpInstitution?: AFPInstitutionUpdateOneWithoutPeopleNestedInput
    client?: ClientUpdateOneWithoutPeopleNestedInput
    salaryCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleSalaryNestedInput
    feeCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleFeeNestedInput
    laptopCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleLaptopNestedInput
    healthInstitution?: HealthInstitutionUpdateOneWithoutPeopleNestedInput
    jobTitle?: JobTitleUpdateOneWithoutPeopleNestedInput
    role?: RoleUpdateOneWithoutPeopleNestedInput
    seniority?: SeniorityUpdateOneWithoutPeopleNestedInput
    technicalStacks?: TechnicalsStacksUpdateOneWithoutPeopleNestedInput
    preInvoiceDetails?: PreInvoiceDetailUpdateManyWithoutPersonNestedInput
  }

  export type PeopleUncheckedUpdateWithoutLeaveDaysInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    jobTitleId?: NullableIntFieldUpdateOperationsInput | number | null
    seniorityId?: NullableIntFieldUpdateOperationsInput | number | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    afpInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    healthInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preInvoiceDetails?: PreInvoiceDetailUncheckedUpdateManyWithoutPersonNestedInput
  }

  export type ClientCreateWithoutPreInvoicesInput = {
    name: string
    billableDay?: Decimal | DecimalJsLike | number | string | null
    rut?: string | null
    address?: string | null
    companyName?: string | null
    marginPercentage?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    currencyType?: CurrencyTypeCreateNestedOneWithoutClientsInput
    contacts?: ContactCreateNestedManyWithoutClientInput
    people?: PeopleCreateNestedManyWithoutClientInput
    projects?: ProjectCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutPreInvoicesInput = {
    id?: number
    name: string
    currencyTypeId?: number | null
    billableDay?: Decimal | DecimalJsLike | number | string | null
    rut?: string | null
    address?: string | null
    companyName?: string | null
    marginPercentage?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutClientInput
    people?: PeopleUncheckedCreateNestedManyWithoutClientInput
    projects?: ProjectUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutPreInvoicesInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutPreInvoicesInput, ClientUncheckedCreateWithoutPreInvoicesInput>
  }

  export type ContactCreateWithoutPreInvoicesInput = {
    name: string
    lastName?: string | null
    email?: string | null
    phone?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    client?: ClientCreateNestedOneWithoutContactsInput
    technicalStacks?: TechnicalsStacksCreateNestedOneWithoutContactsInput
  }

  export type ContactUncheckedCreateWithoutPreInvoicesInput = {
    id?: number
    name: string
    lastName?: string | null
    email?: string | null
    phone?: string | null
    clientId?: number | null
    technicalStacksId?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type ContactCreateOrConnectWithoutPreInvoicesInput = {
    where: ContactWhereUniqueInput
    create: XOR<ContactCreateWithoutPreInvoicesInput, ContactUncheckedCreateWithoutPreInvoicesInput>
  }

  export type PreInvoiceDetailCreateWithoutPreInvoiceInput = {
    status: string
    value: Decimal | DecimalJsLike | number | string
    billableDays: Decimal | DecimalJsLike | number | string
    leaveDays: Decimal | DecimalJsLike | number | string
    totalConsumeDays: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    CurrencyType?: CurrencyTypeCreateNestedOneWithoutPreInvoiceDetailInput
    person?: PeopleCreateNestedOneWithoutPreInvoiceDetailsInput
  }

  export type PreInvoiceDetailUncheckedCreateWithoutPreInvoiceInput = {
    id?: number
    personId?: number | null
    status: string
    value: Decimal | DecimalJsLike | number | string
    currency_type?: number | null
    billableDays: Decimal | DecimalJsLike | number | string
    leaveDays: Decimal | DecimalJsLike | number | string
    totalConsumeDays: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PreInvoiceDetailCreateOrConnectWithoutPreInvoiceInput = {
    where: PreInvoiceDetailWhereUniqueInput
    create: XOR<PreInvoiceDetailCreateWithoutPreInvoiceInput, PreInvoiceDetailUncheckedCreateWithoutPreInvoiceInput>
  }

  export type PreInvoiceDetailCreateManyPreInvoiceInputEnvelope = {
    data: PreInvoiceDetailCreateManyPreInvoiceInput | PreInvoiceDetailCreateManyPreInvoiceInput[]
    skipDuplicates?: boolean
  }

  export type ClientUpsertWithoutPreInvoicesInput = {
    update: XOR<ClientUpdateWithoutPreInvoicesInput, ClientUncheckedUpdateWithoutPreInvoicesInput>
    create: XOR<ClientCreateWithoutPreInvoicesInput, ClientUncheckedCreateWithoutPreInvoicesInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutPreInvoicesInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutPreInvoicesInput, ClientUncheckedUpdateWithoutPreInvoicesInput>
  }

  export type ClientUpdateWithoutPreInvoicesInput = {
    name?: StringFieldUpdateOperationsInput | string
    billableDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rut?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    marginPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currencyType?: CurrencyTypeUpdateOneWithoutClientsNestedInput
    contacts?: ContactUpdateManyWithoutClientNestedInput
    people?: PeopleUpdateManyWithoutClientNestedInput
    projects?: ProjectUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutPreInvoicesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    currencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    billableDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rut?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    marginPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contacts?: ContactUncheckedUpdateManyWithoutClientNestedInput
    people?: PeopleUncheckedUpdateManyWithoutClientNestedInput
    projects?: ProjectUncheckedUpdateManyWithoutClientNestedInput
  }

  export type ContactUpsertWithoutPreInvoicesInput = {
    update: XOR<ContactUpdateWithoutPreInvoicesInput, ContactUncheckedUpdateWithoutPreInvoicesInput>
    create: XOR<ContactCreateWithoutPreInvoicesInput, ContactUncheckedCreateWithoutPreInvoicesInput>
    where?: ContactWhereInput
  }

  export type ContactUpdateToOneWithWhereWithoutPreInvoicesInput = {
    where?: ContactWhereInput
    data: XOR<ContactUpdateWithoutPreInvoicesInput, ContactUncheckedUpdateWithoutPreInvoicesInput>
  }

  export type ContactUpdateWithoutPreInvoicesInput = {
    name?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneWithoutContactsNestedInput
    technicalStacks?: TechnicalsStacksUpdateOneWithoutContactsNestedInput
  }

  export type ContactUncheckedUpdateWithoutPreInvoicesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PreInvoiceDetailUpsertWithWhereUniqueWithoutPreInvoiceInput = {
    where: PreInvoiceDetailWhereUniqueInput
    update: XOR<PreInvoiceDetailUpdateWithoutPreInvoiceInput, PreInvoiceDetailUncheckedUpdateWithoutPreInvoiceInput>
    create: XOR<PreInvoiceDetailCreateWithoutPreInvoiceInput, PreInvoiceDetailUncheckedCreateWithoutPreInvoiceInput>
  }

  export type PreInvoiceDetailUpdateWithWhereUniqueWithoutPreInvoiceInput = {
    where: PreInvoiceDetailWhereUniqueInput
    data: XOR<PreInvoiceDetailUpdateWithoutPreInvoiceInput, PreInvoiceDetailUncheckedUpdateWithoutPreInvoiceInput>
  }

  export type PreInvoiceDetailUpdateManyWithWhereWithoutPreInvoiceInput = {
    where: PreInvoiceDetailScalarWhereInput
    data: XOR<PreInvoiceDetailUpdateManyMutationInput, PreInvoiceDetailUncheckedUpdateManyWithoutPreInvoiceInput>
  }

  export type CurrencyTypeCreateWithoutPreInvoiceDetailInput = {
    name: string
    symbol: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clients?: ClientCreateNestedManyWithoutCurrencyTypeInput
    peopleSalary?: PeopleCreateNestedManyWithoutSalaryCurrencyTypeInput
    peopleFee?: PeopleCreateNestedManyWithoutFeeCurrencyTypeInput
    peopleLaptop?: PeopleCreateNestedManyWithoutLaptopCurrencyTypeInput
    Price?: PriceCreateNestedManyWithoutCurrencyTypeInput
  }

  export type CurrencyTypeUncheckedCreateWithoutPreInvoiceDetailInput = {
    id?: number
    name: string
    symbol: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clients?: ClientUncheckedCreateNestedManyWithoutCurrencyTypeInput
    peopleSalary?: PeopleUncheckedCreateNestedManyWithoutSalaryCurrencyTypeInput
    peopleFee?: PeopleUncheckedCreateNestedManyWithoutFeeCurrencyTypeInput
    peopleLaptop?: PeopleUncheckedCreateNestedManyWithoutLaptopCurrencyTypeInput
    Price?: PriceUncheckedCreateNestedManyWithoutCurrencyTypeInput
  }

  export type CurrencyTypeCreateOrConnectWithoutPreInvoiceDetailInput = {
    where: CurrencyTypeWhereUniqueInput
    create: XOR<CurrencyTypeCreateWithoutPreInvoiceDetailInput, CurrencyTypeUncheckedCreateWithoutPreInvoiceDetailInput>
  }

  export type PeopleCreateWithoutPreInvoiceDetailsInput = {
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    remote?: string | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    bank?: string | null
    accountNumber?: string | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leaveDays?: LeaveDaysCreateNestedManyWithoutPersonInput
    afpInstitution?: AFPInstitutionCreateNestedOneWithoutPeopleInput
    client?: ClientCreateNestedOneWithoutPeopleInput
    salaryCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleSalaryInput
    feeCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleFeeInput
    laptopCurrencyType?: CurrencyTypeCreateNestedOneWithoutPeopleLaptopInput
    healthInstitution?: HealthInstitutionCreateNestedOneWithoutPeopleInput
    jobTitle?: JobTitleCreateNestedOneWithoutPeopleInput
    role?: RoleCreateNestedOneWithoutPeopleInput
    seniority?: SeniorityCreateNestedOneWithoutPeopleInput
    technicalStacks?: TechnicalsStacksCreateNestedOneWithoutPeopleInput
  }

  export type PeopleUncheckedCreateWithoutPreInvoiceDetailsInput = {
    id?: number
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    roleId?: number | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    clientId?: number | null
    remote?: string | null
    jobTitleId?: number | null
    seniorityId?: number | null
    technicalStacksId?: number | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    afpInstitutionId?: number | null
    healthInstitutionId?: number | null
    bank?: string | null
    accountNumber?: string | null
    salaryCurrencyTypeId?: number | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: number | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopCurrencyTypeId?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leaveDays?: LeaveDaysUncheckedCreateNestedManyWithoutPersonInput
  }

  export type PeopleCreateOrConnectWithoutPreInvoiceDetailsInput = {
    where: PeopleWhereUniqueInput
    create: XOR<PeopleCreateWithoutPreInvoiceDetailsInput, PeopleUncheckedCreateWithoutPreInvoiceDetailsInput>
  }

  export type PreInvoiceCreateWithoutDetailsInput = {
    total?: Decimal | DecimalJsLike | number | string | null
    status: string
    ocNumber?: string | null
    hesNumber?: string | null
    invoiceNumber?: string | null
    month: number
    year: number
    value: Decimal | DecimalJsLike | number | string
    rejectNote?: string | null
    ocAmount?: Decimal | DecimalJsLike | number | string | null
    edpNumber?: string | null
    completedBy?: string | null
    completedAt?: Date | string | null
    ufValueUsed?: Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    client?: ClientCreateNestedOneWithoutPreInvoicesInput
    contact?: ContactCreateNestedOneWithoutPreInvoicesInput
  }

  export type PreInvoiceUncheckedCreateWithoutDetailsInput = {
    id?: number
    clientId?: number | null
    contactId?: number | null
    total?: Decimal | DecimalJsLike | number | string | null
    status: string
    ocNumber?: string | null
    hesNumber?: string | null
    invoiceNumber?: string | null
    month: number
    year: number
    value: Decimal | DecimalJsLike | number | string
    rejectNote?: string | null
    ocAmount?: Decimal | DecimalJsLike | number | string | null
    edpNumber?: string | null
    completedBy?: string | null
    completedAt?: Date | string | null
    ufValueUsed?: Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PreInvoiceCreateOrConnectWithoutDetailsInput = {
    where: PreInvoiceWhereUniqueInput
    create: XOR<PreInvoiceCreateWithoutDetailsInput, PreInvoiceUncheckedCreateWithoutDetailsInput>
  }

  export type CurrencyTypeUpsertWithoutPreInvoiceDetailInput = {
    update: XOR<CurrencyTypeUpdateWithoutPreInvoiceDetailInput, CurrencyTypeUncheckedUpdateWithoutPreInvoiceDetailInput>
    create: XOR<CurrencyTypeCreateWithoutPreInvoiceDetailInput, CurrencyTypeUncheckedCreateWithoutPreInvoiceDetailInput>
    where?: CurrencyTypeWhereInput
  }

  export type CurrencyTypeUpdateToOneWithWhereWithoutPreInvoiceDetailInput = {
    where?: CurrencyTypeWhereInput
    data: XOR<CurrencyTypeUpdateWithoutPreInvoiceDetailInput, CurrencyTypeUncheckedUpdateWithoutPreInvoiceDetailInput>
  }

  export type CurrencyTypeUpdateWithoutPreInvoiceDetailInput = {
    name?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: ClientUpdateManyWithoutCurrencyTypeNestedInput
    peopleSalary?: PeopleUpdateManyWithoutSalaryCurrencyTypeNestedInput
    peopleFee?: PeopleUpdateManyWithoutFeeCurrencyTypeNestedInput
    peopleLaptop?: PeopleUpdateManyWithoutLaptopCurrencyTypeNestedInput
    Price?: PriceUpdateManyWithoutCurrencyTypeNestedInput
  }

  export type CurrencyTypeUncheckedUpdateWithoutPreInvoiceDetailInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: ClientUncheckedUpdateManyWithoutCurrencyTypeNestedInput
    peopleSalary?: PeopleUncheckedUpdateManyWithoutSalaryCurrencyTypeNestedInput
    peopleFee?: PeopleUncheckedUpdateManyWithoutFeeCurrencyTypeNestedInput
    peopleLaptop?: PeopleUncheckedUpdateManyWithoutLaptopCurrencyTypeNestedInput
    Price?: PriceUncheckedUpdateManyWithoutCurrencyTypeNestedInput
  }

  export type PeopleUpsertWithoutPreInvoiceDetailsInput = {
    update: XOR<PeopleUpdateWithoutPreInvoiceDetailsInput, PeopleUncheckedUpdateWithoutPreInvoiceDetailsInput>
    create: XOR<PeopleCreateWithoutPreInvoiceDetailsInput, PeopleUncheckedCreateWithoutPreInvoiceDetailsInput>
    where?: PeopleWhereInput
  }

  export type PeopleUpdateToOneWithWhereWithoutPreInvoiceDetailsInput = {
    where?: PeopleWhereInput
    data: XOR<PeopleUpdateWithoutPreInvoiceDetailsInput, PeopleUncheckedUpdateWithoutPreInvoiceDetailsInput>
  }

  export type PeopleUpdateWithoutPreInvoiceDetailsInput = {
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaveDays?: LeaveDaysUpdateManyWithoutPersonNestedInput
    afpInstitution?: AFPInstitutionUpdateOneWithoutPeopleNestedInput
    client?: ClientUpdateOneWithoutPeopleNestedInput
    salaryCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleSalaryNestedInput
    feeCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleFeeNestedInput
    laptopCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleLaptopNestedInput
    healthInstitution?: HealthInstitutionUpdateOneWithoutPeopleNestedInput
    jobTitle?: JobTitleUpdateOneWithoutPeopleNestedInput
    role?: RoleUpdateOneWithoutPeopleNestedInput
    seniority?: SeniorityUpdateOneWithoutPeopleNestedInput
    technicalStacks?: TechnicalsStacksUpdateOneWithoutPeopleNestedInput
  }

  export type PeopleUncheckedUpdateWithoutPreInvoiceDetailsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    jobTitleId?: NullableIntFieldUpdateOperationsInput | number | null
    seniorityId?: NullableIntFieldUpdateOperationsInput | number | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    afpInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    healthInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaveDays?: LeaveDaysUncheckedUpdateManyWithoutPersonNestedInput
  }

  export type PreInvoiceUpsertWithoutDetailsInput = {
    update: XOR<PreInvoiceUpdateWithoutDetailsInput, PreInvoiceUncheckedUpdateWithoutDetailsInput>
    create: XOR<PreInvoiceCreateWithoutDetailsInput, PreInvoiceUncheckedCreateWithoutDetailsInput>
    where?: PreInvoiceWhereInput
  }

  export type PreInvoiceUpdateToOneWithWhereWithoutDetailsInput = {
    where?: PreInvoiceWhereInput
    data: XOR<PreInvoiceUpdateWithoutDetailsInput, PreInvoiceUncheckedUpdateWithoutDetailsInput>
  }

  export type PreInvoiceUpdateWithoutDetailsInput = {
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    ocNumber?: NullableStringFieldUpdateOperationsInput | string | null
    hesNumber?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    month?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rejectNote?: NullableStringFieldUpdateOperationsInput | string | null
    ocAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    edpNumber?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: NullableStringFieldUpdateOperationsInput | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ufValueUsed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneWithoutPreInvoicesNestedInput
    contact?: ContactUpdateOneWithoutPreInvoicesNestedInput
  }

  export type PreInvoiceUncheckedUpdateWithoutDetailsInput = {
    id?: IntFieldUpdateOperationsInput | number
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    contactId?: NullableIntFieldUpdateOperationsInput | number | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    ocNumber?: NullableStringFieldUpdateOperationsInput | string | null
    hesNumber?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    month?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rejectNote?: NullableStringFieldUpdateOperationsInput | string | null
    ocAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    edpNumber?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: NullableStringFieldUpdateOperationsInput | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ufValueUsed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ClientCreateWithoutProjectsInput = {
    name: string
    billableDay?: Decimal | DecimalJsLike | number | string | null
    rut?: string | null
    address?: string | null
    companyName?: string | null
    marginPercentage?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    currencyType?: CurrencyTypeCreateNestedOneWithoutClientsInput
    contacts?: ContactCreateNestedManyWithoutClientInput
    people?: PeopleCreateNestedManyWithoutClientInput
    preInvoices?: PreInvoiceCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutProjectsInput = {
    id?: number
    name: string
    currencyTypeId?: number | null
    billableDay?: Decimal | DecimalJsLike | number | string | null
    rut?: string | null
    address?: string | null
    companyName?: string | null
    marginPercentage?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutClientInput
    people?: PeopleUncheckedCreateNestedManyWithoutClientInput
    preInvoices?: PreInvoiceUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutProjectsInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutProjectsInput, ClientUncheckedCreateWithoutProjectsInput>
  }

  export type ClientUpsertWithoutProjectsInput = {
    update: XOR<ClientUpdateWithoutProjectsInput, ClientUncheckedUpdateWithoutProjectsInput>
    create: XOR<ClientCreateWithoutProjectsInput, ClientUncheckedCreateWithoutProjectsInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutProjectsInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutProjectsInput, ClientUncheckedUpdateWithoutProjectsInput>
  }

  export type ClientUpdateWithoutProjectsInput = {
    name?: StringFieldUpdateOperationsInput | string
    billableDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rut?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    marginPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currencyType?: CurrencyTypeUpdateOneWithoutClientsNestedInput
    contacts?: ContactUpdateManyWithoutClientNestedInput
    people?: PeopleUpdateManyWithoutClientNestedInput
    preInvoices?: PreInvoiceUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutProjectsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    currencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    billableDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rut?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    marginPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contacts?: ContactUncheckedUpdateManyWithoutClientNestedInput
    people?: PeopleUncheckedUpdateManyWithoutClientNestedInput
    preInvoices?: PreInvoiceUncheckedUpdateManyWithoutClientNestedInput
  }

  export type PeopleCreateManyAfpInstitutionInput = {
    id?: number
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    roleId?: number | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    clientId?: number | null
    remote?: string | null
    jobTitleId?: number | null
    seniorityId?: number | null
    technicalStacksId?: number | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    healthInstitutionId?: number | null
    bank?: string | null
    accountNumber?: string | null
    salaryCurrencyTypeId?: number | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: number | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopCurrencyTypeId?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PeopleUpdateWithoutAfpInstitutionInput = {
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaveDays?: LeaveDaysUpdateManyWithoutPersonNestedInput
    client?: ClientUpdateOneWithoutPeopleNestedInput
    salaryCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleSalaryNestedInput
    feeCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleFeeNestedInput
    laptopCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleLaptopNestedInput
    healthInstitution?: HealthInstitutionUpdateOneWithoutPeopleNestedInput
    jobTitle?: JobTitleUpdateOneWithoutPeopleNestedInput
    role?: RoleUpdateOneWithoutPeopleNestedInput
    seniority?: SeniorityUpdateOneWithoutPeopleNestedInput
    technicalStacks?: TechnicalsStacksUpdateOneWithoutPeopleNestedInput
    preInvoiceDetails?: PreInvoiceDetailUpdateManyWithoutPersonNestedInput
  }

  export type PeopleUncheckedUpdateWithoutAfpInstitutionInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    jobTitleId?: NullableIntFieldUpdateOperationsInput | number | null
    seniorityId?: NullableIntFieldUpdateOperationsInput | number | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    healthInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaveDays?: LeaveDaysUncheckedUpdateManyWithoutPersonNestedInput
    preInvoiceDetails?: PreInvoiceDetailUncheckedUpdateManyWithoutPersonNestedInput
  }

  export type PeopleUncheckedUpdateManyWithoutAfpInstitutionInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    jobTitleId?: NullableIntFieldUpdateOperationsInput | number | null
    seniorityId?: NullableIntFieldUpdateOperationsInput | number | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    healthInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ClientCreateManyCurrencyTypeInput = {
    id?: number
    name: string
    billableDay?: Decimal | DecimalJsLike | number | string | null
    rut?: string | null
    address?: string | null
    companyName?: string | null
    marginPercentage?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PeopleCreateManySalaryCurrencyTypeInput = {
    id?: number
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    roleId?: number | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    clientId?: number | null
    remote?: string | null
    jobTitleId?: number | null
    seniorityId?: number | null
    technicalStacksId?: number | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    afpInstitutionId?: number | null
    healthInstitutionId?: number | null
    bank?: string | null
    accountNumber?: string | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: number | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopCurrencyTypeId?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PeopleCreateManyFeeCurrencyTypeInput = {
    id?: number
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    roleId?: number | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    clientId?: number | null
    remote?: string | null
    jobTitleId?: number | null
    seniorityId?: number | null
    technicalStacksId?: number | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    afpInstitutionId?: number | null
    healthInstitutionId?: number | null
    bank?: string | null
    accountNumber?: string | null
    salaryCurrencyTypeId?: number | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopCurrencyTypeId?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PeopleCreateManyLaptopCurrencyTypeInput = {
    id?: number
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    roleId?: number | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    clientId?: number | null
    remote?: string | null
    jobTitleId?: number | null
    seniorityId?: number | null
    technicalStacksId?: number | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    afpInstitutionId?: number | null
    healthInstitutionId?: number | null
    bank?: string | null
    accountNumber?: string | null
    salaryCurrencyTypeId?: number | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: number | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PreInvoiceDetailCreateManyCurrencyTypeInput = {
    id?: number
    preInvoiceId?: number | null
    personId?: number | null
    status: string
    value: Decimal | DecimalJsLike | number | string
    billableDays: Decimal | DecimalJsLike | number | string
    leaveDays: Decimal | DecimalJsLike | number | string
    totalConsumeDays: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PriceCreateManyCurrencyTypeInput = {
    id?: number
    name: string
    description?: string | null
    value: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type ClientUpdateWithoutCurrencyTypeInput = {
    name?: StringFieldUpdateOperationsInput | string
    billableDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rut?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    marginPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contacts?: ContactUpdateManyWithoutClientNestedInput
    people?: PeopleUpdateManyWithoutClientNestedInput
    preInvoices?: PreInvoiceUpdateManyWithoutClientNestedInput
    projects?: ProjectUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutCurrencyTypeInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    billableDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rut?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    marginPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contacts?: ContactUncheckedUpdateManyWithoutClientNestedInput
    people?: PeopleUncheckedUpdateManyWithoutClientNestedInput
    preInvoices?: PreInvoiceUncheckedUpdateManyWithoutClientNestedInput
    projects?: ProjectUncheckedUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateManyWithoutCurrencyTypeInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    billableDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rut?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    marginPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PeopleUpdateWithoutSalaryCurrencyTypeInput = {
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaveDays?: LeaveDaysUpdateManyWithoutPersonNestedInput
    afpInstitution?: AFPInstitutionUpdateOneWithoutPeopleNestedInput
    client?: ClientUpdateOneWithoutPeopleNestedInput
    feeCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleFeeNestedInput
    laptopCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleLaptopNestedInput
    healthInstitution?: HealthInstitutionUpdateOneWithoutPeopleNestedInput
    jobTitle?: JobTitleUpdateOneWithoutPeopleNestedInput
    role?: RoleUpdateOneWithoutPeopleNestedInput
    seniority?: SeniorityUpdateOneWithoutPeopleNestedInput
    technicalStacks?: TechnicalsStacksUpdateOneWithoutPeopleNestedInput
    preInvoiceDetails?: PreInvoiceDetailUpdateManyWithoutPersonNestedInput
  }

  export type PeopleUncheckedUpdateWithoutSalaryCurrencyTypeInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    jobTitleId?: NullableIntFieldUpdateOperationsInput | number | null
    seniorityId?: NullableIntFieldUpdateOperationsInput | number | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    afpInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    healthInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaveDays?: LeaveDaysUncheckedUpdateManyWithoutPersonNestedInput
    preInvoiceDetails?: PreInvoiceDetailUncheckedUpdateManyWithoutPersonNestedInput
  }

  export type PeopleUncheckedUpdateManyWithoutSalaryCurrencyTypeInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    jobTitleId?: NullableIntFieldUpdateOperationsInput | number | null
    seniorityId?: NullableIntFieldUpdateOperationsInput | number | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    afpInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    healthInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PeopleUpdateWithoutFeeCurrencyTypeInput = {
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaveDays?: LeaveDaysUpdateManyWithoutPersonNestedInput
    afpInstitution?: AFPInstitutionUpdateOneWithoutPeopleNestedInput
    client?: ClientUpdateOneWithoutPeopleNestedInput
    salaryCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleSalaryNestedInput
    laptopCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleLaptopNestedInput
    healthInstitution?: HealthInstitutionUpdateOneWithoutPeopleNestedInput
    jobTitle?: JobTitleUpdateOneWithoutPeopleNestedInput
    role?: RoleUpdateOneWithoutPeopleNestedInput
    seniority?: SeniorityUpdateOneWithoutPeopleNestedInput
    technicalStacks?: TechnicalsStacksUpdateOneWithoutPeopleNestedInput
    preInvoiceDetails?: PreInvoiceDetailUpdateManyWithoutPersonNestedInput
  }

  export type PeopleUncheckedUpdateWithoutFeeCurrencyTypeInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    jobTitleId?: NullableIntFieldUpdateOperationsInput | number | null
    seniorityId?: NullableIntFieldUpdateOperationsInput | number | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    afpInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    healthInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaveDays?: LeaveDaysUncheckedUpdateManyWithoutPersonNestedInput
    preInvoiceDetails?: PreInvoiceDetailUncheckedUpdateManyWithoutPersonNestedInput
  }

  export type PeopleUncheckedUpdateManyWithoutFeeCurrencyTypeInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    jobTitleId?: NullableIntFieldUpdateOperationsInput | number | null
    seniorityId?: NullableIntFieldUpdateOperationsInput | number | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    afpInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    healthInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PeopleUpdateWithoutLaptopCurrencyTypeInput = {
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaveDays?: LeaveDaysUpdateManyWithoutPersonNestedInput
    afpInstitution?: AFPInstitutionUpdateOneWithoutPeopleNestedInput
    client?: ClientUpdateOneWithoutPeopleNestedInput
    salaryCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleSalaryNestedInput
    feeCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleFeeNestedInput
    healthInstitution?: HealthInstitutionUpdateOneWithoutPeopleNestedInput
    jobTitle?: JobTitleUpdateOneWithoutPeopleNestedInput
    role?: RoleUpdateOneWithoutPeopleNestedInput
    seniority?: SeniorityUpdateOneWithoutPeopleNestedInput
    technicalStacks?: TechnicalsStacksUpdateOneWithoutPeopleNestedInput
    preInvoiceDetails?: PreInvoiceDetailUpdateManyWithoutPersonNestedInput
  }

  export type PeopleUncheckedUpdateWithoutLaptopCurrencyTypeInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    jobTitleId?: NullableIntFieldUpdateOperationsInput | number | null
    seniorityId?: NullableIntFieldUpdateOperationsInput | number | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    afpInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    healthInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaveDays?: LeaveDaysUncheckedUpdateManyWithoutPersonNestedInput
    preInvoiceDetails?: PreInvoiceDetailUncheckedUpdateManyWithoutPersonNestedInput
  }

  export type PeopleUncheckedUpdateManyWithoutLaptopCurrencyTypeInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    jobTitleId?: NullableIntFieldUpdateOperationsInput | number | null
    seniorityId?: NullableIntFieldUpdateOperationsInput | number | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    afpInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    healthInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PreInvoiceDetailUpdateWithoutCurrencyTypeInput = {
    status?: StringFieldUpdateOperationsInput | string
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    billableDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    leaveDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalConsumeDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    person?: PeopleUpdateOneWithoutPreInvoiceDetailsNestedInput
    preInvoice?: PreInvoiceUpdateOneWithoutDetailsNestedInput
  }

  export type PreInvoiceDetailUncheckedUpdateWithoutCurrencyTypeInput = {
    id?: IntFieldUpdateOperationsInput | number
    preInvoiceId?: NullableIntFieldUpdateOperationsInput | number | null
    personId?: NullableIntFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    billableDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    leaveDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalConsumeDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PreInvoiceDetailUncheckedUpdateManyWithoutCurrencyTypeInput = {
    id?: IntFieldUpdateOperationsInput | number
    preInvoiceId?: NullableIntFieldUpdateOperationsInput | number | null
    personId?: NullableIntFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    billableDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    leaveDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalConsumeDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PriceUpdateWithoutCurrencyTypeInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PriceUncheckedUpdateWithoutCurrencyTypeInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PriceUncheckedUpdateManyWithoutCurrencyTypeInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ContactCreateManyClientInput = {
    id?: number
    name: string
    lastName?: string | null
    email?: string | null
    phone?: string | null
    technicalStacksId?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PeopleCreateManyClientInput = {
    id?: number
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    roleId?: number | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    remote?: string | null
    jobTitleId?: number | null
    seniorityId?: number | null
    technicalStacksId?: number | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    afpInstitutionId?: number | null
    healthInstitutionId?: number | null
    bank?: string | null
    accountNumber?: string | null
    salaryCurrencyTypeId?: number | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: number | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopCurrencyTypeId?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PreInvoiceCreateManyClientInput = {
    id?: number
    contactId?: number | null
    total?: Decimal | DecimalJsLike | number | string | null
    status: string
    ocNumber?: string | null
    hesNumber?: string | null
    invoiceNumber?: string | null
    month: number
    year: number
    value: Decimal | DecimalJsLike | number | string
    rejectNote?: string | null
    ocAmount?: Decimal | DecimalJsLike | number | string | null
    edpNumber?: string | null
    completedBy?: string | null
    completedAt?: Date | string | null
    ufValueUsed?: Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type ProjectCreateManyClientInput = {
    id?: number
    name: string
    description?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type ContactUpdateWithoutClientInput = {
    name?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    technicalStacks?: TechnicalsStacksUpdateOneWithoutContactsNestedInput
    preInvoices?: PreInvoiceUpdateManyWithoutContactNestedInput
  }

  export type ContactUncheckedUpdateWithoutClientInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preInvoices?: PreInvoiceUncheckedUpdateManyWithoutContactNestedInput
  }

  export type ContactUncheckedUpdateManyWithoutClientInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PeopleUpdateWithoutClientInput = {
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaveDays?: LeaveDaysUpdateManyWithoutPersonNestedInput
    afpInstitution?: AFPInstitutionUpdateOneWithoutPeopleNestedInput
    salaryCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleSalaryNestedInput
    feeCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleFeeNestedInput
    laptopCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleLaptopNestedInput
    healthInstitution?: HealthInstitutionUpdateOneWithoutPeopleNestedInput
    jobTitle?: JobTitleUpdateOneWithoutPeopleNestedInput
    role?: RoleUpdateOneWithoutPeopleNestedInput
    seniority?: SeniorityUpdateOneWithoutPeopleNestedInput
    technicalStacks?: TechnicalsStacksUpdateOneWithoutPeopleNestedInput
    preInvoiceDetails?: PreInvoiceDetailUpdateManyWithoutPersonNestedInput
  }

  export type PeopleUncheckedUpdateWithoutClientInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    jobTitleId?: NullableIntFieldUpdateOperationsInput | number | null
    seniorityId?: NullableIntFieldUpdateOperationsInput | number | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    afpInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    healthInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaveDays?: LeaveDaysUncheckedUpdateManyWithoutPersonNestedInput
    preInvoiceDetails?: PreInvoiceDetailUncheckedUpdateManyWithoutPersonNestedInput
  }

  export type PeopleUncheckedUpdateManyWithoutClientInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    jobTitleId?: NullableIntFieldUpdateOperationsInput | number | null
    seniorityId?: NullableIntFieldUpdateOperationsInput | number | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    afpInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    healthInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PreInvoiceUpdateWithoutClientInput = {
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    ocNumber?: NullableStringFieldUpdateOperationsInput | string | null
    hesNumber?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    month?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rejectNote?: NullableStringFieldUpdateOperationsInput | string | null
    ocAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    edpNumber?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: NullableStringFieldUpdateOperationsInput | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ufValueUsed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contact?: ContactUpdateOneWithoutPreInvoicesNestedInput
    details?: PreInvoiceDetailUpdateManyWithoutPreInvoiceNestedInput
  }

  export type PreInvoiceUncheckedUpdateWithoutClientInput = {
    id?: IntFieldUpdateOperationsInput | number
    contactId?: NullableIntFieldUpdateOperationsInput | number | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    ocNumber?: NullableStringFieldUpdateOperationsInput | string | null
    hesNumber?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    month?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rejectNote?: NullableStringFieldUpdateOperationsInput | string | null
    ocAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    edpNumber?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: NullableStringFieldUpdateOperationsInput | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ufValueUsed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    details?: PreInvoiceDetailUncheckedUpdateManyWithoutPreInvoiceNestedInput
  }

  export type PreInvoiceUncheckedUpdateManyWithoutClientInput = {
    id?: IntFieldUpdateOperationsInput | number
    contactId?: NullableIntFieldUpdateOperationsInput | number | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    ocNumber?: NullableStringFieldUpdateOperationsInput | string | null
    hesNumber?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    month?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rejectNote?: NullableStringFieldUpdateOperationsInput | string | null
    ocAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    edpNumber?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: NullableStringFieldUpdateOperationsInput | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ufValueUsed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProjectUpdateWithoutClientInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProjectUncheckedUpdateWithoutClientInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProjectUncheckedUpdateManyWithoutClientInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PreInvoiceCreateManyContactInput = {
    id?: number
    clientId?: number | null
    total?: Decimal | DecimalJsLike | number | string | null
    status: string
    ocNumber?: string | null
    hesNumber?: string | null
    invoiceNumber?: string | null
    month: number
    year: number
    value: Decimal | DecimalJsLike | number | string
    rejectNote?: string | null
    ocAmount?: Decimal | DecimalJsLike | number | string | null
    edpNumber?: string | null
    completedBy?: string | null
    completedAt?: Date | string | null
    ufValueUsed?: Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PreInvoiceUpdateWithoutContactInput = {
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    ocNumber?: NullableStringFieldUpdateOperationsInput | string | null
    hesNumber?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    month?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rejectNote?: NullableStringFieldUpdateOperationsInput | string | null
    ocAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    edpNumber?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: NullableStringFieldUpdateOperationsInput | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ufValueUsed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneWithoutPreInvoicesNestedInput
    details?: PreInvoiceDetailUpdateManyWithoutPreInvoiceNestedInput
  }

  export type PreInvoiceUncheckedUpdateWithoutContactInput = {
    id?: IntFieldUpdateOperationsInput | number
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    ocNumber?: NullableStringFieldUpdateOperationsInput | string | null
    hesNumber?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    month?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rejectNote?: NullableStringFieldUpdateOperationsInput | string | null
    ocAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    edpNumber?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: NullableStringFieldUpdateOperationsInput | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ufValueUsed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    details?: PreInvoiceDetailUncheckedUpdateManyWithoutPreInvoiceNestedInput
  }

  export type PreInvoiceUncheckedUpdateManyWithoutContactInput = {
    id?: IntFieldUpdateOperationsInput | number
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    ocNumber?: NullableStringFieldUpdateOperationsInput | string | null
    hesNumber?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    month?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rejectNote?: NullableStringFieldUpdateOperationsInput | string | null
    ocAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    edpNumber?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: NullableStringFieldUpdateOperationsInput | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ufValueUsed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ufDateUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PeopleCreateManyHealthInstitutionInput = {
    id?: number
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    roleId?: number | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    clientId?: number | null
    remote?: string | null
    jobTitleId?: number | null
    seniorityId?: number | null
    technicalStacksId?: number | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    afpInstitutionId?: number | null
    bank?: string | null
    accountNumber?: string | null
    salaryCurrencyTypeId?: number | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: number | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopCurrencyTypeId?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PeopleUpdateWithoutHealthInstitutionInput = {
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaveDays?: LeaveDaysUpdateManyWithoutPersonNestedInput
    afpInstitution?: AFPInstitutionUpdateOneWithoutPeopleNestedInput
    client?: ClientUpdateOneWithoutPeopleNestedInput
    salaryCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleSalaryNestedInput
    feeCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleFeeNestedInput
    laptopCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleLaptopNestedInput
    jobTitle?: JobTitleUpdateOneWithoutPeopleNestedInput
    role?: RoleUpdateOneWithoutPeopleNestedInput
    seniority?: SeniorityUpdateOneWithoutPeopleNestedInput
    technicalStacks?: TechnicalsStacksUpdateOneWithoutPeopleNestedInput
    preInvoiceDetails?: PreInvoiceDetailUpdateManyWithoutPersonNestedInput
  }

  export type PeopleUncheckedUpdateWithoutHealthInstitutionInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    jobTitleId?: NullableIntFieldUpdateOperationsInput | number | null
    seniorityId?: NullableIntFieldUpdateOperationsInput | number | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    afpInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaveDays?: LeaveDaysUncheckedUpdateManyWithoutPersonNestedInput
    preInvoiceDetails?: PreInvoiceDetailUncheckedUpdateManyWithoutPersonNestedInput
  }

  export type PeopleUncheckedUpdateManyWithoutHealthInstitutionInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    jobTitleId?: NullableIntFieldUpdateOperationsInput | number | null
    seniorityId?: NullableIntFieldUpdateOperationsInput | number | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    afpInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PeopleCreateManyJobTitleInput = {
    id?: number
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    roleId?: number | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    clientId?: number | null
    remote?: string | null
    seniorityId?: number | null
    technicalStacksId?: number | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    afpInstitutionId?: number | null
    healthInstitutionId?: number | null
    bank?: string | null
    accountNumber?: string | null
    salaryCurrencyTypeId?: number | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: number | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopCurrencyTypeId?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PeopleUpdateWithoutJobTitleInput = {
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaveDays?: LeaveDaysUpdateManyWithoutPersonNestedInput
    afpInstitution?: AFPInstitutionUpdateOneWithoutPeopleNestedInput
    client?: ClientUpdateOneWithoutPeopleNestedInput
    salaryCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleSalaryNestedInput
    feeCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleFeeNestedInput
    laptopCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleLaptopNestedInput
    healthInstitution?: HealthInstitutionUpdateOneWithoutPeopleNestedInput
    role?: RoleUpdateOneWithoutPeopleNestedInput
    seniority?: SeniorityUpdateOneWithoutPeopleNestedInput
    technicalStacks?: TechnicalsStacksUpdateOneWithoutPeopleNestedInput
    preInvoiceDetails?: PreInvoiceDetailUpdateManyWithoutPersonNestedInput
  }

  export type PeopleUncheckedUpdateWithoutJobTitleInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    seniorityId?: NullableIntFieldUpdateOperationsInput | number | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    afpInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    healthInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaveDays?: LeaveDaysUncheckedUpdateManyWithoutPersonNestedInput
    preInvoiceDetails?: PreInvoiceDetailUncheckedUpdateManyWithoutPersonNestedInput
  }

  export type PeopleUncheckedUpdateManyWithoutJobTitleInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    seniorityId?: NullableIntFieldUpdateOperationsInput | number | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    afpInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    healthInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PeopleCreateManyRoleInput = {
    id?: number
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    clientId?: number | null
    remote?: string | null
    jobTitleId?: number | null
    seniorityId?: number | null
    technicalStacksId?: number | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    afpInstitutionId?: number | null
    healthInstitutionId?: number | null
    bank?: string | null
    accountNumber?: string | null
    salaryCurrencyTypeId?: number | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: number | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopCurrencyTypeId?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PeopleUpdateWithoutRoleInput = {
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaveDays?: LeaveDaysUpdateManyWithoutPersonNestedInput
    afpInstitution?: AFPInstitutionUpdateOneWithoutPeopleNestedInput
    client?: ClientUpdateOneWithoutPeopleNestedInput
    salaryCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleSalaryNestedInput
    feeCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleFeeNestedInput
    laptopCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleLaptopNestedInput
    healthInstitution?: HealthInstitutionUpdateOneWithoutPeopleNestedInput
    jobTitle?: JobTitleUpdateOneWithoutPeopleNestedInput
    seniority?: SeniorityUpdateOneWithoutPeopleNestedInput
    technicalStacks?: TechnicalsStacksUpdateOneWithoutPeopleNestedInput
    preInvoiceDetails?: PreInvoiceDetailUpdateManyWithoutPersonNestedInput
  }

  export type PeopleUncheckedUpdateWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    jobTitleId?: NullableIntFieldUpdateOperationsInput | number | null
    seniorityId?: NullableIntFieldUpdateOperationsInput | number | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    afpInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    healthInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaveDays?: LeaveDaysUncheckedUpdateManyWithoutPersonNestedInput
    preInvoiceDetails?: PreInvoiceDetailUncheckedUpdateManyWithoutPersonNestedInput
  }

  export type PeopleUncheckedUpdateManyWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    jobTitleId?: NullableIntFieldUpdateOperationsInput | number | null
    seniorityId?: NullableIntFieldUpdateOperationsInput | number | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    afpInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    healthInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PeopleCreateManySeniorityInput = {
    id?: number
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    roleId?: number | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    clientId?: number | null
    remote?: string | null
    jobTitleId?: number | null
    technicalStacksId?: number | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    afpInstitutionId?: number | null
    healthInstitutionId?: number | null
    bank?: string | null
    accountNumber?: string | null
    salaryCurrencyTypeId?: number | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: number | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopCurrencyTypeId?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PeopleUpdateWithoutSeniorityInput = {
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaveDays?: LeaveDaysUpdateManyWithoutPersonNestedInput
    afpInstitution?: AFPInstitutionUpdateOneWithoutPeopleNestedInput
    client?: ClientUpdateOneWithoutPeopleNestedInput
    salaryCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleSalaryNestedInput
    feeCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleFeeNestedInput
    laptopCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleLaptopNestedInput
    healthInstitution?: HealthInstitutionUpdateOneWithoutPeopleNestedInput
    jobTitle?: JobTitleUpdateOneWithoutPeopleNestedInput
    role?: RoleUpdateOneWithoutPeopleNestedInput
    technicalStacks?: TechnicalsStacksUpdateOneWithoutPeopleNestedInput
    preInvoiceDetails?: PreInvoiceDetailUpdateManyWithoutPersonNestedInput
  }

  export type PeopleUncheckedUpdateWithoutSeniorityInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    jobTitleId?: NullableIntFieldUpdateOperationsInput | number | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    afpInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    healthInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaveDays?: LeaveDaysUncheckedUpdateManyWithoutPersonNestedInput
    preInvoiceDetails?: PreInvoiceDetailUncheckedUpdateManyWithoutPersonNestedInput
  }

  export type PeopleUncheckedUpdateManyWithoutSeniorityInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    jobTitleId?: NullableIntFieldUpdateOperationsInput | number | null
    technicalStacksId?: NullableIntFieldUpdateOperationsInput | number | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    afpInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    healthInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PeopleCreateManyTechnicalStacksInput = {
    id?: number
    name: string
    lastName: string
    dni?: string | null
    corporateName?: string | null
    corporateEmail?: string | null
    contractType?: string | null
    contractStart?: Date | string | null
    contractEnd?: Date | string | null
    contractClientEnd?: Date | string | null
    roleId?: number | null
    isActive?: boolean | null
    causal?: string | null
    reason?: string | null
    clientId?: number | null
    remote?: string | null
    jobTitleId?: number | null
    seniorityId?: number | null
    salesManager?: string | null
    searchManager?: string | null
    deliveryManager?: string | null
    administrativeArea?: string | null
    leader?: string | null
    leaderMail?: string | null
    leaderPhone?: string | null
    birth?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    sublocality?: string | null
    locality?: string | null
    country?: string | null
    nationality?: string | null
    afpInstitutionId?: number | null
    healthInstitutionId?: number | null
    bank?: string | null
    accountNumber?: string | null
    salaryCurrencyTypeId?: number | null
    netSalary?: Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: number | null
    serviceFee?: Decimal | DecimalJsLike | number | string | null
    fee?: boolean | null
    billableDay?: number | null
    laptopCurrencyTypeId?: number | null
    laptopBonus?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type ContactCreateManyTechnicalStacksInput = {
    id?: number
    name: string
    lastName?: string | null
    email?: string | null
    phone?: string | null
    clientId?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PeopleUpdateWithoutTechnicalStacksInput = {
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaveDays?: LeaveDaysUpdateManyWithoutPersonNestedInput
    afpInstitution?: AFPInstitutionUpdateOneWithoutPeopleNestedInput
    client?: ClientUpdateOneWithoutPeopleNestedInput
    salaryCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleSalaryNestedInput
    feeCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleFeeNestedInput
    laptopCurrencyType?: CurrencyTypeUpdateOneWithoutPeopleLaptopNestedInput
    healthInstitution?: HealthInstitutionUpdateOneWithoutPeopleNestedInput
    jobTitle?: JobTitleUpdateOneWithoutPeopleNestedInput
    role?: RoleUpdateOneWithoutPeopleNestedInput
    seniority?: SeniorityUpdateOneWithoutPeopleNestedInput
    preInvoiceDetails?: PreInvoiceDetailUpdateManyWithoutPersonNestedInput
  }

  export type PeopleUncheckedUpdateWithoutTechnicalStacksInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    jobTitleId?: NullableIntFieldUpdateOperationsInput | number | null
    seniorityId?: NullableIntFieldUpdateOperationsInput | number | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    afpInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    healthInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaveDays?: LeaveDaysUncheckedUpdateManyWithoutPersonNestedInput
    preInvoiceDetails?: PreInvoiceDetailUncheckedUpdateManyWithoutPersonNestedInput
  }

  export type PeopleUncheckedUpdateManyWithoutTechnicalStacksInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    corporateName?: NullableStringFieldUpdateOperationsInput | string | null
    corporateEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    contractStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractClientEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: NullableBoolFieldUpdateOperationsInput | boolean | null
    causal?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    remote?: NullableStringFieldUpdateOperationsInput | string | null
    jobTitleId?: NullableIntFieldUpdateOperationsInput | number | null
    seniorityId?: NullableIntFieldUpdateOperationsInput | number | null
    salesManager?: NullableStringFieldUpdateOperationsInput | string | null
    searchManager?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryManager?: NullableStringFieldUpdateOperationsInput | string | null
    administrativeArea?: NullableStringFieldUpdateOperationsInput | string | null
    leader?: NullableStringFieldUpdateOperationsInput | string | null
    leaderMail?: NullableStringFieldUpdateOperationsInput | string | null
    leaderPhone?: NullableStringFieldUpdateOperationsInput | string | null
    birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    sublocality?: NullableStringFieldUpdateOperationsInput | string | null
    locality?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    afpInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    healthInstitutionId?: NullableIntFieldUpdateOperationsInput | number | null
    bank?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    netSalary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feeCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    billableDay?: NullableIntFieldUpdateOperationsInput | number | null
    laptopCurrencyTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    laptopBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ContactUpdateWithoutTechnicalStacksInput = {
    name?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneWithoutContactsNestedInput
    preInvoices?: PreInvoiceUpdateManyWithoutContactNestedInput
  }

  export type ContactUncheckedUpdateWithoutTechnicalStacksInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preInvoices?: PreInvoiceUncheckedUpdateManyWithoutContactNestedInput
  }

  export type ContactUncheckedUpdateManyWithoutTechnicalStacksInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type LeaveDaysCreateManyPersonInput = {
    id?: number
    startDate: Date | string
    endDate: Date | string
    reason?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PreInvoiceDetailCreateManyPersonInput = {
    id?: number
    preInvoiceId?: number | null
    status: string
    value: Decimal | DecimalJsLike | number | string
    currency_type?: number | null
    billableDays: Decimal | DecimalJsLike | number | string
    leaveDays: Decimal | DecimalJsLike | number | string
    totalConsumeDays: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type LeaveDaysUpdateWithoutPersonInput = {
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type LeaveDaysUncheckedUpdateWithoutPersonInput = {
    id?: IntFieldUpdateOperationsInput | number
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type LeaveDaysUncheckedUpdateManyWithoutPersonInput = {
    id?: IntFieldUpdateOperationsInput | number
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PreInvoiceDetailUpdateWithoutPersonInput = {
    status?: StringFieldUpdateOperationsInput | string
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    billableDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    leaveDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalConsumeDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CurrencyType?: CurrencyTypeUpdateOneWithoutPreInvoiceDetailNestedInput
    preInvoice?: PreInvoiceUpdateOneWithoutDetailsNestedInput
  }

  export type PreInvoiceDetailUncheckedUpdateWithoutPersonInput = {
    id?: IntFieldUpdateOperationsInput | number
    preInvoiceId?: NullableIntFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_type?: NullableIntFieldUpdateOperationsInput | number | null
    billableDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    leaveDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalConsumeDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PreInvoiceDetailUncheckedUpdateManyWithoutPersonInput = {
    id?: IntFieldUpdateOperationsInput | number
    preInvoiceId?: NullableIntFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_type?: NullableIntFieldUpdateOperationsInput | number | null
    billableDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    leaveDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalConsumeDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PreInvoiceDetailCreateManyPreInvoiceInput = {
    id?: number
    personId?: number | null
    status: string
    value: Decimal | DecimalJsLike | number | string
    currency_type?: number | null
    billableDays: Decimal | DecimalJsLike | number | string
    leaveDays: Decimal | DecimalJsLike | number | string
    totalConsumeDays: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type PreInvoiceDetailUpdateWithoutPreInvoiceInput = {
    status?: StringFieldUpdateOperationsInput | string
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    billableDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    leaveDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalConsumeDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CurrencyType?: CurrencyTypeUpdateOneWithoutPreInvoiceDetailNestedInput
    person?: PeopleUpdateOneWithoutPreInvoiceDetailsNestedInput
  }

  export type PreInvoiceDetailUncheckedUpdateWithoutPreInvoiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    personId?: NullableIntFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_type?: NullableIntFieldUpdateOperationsInput | number | null
    billableDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    leaveDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalConsumeDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PreInvoiceDetailUncheckedUpdateManyWithoutPreInvoiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    personId?: NullableIntFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_type?: NullableIntFieldUpdateOperationsInput | number | null
    billableDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    leaveDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalConsumeDays?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}