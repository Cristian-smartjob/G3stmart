generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AFPInstitution {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime? @default(now()) @map("updated_at") @db.Timestamptz(6)
  people    People[]

  @@map("AFPInstitution")
}

model CurrencyType {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(50)
  symbol           String             @db.VarChar(6)
  createdAt        DateTime?          @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt        DateTime?          @default(now()) @map("updated_at") @db.Timestamptz(6)
  clients          Client[]
  peopleSalary     People[]           @relation("SalaryCurrencyType")
  peopleFee        People[]           @relation("FeeCurrencyType")
  peopleLaptop     People[]           @relation("LaptopCurrencyType")
  PreInvoiceDetail PreInvoiceDetail[]
  Price            Price[]

  @@map("CurrencyType")
}

model Client {
  id               Int           @id @default(autoincrement())
  name             String        @db.VarChar(255)
  currencyTypeId   Int?          @map("currency_type_id")
  billableDay      Decimal?      @default(0) @map("billable_day") @db.Decimal(10, 2)
  rut              String?       @db.VarChar(20)
  address          String?
  companyName      String?       @map("company_name") @db.VarChar(255)
  marginPercentage Decimal?      @default(10.00) @map("margin_percentage") @db.Decimal(10, 2)
  createdAt        DateTime?     @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt        DateTime?     @default(now()) @map("updated_at") @db.Timestamptz(6)
  currencyType     CurrencyType? @relation(fields: [currencyTypeId], references: [id])
  contacts         Contact[]
  people           People[]
  preInvoices      PreInvoice[]
  projects         Project[]

  @@map("Client")
}

model Contact {
  id                Int               @id @default(autoincrement())
  name              String            @db.VarChar(255)
  lastName          String?           @map("last_name") @db.VarChar(255)
  email             String?           @db.VarChar(255)
  phone             String?           @db.VarChar(50)
  clientId          Int?              @map("client_id")
  technicalStacksId Int?              @map("technical_stacks_id")
  createdAt         DateTime?         @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime?         @default(now()) @map("updated_at") @db.Timestamptz(6)
  client            Client?           @relation(fields: [clientId], references: [id], onDelete: Cascade)
  technicalStacks   TechnicalsStacks? @relation(fields: [technicalStacksId], references: [id])
  preInvoices       PreInvoice[]

  @@map("Contact")
}

model HealthInstitution {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime? @default(now()) @map("updated_at") @db.Timestamptz(6)
  people    People[]

  @@map("HealthInstitution")
}

model Holidays {
  id        Int       @id @default(autoincrement())
  date      DateTime  @db.Date
  name      String    @db.VarChar(255)
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime? @default(now()) @map("updated_at") @db.Timestamptz(6)

  @@map("Holidays")
}

model JobTitle {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  description String?
  createdAt   DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime? @default(now()) @map("updated_at") @db.Timestamptz(6)
  people      People[]

  @@map("JobTitle")
}

model Role {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(100)
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime? @default(now()) @map("updated_at") @db.Timestamptz(6)
  people    People[]

  @@map("Role")
}

model Seniority {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(100)
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime? @default(now()) @map("updated_at") @db.Timestamptz(6)
  people    People[]

  @@map("Seniority")
}

model SkillLevel {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(100)
  level     String    @db.VarChar(2)
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime? @default(now()) @map("updated_at") @db.Timestamptz(6)

  @@map("SkillLevel")
}

model TechnicalsStacks {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime? @default(now()) @map("updated_at") @db.Timestamptz(6)
  people    People[]
  contacts  Contact[]

  @@map("TechnicalsStacks")
}

model Price {
  id            Int           @id @default(autoincrement())
  name          String        @db.VarChar(255)
  description   String?
  value         Decimal       @db.Decimal(12, 2)
  currency_type Int?
  createdAt     DateTime?     @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime?     @default(now()) @map("updated_at") @db.Timestamptz(6)
  CurrencyType  CurrencyType? @relation(fields: [currency_type], references: [id])

  @@map("Price")
}

model People {
  id                   Int                @id @default(autoincrement())
  name                 String             @db.VarChar(255)
  lastName             String             @map("last_name") @db.VarChar(255)
  dni                  String?            @db.VarChar(50)
  corporateName        String?            @map("corporate_name") @db.VarChar(50)
  corporateEmail       String?            @map("corporate_email") @db.VarChar(255)
  contractType         String?            @map("contract_type") @db.VarChar(30)
  contractStart        DateTime?          @map("contract_start") @db.Date
  contractEnd          DateTime?          @map("contract_end") @db.Date
  contractClientEnd    DateTime?          @map("contract_client_end") @db.Date
  roleId               Int?               @map("role_id")
  isActive             Boolean?           @map("is_active")
  causal               String?            @db.VarChar(255)
  reason               String?            @db.VarChar(255)
  clientId             Int?               @map("client_id")
  remote               String?            @db.VarChar(50)
  jobTitleId           Int?               @map("job_title_id")
  seniorityId          Int?               @map("seniority_id")
  technicalStacksId    Int?               @map("technical_stacks_id")
  salesManager         String?            @map("sales_manager") @db.VarChar(80)
  searchManager        String?            @map("search_manager") @db.VarChar(80)
  deliveryManager      String?            @map("delivery_manager") @db.VarChar(80)
  administrativeArea   String?            @map("administrative_area_level_1") @db.VarChar(255)
  leader               String?            @db.VarChar(150)
  leaderMail           String?            @map("leader_mail") @db.VarChar(150)
  leaderPhone          String?            @map("leader_phone") @db.VarChar(50)
  birth                DateTime?          @db.Date
  phone                String?            @db.VarChar(50)
  email                String?            @db.VarChar(255)
  address              String?
  sublocality          String?            @db.VarChar(255)
  locality             String?            @db.VarChar(255)
  country              String?            @db.VarChar(100)
  nationality          String?            @db.VarChar(100)
  afpInstitutionId     Int?               @map("afp_institution_id")
  healthInstitutionId  Int?               @map("health_institution_id")
  bank                 String?            @db.VarChar(100)
  accountNumber        String?            @map("account_number")
  salaryCurrencyTypeId Int?               @map("salary_currency_type_id")
  netSalary            Decimal?           @map("net_salary") @db.Decimal(12, 2)
  feeCurrencyTypeId    Int?               @map("fee_currency_type_id")
  serviceFee           Decimal?           @map("service_fee") @db.Decimal(12, 2)
  fee                  Boolean?
  billableDay          Int?               @map("billable_day")
  laptopCurrencyTypeId Int?               @map("laptop_currency_type_id")
  laptopBonus          Decimal?           @map("laptop_bonus") @db.Decimal(12, 2)
  comment              String?            @db.VarChar(255)
  createdAt            DateTime?          @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt            DateTime?          @default(now()) @map("updated_at") @db.Timestamptz(6)
  leaveDays            LeaveDays[]
  afpInstitution       AFPInstitution?    @relation(fields: [afpInstitutionId], references: [id])
  client               Client?            @relation(fields: [clientId], references: [id])
  salaryCurrencyType   CurrencyType?      @relation("SalaryCurrencyType", fields: [salaryCurrencyTypeId], references: [id])
  feeCurrencyType      CurrencyType?      @relation("FeeCurrencyType", fields: [feeCurrencyTypeId], references: [id])
  laptopCurrencyType   CurrencyType?      @relation("LaptopCurrencyType", fields: [laptopCurrencyTypeId], references: [id])
  healthInstitution    HealthInstitution? @relation(fields: [healthInstitutionId], references: [id])
  jobTitle             JobTitle?          @relation(fields: [jobTitleId], references: [id])
  role                 Role?              @relation(fields: [roleId], references: [id])
  seniority            Seniority?         @relation(fields: [seniorityId], references: [id])
  technicalStacks      TechnicalsStacks?  @relation(fields: [technicalStacksId], references: [id])
  preInvoiceDetails    PreInvoiceDetail[]

  @@map("People")
}

model LeaveDays {
  id        Int       @id @default(autoincrement())
  personId  Int?      @map("person_id")
  startDate DateTime  @map("start_date") @db.Date
  endDate   DateTime  @map("end_date") @db.Date
  reason    String?
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime? @default(now()) @map("updated_at") @db.Timestamptz(6)
  person    People?   @relation(fields: [personId], references: [id], onDelete: Cascade)

  @@map("LeaveDays")
}

model PreInvoice {
  id            Int                @id @default(autoincrement())
  clientId      Int?               @map("client_id")
  contactId     Int?               @map("contact_id")
  total         Decimal?           @default(0) @db.Decimal(12, 2)
  status        String             @db.VarChar(50)
  ocNumber      String?            @map("oc_number") @db.VarChar(50)
  hesNumber     String?            @map("hes_number") @db.VarChar(50)
  invoiceNumber String?            @map("invoice_number") @db.VarChar(50)
  month         Int
  year          Int
  value         Decimal            @db.Decimal(12, 2)
  rejectNote    String?            @map("reject_note")
  ocAmount      Decimal?           @map("oc_amount") @db.Decimal(12, 2)
  edpNumber     String?            @map("edp_number") @db.VarChar(50)
  completedBy   String?            @map("completed_by") @db.VarChar(255)
  completedAt   DateTime?          @map("completed_at") @db.Timestamptz(6)
  ufValueUsed   Decimal?           @map("uf_value_used") @db.Decimal(12, 2)
  ufDateUsed    DateTime?          @map("uf_date_used") @db.Date
  createdAt     DateTime?          @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime?          @default(now()) @map("updated_at") @db.Timestamptz(6)
  client        Client?            @relation(fields: [clientId], references: [id], onDelete: Cascade)
  contact       Contact?           @relation(fields: [contactId], references: [id])
  details       PreInvoiceDetail[]

  @@map("PreInvoice")
}

model PreInvoiceDetail {
  id               Int           @id @default(autoincrement())
  preInvoiceId     Int?          @map("pre_invoice_id")
  personId         Int?          @map("person_id")
  status           String        @db.VarChar(50)
  value            Decimal       @db.Decimal(12, 2)
  currency_type    Int?
  billableDays     Decimal       @map("billable_days") @db.Decimal(10, 2)
  leaveDays        Decimal       @map("leave_days") @db.Decimal(10, 2)
  totalConsumeDays Decimal       @map("total_consume_days") @db.Decimal(10, 2)
  createdAt        DateTime?     @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt        DateTime?     @default(now()) @map("updated_at") @db.Timestamptz(6)
  CurrencyType     CurrencyType? @relation(fields: [currency_type], references: [id])
  person           People?       @relation(fields: [personId], references: [id], onDelete: Cascade)
  preInvoice       PreInvoice?   @relation(fields: [preInvoiceId], references: [id], onDelete: Cascade)

  @@map("PreInvoiceDetail")
}

model Project {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  description String?
  clientId    Int?      @map("client_id")
  startDate   DateTime? @map("start_date") @db.Date
  endDate     DateTime? @map("end_date") @db.Date
  status      String?   @db.VarChar(50)
  createdAt   DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime? @default(now()) @map("updated_at") @db.Timestamptz(6)
  client      Client?   @relation(fields: [clientId], references: [id], onDelete: Cascade)

  @@map("Project")
}

model CurrencyHistory {
  id         Int      @id @default(autoincrement())
  date       DateTime @unique
  usd        Float
  uf         Float
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
